{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/about/about.component.html","webpack:///src/app/active-list/active-list.component.html","webpack:///src/app/app.component.html","webpack:///src/app/audit-log/audit-log.component.html","webpack:///src/app/email-sent/email-sent.component.html","webpack:///src/app/equipment-types/equipment-types.component.html","webpack:///src/app/equipment/equipment.component.html","webpack:///src/app/farm-health/farm-health.component.html","webpack:///src/app/farm/farm.component.html","webpack:///src/app/fault-log/fault-log.component.html","webpack:///src/app/faultreport/faultreport.component.html","webpack:///src/app/fm-main/fm-main.component.html","webpack:///src/app/home/home.component.html","webpack:///src/app/infrastructure/infrastructure.component.html","webpack:///src/app/insurnace-provider/insurnace-provider.component.html","webpack:///src/app/maintenance-log/maintenance-log.component.html","webpack:///src/app/maintenance-report/maintenance-report.component.html","webpack:///src/app/new-password/new-password.component.html","webpack:///src/app/pages/blank/blank.component.html","webpack:///src/app/pages/errors/error/error.component.html","webpack:///src/app/pages/errors/not-found/not-found.component.html","webpack:///src/app/pages/pages.component.html","webpack:///src/app/pages/search/search.component.html","webpack:///src/app/pages/ui/dialog/dialog-overview-example-dialog.html","webpack:///src/app/pages/ui/dialog/dialog.component.html","webpack:///src/app/repair-log/repair-log.component.html","webpack:///src/app/request-email/request-email.component.html","webpack:///src/app/scheduledtasks/scheduledtasks.component.html","webpack:///src/app/section-report/section-report.component.html","webpack:///src/app/section-type/section-type.component.html","webpack:///src/app/section/section.component.html","webpack:///src/app/skill/skill.component.html","webpack:///src/app/sr-provider/sr-provider.component.html","webpack:///src/app/staff-schedule/staff-schedule.component.html","webpack:///src/app/staff/staff.component.html","webpack:///src/app/task-type/task-type.component.html","webpack:///src/app/task/task.component.html","webpack:///src/app/test/test.component.html","webpack:///src/app/theme/components/applications/applications.component.html","webpack:///src/app/theme/components/breadcrumb/breadcrumb.component.html","webpack:///src/app/theme/components/flags-menu/flags-menu.component.html","webpack:///src/app/theme/components/menu/horizontal-menu/horizontal-menu.component.html","webpack:///src/app/theme/components/menu/vertical-menu/vertical-menu.component.html","webpack:///src/app/theme/components/messages/messages.component.html","webpack:///src/app/theme/components/sidenav/sidenav.component.html","webpack:///src/app/theme/components/user-menu/user-menu.component.html","webpack:///src/app/vehicle-service/vehicle-service.component.html","webpack:///src/app/vehicle-types/vehicle-types.component.html","webpack:///src/app/vehicle/vehicle.component.html","webpack:///src/app/Models/Farm.ts","webpack:///src/app/Models/Fault.ts","webpack:///src/app/Models/Infrastructures.ts","webpack:///src/app/Models/InsuranceProvider.ts","webpack:///src/app/Models/Maintenance.ts","webpack:///src/app/Models/RepairLogs.ts","webpack:///src/app/Models/RepairRequests.ts","webpack:///src/app/Models/SRProvider.ts","webpack:///src/app/Models/ScheduledTasks.ts","webpack:///src/app/Models/Section.ts","webpack:///src/app/Models/SectionType.ts","webpack:///src/app/Models/Skill.ts","webpack:///src/app/Models/Task.ts","webpack:///src/app/Models/Task_Type.ts","webpack:///src/app/Models/VehicleService.ts","webpack:///src/app/Models/Vehicles.ts","webpack:///src/app/Models/equipment.ts","webpack:///src/app/about/about.component.scss","webpack:///src/app/about/about.component.ts","webpack:///src/app/active-list/active-list.component.scss","webpack:///src/app/active-list/active-list.component.ts","webpack:///src/app/app.component.scss","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/app.routing.ts","webpack:///src/app/app.settings.model.ts","webpack:///src/app/app.settings.ts","webpack:///src/app/audit-log/audit-log.component.scss","webpack:///src/app/audit-log/audit-log.component.ts","webpack:///src/app/email-sent/email-sent.component.scss","webpack:///src/app/email-sent/email-sent.component.ts","webpack:///src/app/equipment-types/equipment-types.component.scss","webpack:///src/app/equipment-types/equipment-types.component.ts","webpack:///src/app/equipment/equipment.component.scss","webpack:///src/app/equipment/equipment.component.ts","webpack:///src/app/farm-health/farm-health.component.scss","webpack:///src/app/farm-health/farm-health.component.ts","webpack:///src/app/farm/farm.component.scss","webpack:///src/app/farm/farm.component.ts","webpack:///src/app/fault-log/fault-log.component.scss","webpack:///src/app/fault-log/fault-log.component.ts","webpack:///src/app/faultreport/faultreport.component.scss","webpack:///src/app/faultreport/faultreport.component.ts","webpack:///src/app/fm-main/fm-main.component.scss","webpack:///src/app/fm-main/fm-main.component.ts","webpack:///src/app/home/home.component.scss","webpack:///src/app/home/home.component.ts","webpack:///src/app/infrastructure/infrastructure.component.scss","webpack:///src/app/infrastructure/infrastructure.component.ts","webpack:///src/app/insurnace-provider/insurnace-provider.component.scss","webpack:///src/app/insurnace-provider/insurnace-provider.component.ts","webpack:///src/app/maintenance-log/maintenance-log.component.scss","webpack:///src/app/maintenance-log/maintenance-log.component.ts","webpack:///src/app/maintenance-report/maintenance-report.component.scss","webpack:///src/app/maintenance-report/maintenance-report.component.ts","webpack:///src/app/new-password/new-password.component.scss","webpack:///src/app/new-password/new-password.component.ts","webpack:///src/app/pages/blank/blank.component.css","webpack:///src/app/pages/blank/blank.component.ts","webpack:///src/app/pages/errors/error/error.component.ts","webpack:///src/app/pages/errors/not-found/not-found.component.ts","webpack:///src/app/pages/pages.component.scss","webpack:///src/app/pages/pages.component.ts","webpack:///src/app/pages/search/search.component.ts","webpack:///src/app/pages/ui/dialog/dialog.component.ts","webpack:///src/app/repair-log/repair-log.component.scss","webpack:///src/app/repair-log/repair-log.component.ts","webpack:///src/app/request-email/request-email.component.scss","webpack:///src/app/request-email/request-email.component.ts","webpack:///src/app/scheduledtasks/scheduledtasks.component.scss","webpack:///src/app/scheduledtasks/scheduledtasks.component.ts","webpack:///src/app/section-report/section-report.component.scss","webpack:///src/app/section-report/section-report.component.ts","webpack:///src/app/section-type/section-type.component.scss","webpack:///src/app/section-type/section-type.component.ts","webpack:///src/app/section/section.component.scss","webpack:///src/app/section/section.component.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/skill/skill.component.scss","webpack:///src/app/skill/skill.component.ts","webpack:///src/app/sr-provider/sr-provider.component.scss","webpack:///src/app/sr-provider/sr-provider.component.ts","webpack:///src/app/staff-schedule/staff-schedule.component.scss","webpack:///src/app/staff-schedule/staff-schedule.component.ts","webpack:///src/app/staff/staff.component.scss","webpack:///src/app/staff/staff.component.ts","webpack:///src/app/task-type/task-type.component.scss","webpack:///src/app/task-type/task-type.component.ts","webpack:///src/app/task/task.component.scss","webpack:///src/app/task/task.component.ts","webpack:///src/app/test/test.component.scss","webpack:///src/app/test/test.component.ts","webpack:///src/app/theme/components/applications/applications.component.scss","webpack:///src/app/theme/components/applications/applications.component.ts","webpack:///src/app/theme/components/breadcrumb/breadcrumb.component.scss","webpack:///src/app/theme/components/breadcrumb/breadcrumb.component.ts","webpack:///src/app/theme/components/flags-menu/flags-menu.component.scss","webpack:///src/app/theme/components/flags-menu/flags-menu.component.ts","webpack:///src/app/theme/components/fullscreen/fullscreen.component.ts","webpack:///src/app/theme/components/menu/horizontal-menu/horizontal-menu.component.scss","webpack:///src/app/theme/components/menu/horizontal-menu/horizontal-menu.component.ts","webpack:///src/app/theme/components/menu/menu.model.ts","webpack:///src/app/theme/components/menu/menu.service.ts","webpack:///src/app/theme/components/menu/menu.ts","webpack:///src/app/theme/components/menu/vertical-menu/vertical-menu.component.scss","webpack:///src/app/theme/components/menu/vertical-menu/vertical-menu.component.ts","webpack:///src/app/theme/components/messages/messages.component.scss","webpack:///src/app/theme/components/messages/messages.component.ts","webpack:///src/app/theme/components/messages/messages.service.ts","webpack:///src/app/theme/components/sidenav/sidenav.component.scss","webpack:///src/app/theme/components/sidenav/sidenav.component.ts","webpack:///src/app/theme/components/user-menu/user-menu.component.scss","webpack:///src/app/theme/components/user-menu/user-menu.component.ts","webpack:///src/app/theme/pipes/pagination/pagination.pipe.ts","webpack:///src/app/theme/pipes/pipes.module.ts","webpack:///src/app/theme/pipes/profilePicture/profilePicture.pipe.ts","webpack:///src/app/theme/pipes/search/chat-person-search.pipe.ts","webpack:///src/app/theme/pipes/search/mail-search.pipe.ts","webpack:///src/app/theme/pipes/search/user-search.pipe.ts","webpack:///src/app/theme/pipes/truncate/truncate.pipe.ts","webpack:///src/app/theme/utils/custom-overlay-container.ts","webpack:///src/app/vehicle-service/vehicle-service.component.scss","webpack:///src/app/vehicle-service/vehicle-service.component.ts","webpack:///src/app/vehicle-types/vehicle-types.component.scss","webpack:///src/app/vehicle-types/vehicle-types.component.ts","webpack:///src/app/vehicle/vehicle.component.scss","webpack:///src/app/vehicle/vehicle.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","Farm","Faults","Infrastructures","Insurance","Maintenance","RepairLogs","RepairRequests","SRProviders","ScheduledTasks","Sections","SectionTypes","Skill","Task","Task_Type","VehicleService","Vehicles","Equipment","AboutComponent","selector","template","ActiveListComponent","AppComponent","appSettings","settings","DEFAULT_PERFECT_SCROLLBAR_CONFIG","wheelPropagation","suppressScrollX","AppModule","imports","forRoot","apiKey","provide","useFactory","declarations","entryComponents","providers","useValue","useClass","bootstrap","routes","path","component","children","loadChildren","m","UsersModule","data","breadcrumb","UiModule","FormControlsModule","TablesModule","IconsModule","DragDropModule","MailboxModule","ChatModule","MapsModule","ChartsModule","DynamicMenuModule","ProfileModule","LandingModule","LoginModule","RegisterModule","routing","preloadingStrategy","Settings","name","loadingSpinner","fixedHeader","sidenavIsOpened","sidenavIsPinned","sidenavUserBlock","menu","menuType","theme","rtl","hasFooter","AppSettings","AuditLogComponent","EmailSentComponent","EquipmentTypesComponent","router","displayedColumns","TypeEdit","show","showtable","showAdd","Type_ID","Type","dataSource","filterValue","filter","trim","toLowerCase","paginator","selected","changeform","EquipmentComponent","formbuilder","dialog","Equipment_ID","Equipment_Condition","Infrastructure_Name","Equipment_type_Description","Is_Active","Equipment_Cost","Equipment_Description","types","condition","infrastructures","active","form","group","compose","required","maxLength","Condition","Infras","AdminPriv","localStorage","getItem","Id","equipmentEdit","selectedValue","InfrastructureSelect","conditionSelect","selectedActive","equipmentAdd","alert","dialogref","open","confirm","console","log","navigateByUrl","multi","series","value","FarmHealthComponent","gaugeType","gaugeValue","gaugeLabel","gaugeAppendText","customColors","vehicleLabel","taskLabel","maintLabel","vehicleValue","faultLabel","showXAxis","showYAxis","gradient","showLegend","showXAxisLabel","xAxisLabel","showYAxisLabel","yAxisLabel","colorScheme","domain","autoScale","Object","assign","FarmComponent","showF","showFAdd","Farm_ID","Farm_Type","Farm_Name","Farm_Address","Province","Farm_Size","Farm_Email","Farm_Number","is_Active","farmTypes","provinces","FarmEdit","Active","Foreman_Email","Foreman_Name","provinceSelect","FarmAdd","FaultLogComponent","Fault_ID","Fault_Type_Description","Fault_Description","Fault_Start_Date","Fault_End_Date","Status_Description","Importance_Description","staff","equipment","status","importance","FaultEdit","Infrastructure_Description","Staff_Name","EquipmentSelect","StatusSelect","ImportanceSelect","StaffSelect","FaultAdd","FaultreportComponent","FmMainComponent","HomeComponent","InfrastructureComponent","hideTable","Infrastructure_ID","Infrastructure_Location","Infrastructure_Size","Section_Name","Infrastructure_Type_Description","sections","InfrastructureEdit","Infrastructure_Type","Section","SectionSelect","InfrastructureAdd","InsurnaceProviderComponent","IP_ID","IP_Name","IP_Reg_Number","IP_VAT_Number","IP_Phone_Number","InsuranceEdit","User_ID","InsuranceaAdd","MaintenanceLogComponent","Maintenance_ID","Maintenance_Type_Description","Maintenance_Description","Maintenance_Start_Date","Maintenance_End_Date","MaintenanceEdit","MaintenanceAdd","MaintenanceReportComponent","NewPasswordComponent","BlankComponent","ErrorComponent","navigate","NotFoundComponent","PagesComponent","menuService","menus","menuTypes","lastScrollTop","showBackToTop","toggleSearchBar","foods","JSON","parse","window","innerWidth","menuOption","menuTypeOption","defaultMenu","setTimeout","backToTop","nativeElement","style","display","events","subscribe","event","sidenav","close","expandActiveSubMenu","getVerticalMenuItems","toggle","target","scrollTop","currentScrollTop","document","querySelector","classList","add","remove","pss","forEach","ps","elementRef","scrollToTop","setItem","i","length","child","contains","SearchComponent","DialogComponent","dialogRef","DialogOverviewExampleDialog","animal","afterClosed","result","RepairLogComponent","StartDateDef","Date","EndDateDef","showRequest","VehicleRepair_ID","VRD_Invoice","Vehicle_Registration_Number","Provider_Name","Vehicle_Repair_Cost","Vehicle_Repair_Date_Started","Vehicle_Repair_Date_Ended","vehicles","statusses","RepairLogEdit","Provider","Vehicle","Status","ProviderSelect","StartDateSelected","EndDateSelected","RepairLogAdd","RepairRequestAdd","RequestEmailComponent","ScheduledtasksComponent","months","once","StartSelected","EndSelected","DaySelected","Schedule_ID","Day_Description","Task_Description","Schedule_Start_Date","Schedule_End_Date","days","tasks","ScheduledTaskEdit","Day","Staff","TaskSelect","DaySelect","recurring","ScheduledTaskAdd","disableTask","disableStaff","DateDifference","Math","floor","UTC","getFullYear","getMonth","getDate","SectionReportComponent","SectionTypeComponent","Section_Type_ID","Section_Type_Description","SectionTypeEdit","SectionTypeAdd","SectionComponent","Section_ID","Section_Location","Section_Size","SectionEdit","SectionAdd","SharedModule","SkillComponent","Skill_ID","Skill_Description","SkillEdit","SkillAdd","SrProviderComponent","Provider_ID","Provider_Address","Provider_Contact","Provider_Email","SRProviderEdit","SRProviderAdd","StaffScheduleComponent","Recurring","weekday","staffShow","taskshow","StaffComponent","Staff_ID","Staff_Surname","Staff_Phone_Number","Clock_in_Time","TaskTypeComponent","Task_Type_ID","Task_Type_Description","Task_TypeEdit","Task_TypeAdd","TaskComponent","section","infrastructure","notEquipment","equipmentSelected","Task_ID","Task_Duration","equipments","importances","skills","TaskEdit","SkillSelect","TaskAdd","TestComponent","ApplicationsComponent","encapsulation","None","BreadcrumbComponent","activatedRoute","title","breadcrumbs","parseRoute","routerState","snapshot","root","pageTitle","setTitle","node","url","urlSegments","pathFromRoot","concat","map","urlSegment","join","push","firstChild","FlagsMenuComponent","FullScreenComponent","elem","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","exitFullscreen","webkitExitFullscreen","mozCancelFullScreen","msExitFullscreen","expand","documentElement","compress","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","HorizontalMenuComponent","menuItems","getHorizontalMenuItems","item","parentId","menuParentId","mainContent","getElementById","getElementsByClassName","Menu","routerLink","href","icon","hasSubMenu","MenuService","location","activeMenuItem","menuItem","parentMenuItem","toggleMenuItem","menuId","subMenu","currentMenuItem","verticalMenuItems","horizontalMenuItems","VerticalMenuComponent","onClickMenuItem","parentMenu","closeOtherSubMenus","emit","MessagesComponent","messagesService","selectedTab","messages","getMessages","files","getFiles","meetings","getMeetings","trigger","openMenu","closeMenu","stopPropagation","preventDefault","MessagesService","text","time","size","color","day","month","SidenavComponent","userImage","UserMenuComponent","PaginationPipe","args","pageIndex","pageSize","paginate","array","page_size","page_number","slice","PipesModule","ProfilePicturePipe","input","ext","ChatPersonSearchPipe","searchText","RegExp","message","author","search","MailSearchPipe","mail","sender","subject","UserSearchPipe","user","profile","username","pure","TruncatePipe","limit","parseInt","substring","CustomOverlayContainer","container","createElement","appendChild","_containerElement","VehicleServiceComponent","VehicleServEdit","Vehicle_Service_Mileage","Vehicle_Service_Description","Vehicle_Service_Start_Date","Vehicle_Service_End_Date","VSD","providersSelect","Providers","Vehicle_Type","VehicleServAdd","VehicleTypesComponent","VehicleComponent","Vehicle_ID","Vehicle_Type_Description","Make_Description","Model_Description","Vehicle_Mileage_Current","makes","models","Make","Model","VehicleEdit","Infrastructure","Year","Colour","StartMileage","CurrentMileage","ServiceIntervals","LastServiceKM","Registration","DateofPurchase","ModelSelect","MakeSelect","VehicleAdd","prompt","environment","production","bootstrapModule","err","error"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,I,GACT;AAAA;AAAe,K;;;;;;;;;;;;;;;;;ACDnB;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,M,GACT;AAAA;AAAe,K;;;;;;;;;;;;;;;;;ACDnB;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,e,GACT;AAAA;AAAe,K;;;;;;;;;;;;;;;;;ACDnB;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,S,GACT;AAAA;AAAe,K;;;;;;;;;;;;;;;;;ACDnB;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,W,GACT;AAAA;AAAe,K;;;;;;;;;;;;;;;;;ACDnB;AAAA;;;AAAA;AAAA;A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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<h1 style=\\\"text-align: center; background-color: rgb(87, 84, 84);\\\">About</h1>\\r\\n\\r\\n<mat-card>\\r\\n<mat-card  class=\\\"block\\\" style=\\\"width: 60%; margin: 10px auto;\\\">\\r\\n    <mat-card-header>\\r\\n        <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\r\\n        <mat-card-title style=\\\"color: green;\\\"></mat-card-title>\\r\\n        <mat-card-subtitle></mat-card-subtitle>\\r\\n      </mat-card-header>\\r\\n      <mat-card-content style=\\\"justify-content: center\\\">\\r\\n        <p>\\r\\n        Agrilog is a new revoutionary system dedicated to help farmers spend more time with the things that matters, we aim to provide a plateform dedicated to make farm management easier for every day to day task. The system aims to replace the well known \\\"Black book\\\" found in every farmers car.\\r\\n        The system is asimple to use platform making it possible to keep track of tasks, vehicles, staff, equipment, farm sections, faults , maintenance and the general upkeep of the farm.\\r\\n        </p>\\r\\n        <br/>\\r\\n        <img src=\\\"../../assets/img/crop.jpg\\\"/>\\r\\n      </mat-card-content>\\r\\n</mat-card>\\r\\n\\r\\n\\r\\n\\r\\n</mat-card>\";","export default \"<h1>Active List</h1>\\r\\n<button mat-raised-button color=\\\"primary\\\" (click) = \\\"Download()\\\" class=\\\"m-1\\\" (click)= \\\"back()\\\">Download List</button>\\r\\n&nbsp;\\r\\n&nbsp;\\r\\n<button mat-raised-button color=\\\"primary\\\" (click) = \\\"Cancel()\\\" class=\\\"m-1\\\" (click)= \\\"back()\\\">Cancel</button>\\r\\n\";","export default \"<div id=\\\"app\\\" class=\\\"app\\\" [dir]=\\\"(settings.rtl) ? 'rtl' : 'ltr'\\\"\\r\\n            [ngClass]=\\\"settings.theme\\\" \\r\\n            [class.fixed-header]=\\\"settings.fixedHeader\\\"\\r\\n            [class.horizontal-menu]=\\\"settings.menu == 'horizontal'\\\" \\r\\n            [class.compact]=\\\"settings.menuType == 'compact'\\\" \\r\\n            [class.mini]=\\\"settings.menuType == 'mini'\\\" >\\r\\n    <router-outlet></router-outlet>\\r\\n    <div id=\\\"app-spinner\\\" [class.hide]=\\\"!settings.loadingSpinner\\\"> \\r\\n        <mat-spinner color=\\\"primary\\\"></mat-spinner>  \\r\\n        <h4>loading...</h4>\\r\\n    </div>\\r\\n</div>\";","export default \"<h1>Generate Audit Log</h1>\\r\\n\\r\\n<mat-form-field appearance=\\\"fill\\\">\\r\\n    <mat-label>Choose a Start Date</mat-label>\\r\\n    <input matInput [matDatepicker]=\\\"picker\\\">\\r\\n    <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n    <mat-datepicker #picker></mat-datepicker>\\r\\n  </mat-form-field>\\r\\n  <mat-form-field appearance=\\\"fill\\\">\\r\\n    <mat-label>Choose an End Date</mat-label>\\r\\n    <input matInput [matDatepicker]=\\\"picker\\\">\\r\\n    <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n    <mat-datepicker #picker></mat-datepicker>\\r\\n  </mat-form-field>\\r\\n\\r\\n\\r\\n<button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\">Submit</button>\\r\\n&nbsp;\\r\\n&nbsp;\\r\\n<button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\" (click)= \\\"back()\\\">Cancel</button>\\r\\n&nbsp;\\r\\n&nbsp;\\r\\n<button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\" disabled>Download</button>\";","export default \"<h1>Email sent!</h1>\\r\\n\\r\\n<p>Please check your email for the link to change your password.</p>\";","export default \"<h1 style=\\\"text-align: center;\\\">Vehicle Types</h1>\\r\\n<button mat-raised-button color=\\\"primary\\\" (click) = \\\"AddVehicleType()\\\" class=\\\"m-1\\\">Add New</button>\\r\\n\\r\\n<div fxLayout=\\\"column\\\">\\r\\n    <div class=\\\"flex-p\\\" > \\r\\n        <div fxLayout=\\\"column\\\" class=\\\"mat-elevation-z8\\\" >           \\r\\n            <mat-form-field class=\\\"p-1\\\">\\r\\n                <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Type to filter all columns\\\">\\r\\n            </mat-form-field> \\r\\n        </div>\\r\\n        <mat-table #table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">       \\r\\n            <ng-container matColumnDef=\\\"Type_ID\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> ID </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Type_ID}} </mat-cell>\\r\\n            </ng-container>         \\r\\n            <ng-container matColumnDef=\\\"Type\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Type </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Type}} </mat-cell>\\r\\n            </ng-container>     \\r\\n\\r\\n            <ng-container matColumnDef=\\\"Actions\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\" >\\r\\n                    <button mat-fab class=\\\"m-1\\\"  style=\\\"color: green; background-color:rgb(51, 49, 49)\\\" (click) ='getTypeDetail(element.Vehicle_ID)'>\\r\\n                        <mat-icon>edit</mat-icon>\\r\\n                    </button>\\r\\n                    <button mat-fab class=\\\"m-1\\\"  style=\\\"color: red; background-color:rgb(51, 49, 49)\\\" (click)=\\\"deleteVehicle()\\\">\\r\\n                        <mat-icon>delete_forever</mat-icon>\\r\\n                    </button>\\r\\n               </mat-cell>\\r\\n            </ng-container>\\r\\n\\r\\n            \\r\\n\\r\\n\\r\\n            <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n            <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n        </mat-table>  \\r\\n        <mat-paginator #paginator [pageSize]=\\\"15\\\" [pageSizeOptions]=\\\"[15, 20]\\\"></mat-paginator>      \\r\\n    </div>\\r\\n</div>\\r\\n<br>\\r\\n\\r\\n<ng-container *ngIf=\\\"show\\\">\\r\\n<form ng-show=\\\"show\\\" name=\\\"OwnerSub\\\" #userForm=\\\"ngForm\\\" ngNativeValidate (ngSubmit)=\\\"PutVehicle()\\\">\\r\\n           \\r\\n           \\r\\n    \\r\\n            <mat-card>\\r\\n                <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n                   \\r\\n                </mat-card-header>\\r\\n                <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                    <mat-form-field>\\r\\n                        <input matInput placeholder=\\\"Type\\\" [(ngModel)]=\\\"TypeEdit\\\"   name=\\\"PurchMileage\\\" required>\\r\\n                    </mat-form-field>\\r\\n                                       \\r\\n                </mat-card-content>\\r\\n            </mat-card>\\r\\n        \\r\\n\\r\\n    <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\">Save Changes</button>\\r\\n  </form>\\r\\n  <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\" (click)=\\\"showTable()\\\">Back</button>\\r\\n</ng-container>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<ng-container *ngIf=\\\"showAdd\\\">\\r\\n    <form ng-show=\\\"show\\\" name=\\\"OwnerSub\\\" #userForm=\\\"ngForm\\\" ngNativeValidate (ngSubmit)=\\\"AddNewVehicle()\\\">\\r\\n            \\r\\n        <mat-card>\\r\\n            <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n               \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Type\\\"  name=\\\"PurchMileage\\\" required>\\r\\n                </mat-form-field>\\r\\n                                   \\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n       \\r\\n\\r\\n        \\r\\n        <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\">Save</button>\\r\\n      </form>\\r\\n      <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\" (click)=\\\"showTable()\\\">Back</button>\\r\\n    </ng-container>\";","export default \"\\r\\n<h1 style=\\\"text-align: center;\\\">Equipment</h1>\\r\\n<button mat-raised-button color=\\\"primary\\\" (click) = \\\"AddEquipment()\\\" class=\\\"m-1\\\">Add New </button>\\r\\n<button mat-raised-button color=\\\"primary\\\" (click) = \\\"LoadTypes()\\\" class=\\\"m-1\\\">Equipment Types</button>\\r\\n<button mat-raised-button color=\\\"primary\\\" (click) = \\\"Download()\\\" class=\\\"m-1\\\">Download List</button>\\r\\n\\r\\n<div fxLayout=\\\"column\\\">\\r\\n    <div class=\\\"flex-p\\\" *ngIf = \\\"showtable\\\"> \\r\\n        <div fxLayout=\\\"column\\\" class=\\\"mat-elevation-z8\\\">           \\r\\n            <mat-form-field class=\\\"p-1\\\">\\r\\n                <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Type to filter all columns\\\">\\r\\n            </mat-form-field> \\r\\n        </div>\\r\\n        <mat-table #table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">       \\r\\n            <ng-container matColumnDef=\\\"Equipment_ID\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> ID </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Equipment_ID}} </mat-cell>\\r\\n            </ng-container>         \\r\\n            <ng-container matColumnDef=\\\"Equipment_type_Description\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Type </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Equipment_type_Description}} </mat-cell>\\r\\n            </ng-container>     \\r\\n            <ng-container matColumnDef=\\\"Equipment_Description\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Description </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Equipment_Description}} </mat-cell>\\r\\n            </ng-container>        \\r\\n            <ng-container matColumnDef=\\\"Infrastructure_Name\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Infrastructure </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Infrastructure_Name}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"Equipment_Condition\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Condition </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Equipment_Condition}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"Equipment_Cost\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Cost </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Equipment_Cost}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"Is_Active\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Active </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Is_Active}} </mat-cell>\\r\\n            </ng-container>\\r\\n\\\\\\r\\n            <ng-container matColumnDef=\\\"Actions\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\" >\\r\\n                    <button mat-fab class=\\\"m-1\\\"  style=\\\"color: green; background-color:rgb(51, 49, 49)\\\" (click) ='getEquipmentDetail(element.Equipment_ID)'>\\r\\n                        <mat-icon>edit</mat-icon>\\r\\n                    </button>\\r\\n                    <button mat-fab class=\\\"m-2\\\"  style=\\\"color: red; background-color: rgb(51, 49, 49);\\\" (click)=\\\"deleteEquipment()\\\">\\r\\n                        <mat-icon>delete_forever</mat-icon>\\r\\n                    </button>\\r\\n\\r\\n               </mat-cell>\\r\\n            </ng-container>\\r\\n\\r\\n            \\r\\n\\r\\n\\r\\n            <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n            <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n        </mat-table>  \\r\\n        <mat-paginator #paginator [pageSize]=\\\"15\\\" [pageSizeOptions]=\\\"[15, 20]\\\"></mat-paginator>      \\r\\n    </div>\\r\\n</div>\\r\\n<br>\\r\\n\\r\\n<ng-container *ngIf=\\\"show\\\">\\r\\n<form ng-show=\\\"show\\\" name=\\\"OwnerSub\\\" #userForm=\\\"ngForm\\\" ngNativeValidate (ngSubmit)=\\\"PutEquipment()\\\" [formGroup] = \\\"form\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n    <mat-card>\\r\\n        <mat-card-header>                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Equipment Type\\\" [(ngModel)]=\\\"selectedValue\\\" name=\\\"Type\\\" formControlName = \\\"Type\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                    <mat-option *ngFor=\\\"let type of types\\\" [value]=\\\"type\\\">\\r\\n                        {{type}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n                \\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header>                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Infrastructure location\\\" [(ngModel)]=\\\"InfrastructureSelect\\\" name=\\\"Infras\\\" formControlName = \\\"Infras\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                    <mat-option *ngFor=\\\"let type of infrastructures\\\" [value]=\\\"type\\\">\\r\\n                        {{type}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header>                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Condition\\\" [(ngModel)]=\\\"conditionSelect\\\" name=\\\"condition\\\" formControlName = \\\"Condition\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                    <mat-option *ngFor=\\\"let type of condition\\\" [value]=\\\"type\\\">\\r\\n                        {{type}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Description\\\" [(ngModel)]=\\\"equipmentEdit.Equipment_Description\\\" name=\\\"Description\\\" required formControlName = \\\"Description\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                <mat-error *ngIf = \\\"form.controls.Description.errors?.required\\\">Desccription is required</mat-error>\\r\\n                <mat-error *ngIf = \\\"form.controls.Description.errors?.maxlength\\\">Description cannot exceed 50 charachters</mat-error>\\r\\n            </mat-form-field>\\r\\n                               \\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Cost\\\" type=\\\"number\\\" [(ngModel)]=\\\"equipmentEdit.Equipment_Cost\\\" name=\\\"Cost\\\" required formControlName = \\\"Cost\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                <mat-error *ngIf = \\\"form.controls.Cost.errors?.required\\\">Price is required</mat-error>\\r\\n                <mat-error *ngIf = \\\"form.controls.Cost.errors?.maxlength\\\">Price cannot exceed 10 charachters</mat-error>\\r\\n            </mat-form-field>\\r\\n                               \\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header>                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Active\\\" [(ngModel)]=\\\"selectedActive\\\" name=\\\"active\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                    <mat-option *ngFor=\\\"let type of active\\\" [value]=\\\"type\\\">\\r\\n                        {{type}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n                \\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n\\r\\n    \\r\\n    <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\">Save Changes</button>\\r\\n  </form>\\r\\n  <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\" (click)=\\\"showTable()\\\">Back</button>\\r\\n</ng-container>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<ng-container *ngIf=\\\"showAdd\\\">\\r\\n    <form ng-show=\\\"show\\\" name=\\\"OwnerSub\\\" #userForm=\\\"ngForm\\\" ngNativeValidate (ngSubmit)=\\\"addNewEquipment()\\\" [formGroup] = \\\"form\\\">\\r\\n        <mat-card>\\r\\n            <mat-card-header>                \\r\\n               \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-select placeholder=\\\"Equipment Type\\\" [(ngModel)]=\\\"equipmentAdd.Equipment_type_Description\\\" name=\\\"Type\\\" formControlName = \\\"Type\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                        <mat-option *ngFor=\\\"let type of types\\\" [value]=\\\"type\\\">\\r\\n                            {{type}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                    \\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n        <mat-card>\\r\\n            <mat-card-header>                \\r\\n               \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-select placeholder=\\\"Infrastructure location\\\" [(ngModel)]=\\\"equipmentAdd.Infrastructure_Name\\\" name=\\\"Infras\\\" formControlName = \\\"Infras\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                        <mat-option *ngFor=\\\"let type of infrastructures\\\" [value]=\\\"type\\\">\\r\\n                            {{type}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n    \\r\\n        <mat-card>\\r\\n            <mat-card-header>                \\r\\n               \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-select placeholder=\\\"Condition\\\" [(ngModel)]=\\\"equipmentAdd.Equipment_Condition\\\" name=\\\"Condition\\\" formControlName = \\\"Condition\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                        <mat-option *ngFor=\\\"let type of condition\\\" [value]=\\\"type\\\">\\r\\n                            {{type}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n        <mat-card>\\r\\n            <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n               \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Description\\\" [(ngModel)]=\\\"equipmentAdd.Equipment_Description\\\" name=\\\"Description\\\" required formControlName = \\\"Description\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                    <mat-error *ngIf = \\\"form.controls.Description.errors?.required\\\">Description is required</mat-error>\\r\\n                    <mat-error *ngIf = \\\"form.controls.Description.errors?.maxlength\\\">Description cannot exceed 50 charachters</mat-error>\\r\\n                </mat-form-field>\\r\\n                                   \\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n        <mat-card>\\r\\n            <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n               \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Cost\\\" type=\\\"number\\\" [(ngModel)]=\\\"equipmentAdd.Equipment_Cost\\\" name=\\\"Cost\\\" required formControlName = \\\"Cost\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                    <mat-error *ngIf = \\\"form.controls.Cost.errors?.required\\\">Price is required</mat-error>\\r\\n                    <mat-error *ngIf = \\\"form.controls.Cost.errors?.maxlength\\\">Price cannot exceed 10 charachters</mat-error>\\r\\n                </mat-form-field>\\r\\n                                   \\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n        <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\">Save</button>\\r\\n      </form>\\r\\n      <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\" (click)=\\\"showTable()\\\">Back</button>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    \\r\\n\\r\\n\\r\\n\\r\\n    \";","export default \"<h1 style=\\\"text-align: center;\\\">Farm Health</h1>\\r\\n<button mat-raised-button color=\\\"primary\\\" (click) = \\\"Download(1)\\\" class=\\\"m-1\\\">Download Report</button>\\r\\n<button mat-raised-button color=\\\"primary\\\" (click) = \\\"Download(2)\\\" class=\\\"m-1\\\">Download History Report</button>\\r\\n\\r\\n\\r\\n<mat-card>\\r\\n    <mat-card-header  style=\\\"font-size: large;\\\">                \\r\\n       Overall score: April\\r\\n    </mat-card-header>\\r\\n    <mat-card-content  fxLayoutAlign=\\\"center\\\">\\r\\n        <ngx-gauge [type]=\\\"gaugeType\\\" \\r\\n        [value]=\\\"54\\\" \\r\\n        [label]=\\\"gaugeLabel\\\"  \\r\\n        [append]=\\\"gaugeAppendText\\\" [thick]=\\\"12\\\" foregroundColor = \\\"green\\\">\\r\\n</ngx-gauge>\\r\\n    </mat-card-content>\\r\\n</mat-card>\\r\\n\\r\\n<mat-card>\\r\\n    <mat-card-header  style=\\\"font-size: large;\\\">                \\r\\n       Individual Scores\\r\\n    </mat-card-header>\\r\\n    <mat-card-content  fxLayoutAlign=\\\"center\\\">\\r\\n        <ngx-gauge [type]=\\\"gaugeType\\\" \\r\\n        [value]=\\\"30\\\" \\r\\n        [label]=\\\"vehicleLabel\\\"  \\r\\n        [append]=\\\"gaugeAppendText\\\" [thick]=\\\"12\\\" foregroundColor = \\\"green\\\">\\r\\n</ngx-gauge>\\r\\n<ngx-gauge [type]=\\\"gaugeType\\\" \\r\\n        [value]=\\\"80\\\" \\r\\n        [label]=\\\"taskLabel\\\"  \\r\\n        [append]=\\\"gaugeAppendText\\\" [thick]=\\\"12\\\" foregroundColor = \\\"green\\\">\\r\\n</ngx-gauge>\\r\\n<ngx-gauge [type]=\\\"gaugeType\\\" \\r\\n        [value]=\\\"60\\\" \\r\\n        [label]=\\\"maintLabel\\\"  \\r\\n        [append]=\\\"gaugeAppendText\\\" [thick]=\\\"12\\\" foregroundColor = \\\"green\\\">\\r\\n</ngx-gauge>\\r\\n<ngx-gauge [type]=\\\"gaugeType\\\" \\r\\n        [value]=\\\"40\\\" \\r\\n        [label]=\\\"faultLabel\\\"  \\r\\n        [append]=\\\"gaugeAppendText\\\" [thick]=\\\"12\\\" foregroundColor = \\\"green\\\">\\r\\n</ngx-gauge>\\r\\n    </mat-card-content>\\r\\n</mat-card>\\r\\n<br>\\r\\n<br>\\r\\n\\r\\n<div> \\r\\n    <mat-card>\\r\\n        <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n            <mat-card-subtitle><h2>Long term scores</h2></mat-card-subtitle>\\r\\n        </mat-card-header>\\r\\n        <div class=\\\"w-100 h-300p\\\">\\r\\n            <ngx-charts-line-chart\\r\\n                [scheme]=\\\"colorScheme\\\"\\r\\n                [results]=\\\"multi\\\"\\r\\n                [gradient]=\\\"gradient\\\"\\r\\n                [xAxis]=\\\"showXAxis\\\"\\r\\n                [yAxis]=\\\"showYAxis\\\"\\r\\n                [legend]=\\\"showLegend\\\"\\r\\n                [showXAxisLabel]=\\\"showXAxisLabel\\\"\\r\\n                [showYAxisLabel]=\\\"showYAxisLabel\\\"\\r\\n                [xAxisLabel]=\\\"xAxisLabel\\\"\\r\\n                [yAxisLabel]=\\\"yAxisLabel\\\"\\r\\n                [autoScale]=\\\"autoScale\\\"\\r\\n            >\\r\\n            </ngx-charts-line-chart>                  \\r\\n        </div>\\r\\n    </mat-card>\\r\\n</div>\\r\\n\\r\\n\\r\\n<br>\\r\\n<mat-card>\\r\\n    <mat-card-header style=\\\"font-size: large;\\\">                \\r\\n       Suggestions to improve vehicle score:\\r\\n    </mat-card-header>\\r\\n    <br>\\r\\n    <mat-card-content  fxLayoutAlign=\\\"center\\\">\\r\\n        <ul>\\r\\n            <li>Service vehicles on or before scheduled times</li>\\r\\n            <li>Fix vehicle faults as soon as possible</li>\\r\\n            <li>Service vehicles on or before scheduled times</li>\\r\\n            <li>Fix vehicle faults as soon as possible</li>\\r\\n            <li>Service vehicles on or before scheduled times</li>\\r\\n            <li>Fix vehicle faults as soon as possible</li>\\r\\n            <li>Service vehicles on or before scheduled times</li>\\r\\n            <li>Fix vehicle faults as soon as possible</li>\\r\\n        </ul>\\r\\n    </mat-card-content>\\r\\n</mat-card>\";","export default \"<h1 style=\\\"text-align: center;\\\">Farms</h1>\\r\\n<button mat-raised-button color=\\\"primary\\\" (click) = \\\"addFarm()\\\" class=\\\"m-1\\\">Add New</button>\\r\\n<!-- <button mat-raised-button color=\\\"primary\\\" (click) = \\\"Download()\\\" class=\\\"m-1\\\">Download List</button> -->\\r\\n<button mat-raised-button color=\\\"primary\\\" (click) = \\\"Foreman(1)\\\" class=\\\"m-1\\\">Foreman</button>\\r\\n\\r\\n<div fxLayout=\\\"column\\\">\\r\\n    <div class=\\\"flex-p\\\" *ngIf = \\\"showtable\\\"> \\r\\n        <div fxLayout=\\\"column\\\" class=\\\"mat-elevation-z8\\\" >           \\r\\n            <mat-form-field class=\\\"p-1\\\">\\r\\n                <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Type to filter all columns\\\">\\r\\n            </mat-form-field> \\r\\n        </div>\\r\\n        <mat-table #table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">       \\r\\n            <ng-container matColumnDef=\\\"Farm ID\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> ID </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Farm_ID}} </mat-cell>\\r\\n            </ng-container>         \\r\\n            <ng-container matColumnDef=\\\"Farm Type\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Type </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Farm_Type}} </mat-cell>\\r\\n            </ng-container>    \\r\\n            <ng-container matColumnDef=\\\"Farm Name\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Farm_Name}} </mat-cell>\\r\\n            </ng-container>        \\r\\n            <ng-container matColumnDef=\\\"Farm Size\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Size </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Farm_Size}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"Farm Address\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Address</mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Farm_Address}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"Province\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Province </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Province}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"Farm Email\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Email </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Farm_Email}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"Farm Number\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Number </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Farm_Number}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"Active\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Active </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.is_Active}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"Actions\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\" >\\r\\n                    <button mat-fab class=\\\"m-1\\\" style=\\\"color: green; background-color:rgb(51, 49, 49)\\\" (click) ='getFarmInfo(element.Farm_ID)'>\\r\\n                        <mat-icon>edit</mat-icon>\\r\\n                    </button>\\r\\n                    <button mat-fab class=\\\"m-1\\\" style=\\\"color: red; background-color: rgb(51, 49, 49);\\\" (click)=\\\"deleteFarm()\\\">\\r\\n                        <mat-icon>delete_forever</mat-icon>\\r\\n                    </button>\\r\\n                    <!-- <button mat-raised-button color=\\\"primary\\\">Mileage</button> -->\\r\\n               </mat-cell>\\r\\n            </ng-container>\\r\\n\\r\\n            <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n            <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n        </mat-table>  \\r\\n        <mat-paginator #paginator [pageSize]=\\\"15\\\" [pageSizeOptions]=\\\"[15, 20]\\\"></mat-paginator>      \\r\\n    </div>\\r\\n</div>\\r\\n<br>\\r\\n\\r\\n<ng-container *ngIf=\\\"show\\\">\\r\\n<form ng-show=\\\"show\\\" name=\\\"OwnerSub\\\" #userForm=\\\"ngForm\\\" ngNativeValidate (ngSubmit)=\\\"putFarm()\\\">\\r\\n    <mat-card>\\r\\n        <mat-card-header>  \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Farm Type\\\" [(ngModel)]=\\\"selectedValue\\\" name=\\\"Type\\\">\\r\\n                    <mat-option *ngFor=\\\"let type of farmTypes\\\" [value]=\\\"type\\\">\\r\\n                        {{type}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header>                \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Province\\\" [(ngModel)]=\\\"provinceSelect\\\" name=\\\"Province\\\">\\r\\n                    <mat-option *ngFor=\\\"let type of provinces\\\" [value]=\\\"type\\\">\\r\\n                        {{type}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header fxLayoutAlign=\\\"center\\\">   \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Size\\\" [(ngModel)]=\\\"FarmEdit.Farm_Size\\\" name=\\\"Size\\\" required>\\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header fxLayoutAlign=\\\"center\\\">     \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Address\\\" [(ngModel)]=\\\"FarmEdit.Farm_Address\\\" name=\\\"Address\\\" required>\\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header fxLayoutAlign=\\\"center\\\">  \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Name\\\" [(ngModel)]=\\\"FarmEdit.Farm_Name\\\" name=\\\"Name\\\" required>\\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header fxLayoutAlign=\\\"center\\\">   \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Email\\\" [(ngModel)]=\\\"FarmEdit.Farm_Email\\\" name=\\\"Email\\\" required>\\r\\n            </mat-form-field>    \\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Number\\\" [(ngModel)]=\\\"FarmEdit.Farm_Number\\\" name=\\\"Number\\\" required required>\\r\\n            </mat-form-field>             \\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Status\\\" [(ngModel)]=\\\"FarmEdit.Active\\\" name=\\\"Active\\\" required>\\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\">Save Changes</button>\\r\\n  </form>\\r\\n  <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\" (click)=\\\"showTable()\\\">Back</button>\\r\\n</ng-container>\\r\\n\\r\\n\\r\\n<ng-container *ngIf=\\\"showAdd\\\">\\r\\n    <form ng-show=\\\"show\\\" name=\\\"OwnerSub\\\" #userForm=\\\"ngForm\\\" ngNativeValidate (ngSubmit)=\\\"putFarm()\\\">\\r\\n        <mat-card>\\r\\n            <mat-card-header>        \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-select placeholder=\\\"Farm Type\\\" [(ngModel)]=\\\"FarmAdd.Farm_Type\\\" name=\\\"Type\\\" required>\\r\\n                        <option value=\\\"\\\" disabled selected>Choose</option>\\r\\n                        <mat-option *ngFor=\\\"let type of farmTypes\\\" [value]=\\\"type\\\">\\r\\n                            {{type}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n\\r\\n        <mat-card>\\r\\n            <mat-card-header>                \\r\\n               \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-select placeholder=\\\"Province\\\" [(ngModel)]=\\\"FarmAdd.Province\\\" name=\\\"Province\\\" required>\\r\\n                        <option value=\\\"\\\" disabled selected>Choose</option>\\r\\n                        <mat-option *ngFor=\\\"let type of provinces\\\" [value]=\\\"type\\\">\\r\\n                            {{type}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n        <mat-card>\\r\\n            <mat-card-header fxLayoutAlign=\\\"center\\\">    \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Number\\\" [(ngModel)]=\\\"FarmAdd.Farm_Number\\\" name=\\\"Number\\\" required>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n        <mat-card>\\r\\n            <mat-card-header fxLayoutAlign=\\\"center\\\">  \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Email\\\" [(ngModel)]=\\\"FarmAdd.Farm_Email\\\" name=\\\"Email\\\" required>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n        <mat-card>\\r\\n            <mat-card-header fxLayoutAlign=\\\"center\\\">    \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Name\\\" [(ngModel)]=\\\"FarmAdd.Farm_Name\\\" name=\\\"Name\\\" required>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n        <mat-card>\\r\\n            <mat-card-header fxLayoutAlign=\\\"center\\\">       \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Size\\\" [(ngModel)]=\\\"FarmAdd.Farm_Size\\\" name=\\\"Size\\\" required>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n\\r\\n        <mat-card>\\r\\n            <mat-card-header fxLayoutAlign=\\\"center\\\">       \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Address\\\" [(ngModel)]=\\\"FarmAdd.Farm_Address\\\" name=\\\"Address\\\" required>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n\\r\\n        <mat-card>\\r\\n            <mat-card-header fxLayoutAlign=\\\"center\\\">   \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Status\\\" [(ngModel)]=\\\"FarmAdd.Active\\\" name=\\\"Active\\\" required>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n        <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\">Save</button>\\r\\n      </form>\\r\\n      <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\" (click)=\\\"showTable()\\\">Back</button>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container *ngIf=\\\"showFAdd\\\"> <!--for the add foreman to farm form-->\\r\\n        <form ng-show=\\\"show\\\" name=\\\"OwnerSub\\\" #userForm=\\\"ngForm\\\" ngNativeValidate (ngSubmit)=\\\"putForeman()\\\" >\\r\\n            <h1>Add Foreman</h1>\\r\\n            <mat-card>\\r\\n                <mat-card-header fxLayoutAlign=\\\"center\\\">\\r\\n                </mat-card-header>\\r\\n                <mat-card-content>\\r\\n                    <mat-form-field>\\r\\n                        <input matInput placeholder=\\\"Foreman Email\\\" [(ngModel)]=\\\"FarmAdd.Foreman_Email\\\" name=\\\"ForemanEmail\\\">\\r\\n                    </mat-form-field>\\r\\n                </mat-card-content>\\r\\n            </mat-card>\\r\\n\\r\\n            <mat-card>\\r\\n                <mat-card-header fxLayoutAlign=\\\"center\\\">\\r\\n                </mat-card-header>\\r\\n                <mat-card-content>\\r\\n                    <mat-form-field>\\r\\n                        <input matInput placeholder=\\\"Foreman Name\\\" [(ngModel)]=\\\"FarmAdd.Foreman_Name\\\" name=\\\"ForemanEmail\\\">\\r\\n                    </mat-form-field>\\r\\n                </mat-card-content>\\r\\n            </mat-card>\\r\\n\\r\\n            <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\">Save</button>\\r\\n            <button mat-raised-button color=\\\"primary\\\" (click) = \\\"Foreman(3)\\\" class=\\\"m-1\\\">Cancel</button>\\r\\n        </form>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container *ngIf= \\\"showF\\\"> <!--to display the foreman on the farm form-->\\r\\n        <h1>Foreman</h1>\\r\\n        <form g-show=\\\"show\\\" name=\\\"OwnerSub\\\" #userForm=\\\"ngForm\\\" ngNativeValidate (ngSubmit)=\\\"addForeman()\\\" >\\r\\n            <mat-card>\\r\\n                <mat-card-header fxLayoutAlign=\\\"center\\\">\\r\\n                </mat-card-header>\\r\\n                <mat-card-content>\\r\\n                    <mat-form-field>\\r\\n                        <input matInput placeholder=\\\"Foreman Email\\\" [(ngModel)]=\\\"FarmAdd.Foreman_Email\\\" name=\\\"ForemanEmail\\\">\\r\\n                    </mat-form-field>\\r\\n                </mat-card-content>\\r\\n            </mat-card>\\r\\n\\r\\n            <mat-card>\\r\\n                <mat-card-header fxLayoutAlign=\\\"center\\\">\\r\\n                </mat-card-header>\\r\\n                <mat-card-content>\\r\\n                    <mat-form-field>\\r\\n                        <input matInput placeholder=\\\"Foreman Name\\\" [(ngModel)]=\\\"FarmAdd.Foreman_Name\\\" name=\\\"ForemanEmail\\\">\\r\\n                    </mat-form-field>\\r\\n                </mat-card-content>\\r\\n            </mat-card>\\r\\n\\r\\n\\r\\n            <button mat-raised-button (click) = \\\"Foreman(2)\\\" color=\\\"primary\\\" class=\\\"m-1\\\">Add</button>\\r\\n            <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\">Remove</button>\\r\\n        </form>\\r\\n        <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\" (click)=\\\"showTable()\\\">Back</button>\\r\\n    </ng-container>\";","export default \"<h1 style=\\\"text-align: center;\\\">Fault Log</h1>\\r\\n\\r\\n<button mat-raised-button color=\\\"primary\\\" (click) = \\\"AddFault()\\\" class=\\\"m-1\\\">Add New</button>\\r\\n\\r\\n<div fxLayout=\\\"column\\\">\\r\\n    <div class=\\\"flex-p\\\"> \\r\\n        <div fxLayout=\\\"column\\\" class=\\\"mat-elevation-z8\\\">           \\r\\n            <mat-form-field class=\\\"p-1\\\">\\r\\n                <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Type to filter all columns\\\">\\r\\n            </mat-form-field> \\r\\n        </div>\\r\\n        <mat-table #table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">       \\r\\n            <ng-container matColumnDef=\\\"Fault_ID\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> ID </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Fault_ID}} </mat-cell>\\r\\n            </ng-container>         \\r\\n            <ng-container matColumnDef=\\\"Fault_Type_Description\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Type </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Fault_Type_Description}} </mat-cell>\\r\\n            </ng-container>     \\r\\n            <ng-container matColumnDef=\\\"Fault_Description\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Description </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Fault_Description}} </mat-cell>\\r\\n            </ng-container>        \\r\\n            <ng-container matColumnDef=\\\"Fault_Start_Date\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Start Date </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Fault_Start_Date}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"Fault_End_Date\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> End Date </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Fault_End_Date}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"Importance_Description\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Importance </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Importance_Description}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"Status_Description\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Status </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Status_Description}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"Actions\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\" >\\r\\n                    <button mat-fab class=\\\"m-1\\\" style=\\\"color: green; background-color:rgb(51, 49, 49)\\\" (click) ='getFaultDetail(element.Fault_ID)'>\\r\\n                        <mat-icon>edit</mat-icon>\\r\\n                    </button>\\r\\n                    <button mat-fab class=\\\"m-1\\\" style=\\\"color: red; background-color: rgb(51, 49, 49);\\\" (click)=\\\"deleteFault()\\\">\\r\\n                        <mat-icon>delete_forever</mat-icon>\\r\\n                    </button>\\r\\n               </mat-cell>\\r\\n            </ng-container>\\r\\n\\r\\n            \\r\\n\\r\\n\\r\\n            <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n            <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n        </mat-table>  \\r\\n        <mat-paginator #paginator [pageSize]=\\\"5\\\" [pageSizeOptions]=\\\"[5, 10]\\\"></mat-paginator>      \\r\\n    </div>\\r\\n</div>\\r\\n<br>\\r\\n\\r\\n<ng-container *ngIf=\\\"show\\\">\\r\\n<form ng-show=\\\"show\\\" name=\\\"OwnerSub\\\" #userForm=\\\"ngForm\\\" ngNativeValidate (ngSubmit)=\\\"PutFault()\\\">\\r\\n    <mat-card>\\r\\n        <mat-card-header>                \\r\\n           Fault Description\\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                    \\r\\n                        <input matInput placeholder=\\\"Description\\\"  name=\\\"Fault_Description\\\" required>\\r\\n                   \\r\\n                                       \\r\\n                </mat-card-content>\\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header>                \\r\\n           Start Date\\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-form-field appearance=\\\"fill\\\">\\r\\n                    <mat-label>Choose an Start Date</mat-label>\\r\\n                    <input matInput [matDatepicker]=\\\"picker\\\">\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker #picker></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header>                \\r\\n           End Date\\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-form-field appearance=\\\"fill\\\">\\r\\n                    <mat-label>Choose an End Date</mat-label>\\r\\n                    <input matInput [matDatepicker]=\\\"picker\\\">\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker #picker></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header>                \\r\\n           Importance\\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Model\\\" name=\\\"Importance\\\">\\r\\n                    <mat-option *ngFor=\\\"let type of importances\\\" [value]=\\\"type\\\">\\r\\n                        {{type}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header>                \\r\\n           Infrastructure\\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Infrastructure\\\"  name=\\\"Infrastructure\\\">\\r\\n                    <mat-option *ngFor=\\\"let type of infrastructures\\\" [value]=\\\"type\\\">\\r\\n                        {{type}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n           Equipment\\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Equipment\\\"  name=\\\"Equipment\\\">\\r\\n                    <mat-option *ngFor=\\\"let type of equipments\\\" [value]=\\\"type\\\">\\r\\n                        {{type}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n                               \\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n           Staff Member\\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Staff\\\" [(ngModel)]=\\\"StaffSelect\\\" name=\\\"Staff\\\">\\r\\n                    <mat-option *ngFor=\\\"let type of staffs\\\" [value]=\\\"type\\\">\\r\\n                        {{type}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n                               \\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    \\r\\n    <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\" (click)=\\\"back()\\\">Save</button>\\r\\n        &nbsp;\\r\\n        &nbsp;\\r\\n        <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\" (click)=\\\"back()\\\">Cancel</button>\\r\\n  </form>\\r\\n</ng-container>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<ng-container *ngIf=\\\"showAdd\\\">\\r\\n    <form ng-show=\\\"show\\\" name=\\\"OwnerSub\\\" #userForm=\\\"ngForm\\\" ngNativeValidate (ngSubmit)=\\\"PutFault()\\\">\\r\\n        <mat-card>\\r\\n            <mat-card-header>                \\r\\n               Fault Type\\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-select placeholder=\\\"Fault Type\\\"  name=\\\"Type\\\" required>\\r\\n                        <option value=\\\"\\\" disabled selected>Choose</option>\\r\\n                        <mat-option *ngFor=\\\"let type of types\\\" [value]=\\\"type\\\">\\r\\n                            {{type}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n        <mat-card>\\r\\n            <mat-card-header>                \\r\\n               Description\\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Description\\\"  name=\\\"Fault_Description\\\" required>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n        <mat-card>\\r\\n            <mat-card-header>                \\r\\n               Start Date\\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-form-field appearance=\\\"fill\\\">\\r\\n                        <mat-label>Choose an Start Date</mat-label>\\r\\n                        <input matInput [matDatepicker]=\\\"picker\\\">\\r\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n                        <mat-datepicker #picker></mat-datepicker>\\r\\n                      </mat-form-field>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n        <mat-card>\\r\\n            <mat-card-header>                \\r\\n               End Date\\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-form-field appearance=\\\"fill\\\">\\r\\n                        <mat-label>Choose an End Date</mat-label>\\r\\n                        <input matInput [matDatepicker]=\\\"picker\\\">\\r\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n                        <mat-datepicker #picker></mat-datepicker>\\r\\n                      </mat-form-field>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n\\r\\n        <mat-card>\\r\\n            <mat-card-header>                \\r\\n               Importance\\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-select placeholder=\\\"Importance\\\"  name=\\\"Importance\\\" required>\\r\\n                        <option value=\\\"\\\" disabled selected>Choose</option>\\r\\n                        <mat-option *ngFor=\\\"let type of importances\\\" [value]=\\\"type\\\">\\r\\n                            {{type}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n        <mat-card>\\r\\n            <mat-card-header>                \\r\\n               Staff\\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-select placeholder=\\\"Staff\\\"  name=\\\"Staff\\\" required>\\r\\n                        <option value=\\\"\\\" disabled selected>Choose</option>\\r\\n                        <mat-option *ngFor=\\\"let type of staffs\\\" [value]=\\\"type\\\">\\r\\n                            {{type}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n\\r\\n        <mat-card>\\r\\n            <mat-card-header>                \\r\\n               Infrastructure\\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-select placeholder=\\\"Infrastructure\\\"  name=\\\"Infrastructure\\\" >\\r\\n                        <option value=\\\"\\\" disabled selected>Choose</option>\\r\\n                        <mat-option *ngFor=\\\"let type of infrastructures\\\" [value]=\\\"type\\\">\\r\\n                            {{type}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n        <mat-card>\\r\\n            <mat-card-header>                \\r\\n               Equipment\\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-select placeholder=\\\"Equipment\\\"  name=\\\"Equipment\\\">\\r\\n                        <option value=\\\"\\\" disabled selected>Choose</option>\\r\\n                        <mat-option *ngFor=\\\"let type of equipments\\\" [value]=\\\"type\\\">\\r\\n                            {{type}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n        \\r\\n        <mat-card>\\r\\n            <label for=\\\"myfile\\\">Select a file:</label>\\r\\n            <input type=\\\"file\\\" id=\\\"myfile\\\" name=\\\"myfile\\\">\\r\\n        </mat-card>\\r\\n\\r\\n        <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\" (click)=\\\"back()\\\">Save</button>\\r\\n        &nbsp;\\r\\n        &nbsp;\\r\\n        <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\" (click)=\\\"back()\\\">Cancel</button>\\r\\n      </form>\\r\\n    </ng-container>\";","export default \"<p>faultreport works!</p>\\r\\n\";","export default \"<h1>Faults and Maintenance</h1>\\r\\n<br>\\r\\n<button mat-raised-button color=\\\"primary\\\" (click) = \\\"FMReport()\\\" class=\\\"m-1\\\">Generate Report</button>\\r\\n&nbsp;\\r\\n&nbsp;\\r\\n<button mat-raised-button color=\\\"primary\\\" (click) = \\\"ActiveList()\\\" class=\\\"m-1\\\">Generate Active List</button>\\r\\n\\r\\n<!-- <app-report></app-report>\\r\\n\\r\\n<app-active-list></app-active-list>\\r\\n\\r\\n<app-fault></app-fault>\\r\\n\\r\\n<app-maintenance></app-maintenance> -->\\r\\n\";","export default \"<h1 style=\\\"text-align: center; background-color: rgb(87, 84, 84);\\\">Home</h1>\\r\\n\\r\\n<mat-card>\\r\\n      <mat-card-content>\\r\\n        <img src=\\\"../../assets/img/home.jpg\\\" style=\\\"width: 90%;\\\" />\\r\\n      </mat-card-content>\\r\\n\\r\\n</mat-card>\\r\\n\\r\\n\\r\\n\\r\\n\";","export default \"<h1>Infrastructures</h1>\\r\\n<div *ngIf=\\\"hideTable\\\">\\r\\n<button mat-raised-button color=\\\"primary\\\" (click) = \\\"AddInfrastructure()\\\" class=\\\"m-1\\\">Add New</button>\\r\\n<button mat-raised-button color=\\\"primary\\\" (click) = \\\"GenerateReport()\\\" class=\\\"m-1\\\">Generate Infrastructure Report</button>\\r\\n\\r\\n<div fxLayout=\\\"column\\\">\\r\\n    <div class=\\\"flex-p\\\"> \\r\\n        <div fxLayout=\\\"column\\\" class=\\\"mat-elevation-z8\\\">           \\r\\n            <mat-form-field class=\\\"p-1\\\">\\r\\n                <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Type to filter all columns\\\">\\r\\n            </mat-form-field> \\r\\n        </div>\\r\\n        <mat-table #table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">       \\r\\n            <ng-container matColumnDef=\\\"Infrastructure_ID\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> ID </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Infrastructure_ID}} </mat-cell>\\r\\n            </ng-container> \\r\\n            <ng-container matColumnDef=\\\"Section_Name\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Section </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Section_Name}} </mat-cell>\\r\\n            </ng-container>        \\r\\n            <ng-container matColumnDef=\\\"Infrastructure_Type_Description\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Type </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Infrastructure_Type_Description}} </mat-cell>\\r\\n            </ng-container>     \\r\\n            <ng-container matColumnDef=\\\"Infrastructure_Name\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Infrastructure_Name}} </mat-cell>\\r\\n            </ng-container>        \\r\\n            <ng-container matColumnDef=\\\"Infrastructure_Location\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Location </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Infrastructure_Location}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"Infrastructure_Size\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Size </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Infrastructure_Size}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"is_Active\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Active </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.is_Active}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"Actions\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\" >\\r\\n                    <button mat-fab class=\\\"m-1\\\" style=\\\"color: green; background-color:rgb(51, 49, 49)\\\" (click) ='getInfrastructureDetail(element.Infrastructure_ID)'>\\r\\n                        <mat-icon>edit</mat-icon>\\r\\n                    </button>\\r\\n                    <button mat-fab class=\\\"m-1\\\" style=\\\"color: red; background-color: rgb(51, 49, 49);\\\" (click)=\\\"deleteInfrastructure()\\\">\\r\\n                        <mat-icon>delete_forever</mat-icon>\\r\\n                    </button>\\r\\n               </mat-cell>\\r\\n            </ng-container>\\r\\n\\r\\n            \\r\\n\\r\\n\\r\\n            <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n            <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n        </mat-table>  \\r\\n        <mat-paginator #paginator [pageSize]=\\\"5\\\" [pageSizeOptions]=\\\"[5, 10]\\\"></mat-paginator>      \\r\\n    </div>\\r\\n</div>\\r\\n</div>\\r\\n<br>\\r\\n\\r\\n<ng-container *ngIf=\\\"show\\\">\\r\\n    <h2>Edit Infrastructure</h2>\\r\\n<form ng-show=\\\"show\\\" name=\\\"OwnerSub\\\" #userForm=\\\"ngForm\\\" ngNativeValidate (ngSubmit)=\\\"PutInfrastructure()\\\">\\r\\n    <mat-card>\\r\\n        <mat-card-header>                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Section\\\" [(ngModel)]=\\\"SectionSelect\\\" name=\\\"Section\\\" required>\\r\\n                    <mat-option *ngFor=\\\"let type of sections\\\" [value]=\\\"type\\\">\\r\\n                        {{type}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n    \\r\\n    <mat-card>\\r\\n        <mat-card-header>                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Infrastructure Type\\\" [(ngModel)]=\\\"selectedValue\\\" name=\\\"Type\\\" required>\\r\\n                    <mat-option *ngFor=\\\"let type of types\\\" [value]=\\\"type\\\">\\r\\n                        {{type}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n                \\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Name\\\" [(ngModel)]=\\\"InfrastructureEdit.Infrastructure_Name\\\" name=\\\"Name\\\" required>\\r\\n            </mat-form-field>\\r\\n                               \\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Location\\\" [(ngModel)]=\\\"InfrastructureEdit.Infrastructure_Location\\\" name=\\\"Location\\\" required>\\r\\n            </mat-form-field>\\r\\n                               \\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Size\\\" [(ngModel)]=\\\"InfrastructureEdit.Infrastructure_Size\\\" name=\\\"Size\\\" required>\\r\\n            </mat-form-field>\\r\\n                               \\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n    <mat-card>\\r\\n        <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Active?\\\" [(ngModel)]=\\\"InfrastructureEdit.Active\\\" name=\\\"Currently Active\\\" required>\\r\\n            </mat-form-field>\\r\\n                               \\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    \\r\\n    <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\">Save Changes</button>\\r\\n  </form>\\r\\n  <button mat-raised-button color=\\\"m-1\\\" (click)=\\\"back()\\\">Back</button>\\r\\n</ng-container>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<ng-container *ngIf=\\\"showAdd\\\">\\r\\n    <h2>Add New Infrastructure</h2>\\r\\n    <form ng-show=\\\"show\\\" name=\\\"OwnerSub\\\" #userForm=\\\"ngForm\\\" ngNativeValidate (ngSubmit)=\\\"PutInfrastructure()\\\">\\r\\n        <mat-card>              \\r\\n        <mat-card-header>                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Section\\\" [(ngModel)]=\\\"InfrastructureAdd.SectionSelect\\\" name=\\\"Section\\\" required>\\r\\n                    <option value=\\\"\\\" disabled selected>Choose</option>\\r\\n                    <mat-option *ngFor=\\\"let type of sections\\\" [value]=\\\"type\\\">\\r\\n                        {{type}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n    \\r\\n    <mat-card>\\r\\n        <mat-card-header>                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Infrastructure Type\\\" [(ngModel)]=\\\"InfrastructureAdd.selectedValue\\\" name=\\\"Type\\\" required>\\r\\n                    <option value=\\\"\\\" disabled selected>Choose</option>\\r\\n                    <mat-option *ngFor=\\\"let type of types\\\" [value]=\\\"type\\\">\\r\\n                        {{type}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n                \\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Name\\\" [(ngModel)]=\\\"InfrastructureAdd.Infrastructure_Name\\\" name=\\\"Name\\\" required>\\r\\n            </mat-form-field>\\r\\n                               \\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Location\\\" [(ngModel)]=\\\"InfrastructureAdd.Infrastructure_Location\\\" name=\\\"Location\\\" required>\\r\\n            </mat-form-field>\\r\\n                               \\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Size - (square meters)\\\" [(ngModel)]=\\\"InfrastructureAdd.Infrastructure_Size\\\" name=\\\"Size\\\" required>\\r\\n            </mat-form-field>\\r\\n                               \\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <!-- <mat-card>\\r\\n        <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Status\\\" [(ngModel)]=\\\"InfrastructureAdd.Active\\\" name=\\\"Currently Active\\\" required>\\r\\n            </mat-form-field>\\r\\n                               \\r\\n        </mat-card-content>\\r\\n    </mat-card> -->\\r\\n\\r\\n        <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\">Save</button>\\r\\n      </form>\\r\\n      <button mat-raised-button color=\\\"m-1\\\" (click)=\\\"back()\\\" class=\\\"m-1\\\">Back</button>\\r\\n    </ng-container>\";","export default \"<button mat-raised-button color=\\\"primary\\\" (click) = \\\"addInsurance()\\\" class=\\\"m-1\\\">Add New</button>\\r\\n\\r\\n<div fxLayout=\\\"column\\\">\\r\\n    <div class=\\\"flex-p\\\" *ngIf = \\\"showtable\\\"> \\r\\n        <div fxLayout=\\\"column\\\" class=\\\"mat-elevation-z8\\\" >           \\r\\n            <mat-form-field class=\\\"p-1\\\">\\r\\n                <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Type to filter all columns\\\">\\r\\n            </mat-form-field> \\r\\n        </div>\\r\\n        <mat-table #table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">       \\r\\n            <ng-container matColumnDef=\\\"IP_ID\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> ID </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.IP_ID}} </mat-cell>\\r\\n            </ng-container>         \\r\\n            <ng-container matColumnDef=\\\"IP_Name\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.IP_Name}} </mat-cell>\\r\\n            </ng-container>     \\r\\n            <ng-container matColumnDef=\\\"IP_Reg_Number\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Registration Number </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.IP_Reg_Number}} </mat-cell>\\r\\n            </ng-container>        \\r\\n            <ng-container matColumnDef=\\\"IP_VAT_Number\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> VAT Number </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.IP_VAT_Number}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"IP_Phone_Number\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Phone Number </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.IP_Phone_Number}} </mat-cell>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"Actions\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\" >\\r\\n                    <button mat-fab class=\\\"m-1\\\" style=\\\"color: green; background-color:rgb(51, 49, 49)\\\" (click) ='getInsuranceInfo(element.IP_ID)'>\\r\\n                        <mat-icon>edit</mat-icon>\\r\\n                    </button>\\r\\n                    <button mat-fab class=\\\"m-1\\\" style=\\\"color: red; background-color: rgb(51, 49, 49);\\\" (click)=\\\"deleteInsurance()\\\">\\r\\n                        <mat-icon>delete_forever</mat-icon>\\r\\n                    </button>\\r\\n               </mat-cell>\\r\\n            </ng-container>\\r\\n\\r\\n            <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n            <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n        </mat-table>  \\r\\n        <mat-paginator #paginator [pageSize]=\\\"15\\\" [pageSizeOptions]=\\\"[15, 20]\\\"></mat-paginator>      \\r\\n    </div>\\r\\n</div>\\r\\n<br>\\r\\n\\r\\n<ng-container *ngIf=\\\"show\\\">\\r\\n<form ng-show=\\\"show\\\" name=\\\"OwnerSub\\\" #userForm=\\\"ngForm\\\" ngNativeValidate (ngSubmit)=\\\"putInsurance()\\\">\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header fxLayoutAlign=\\\"center\\\">    \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Name\\\" [(ngModel)]=\\\"InsuranceEdit.IP_Name\\\" name=\\\"Name\\\" required>\\r\\n            </mat-form-field> \\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header fxLayoutAlign=\\\"center\\\">        \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Reg_Num\\\" [(ngModel)]=\\\"InsuranceEdit.IP_Reg_Number\\\" name=\\\"Reg_Num\\\" required>\\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header fxLayoutAlign=\\\"center\\\">        \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"VAT\\\" [(ngModel)]=\\\"InsuranceEdit.IP_VAT_Number\\\" name=\\\"VAT\\\" required>\\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header fxLayoutAlign=\\\"center\\\">    \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Phone_Num\\\" [(ngModel)]=\\\"InsuranceEdit.IP_Phone_Number\\\" name=\\\"Phone_Num\\\" required>\\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n    \\r\\n    <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\">Save Changes</button>\\r\\n  </form>\\r\\n  <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\" (click)=\\\"showTable()\\\">Back</button>\\r\\n</ng-container>\\r\\n\\r\\n<ng-container *ngIf=\\\"showAdd\\\">\\r\\n    <form ng-show=\\\"show\\\" name=\\\"OwnerSub\\\" #userForm=\\\"ngForm\\\" ngNativeValidate (ngSubmit)=\\\"putInsurance()\\\">\\r\\n    \\r\\n        <mat-card>\\r\\n            <mat-card-header fxLayoutAlign=\\\"center\\\">    \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Name\\\" [(ngModel)]=\\\"InsuranceaAdd.IP_Name\\\" name=\\\"Name\\\" required>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n        <mat-card>\\r\\n            <mat-card-header fxLayoutAlign=\\\"center\\\">        \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Reg_num\\\" [(ngModel)]=\\\"InsuranceaAdd.IP_Reg_Number\\\" name=\\\"Reg_num\\\" required>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n        <mat-card>\\r\\n            <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n               \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"VAT_num\\\" [(ngModel)]=\\\"InsuranceaAdd.IP_VAT_Number\\\" name=\\\"VAT_num\\\" required>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n        <mat-card>\\r\\n            <mat-card-header fxLayoutAlign=\\\"center\\\">     \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Phone\\\" [(ngModel)]=\\\"InsuranceaAdd.IP_Phone_Number\\\" name=\\\"Phone\\\" required>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n        <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\">Save</button>\\r\\n      </form>\\r\\n      <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\" (click)=\\\"showTable()\\\">Back</button>\\r\\n    </ng-container>\";","export default \"<h1 style=\\\"text-align: center;\\\">Maintenance Log</h1>\\r\\n\\r\\n<button mat-raised-button color=\\\"primary\\\" (click) = \\\"AddMaintenance()\\\" class=\\\"m-1\\\">Add New</button>\\r\\n\\r\\n<div fxLayout=\\\"column\\\" *ngIf=\\\"showtable\\\">\\r\\n    <div class=\\\"flex-p\\\"> \\r\\n        <div fxLayout=\\\"column\\\" class=\\\"mat-elevation-z8\\\">           \\r\\n            <mat-form-field class=\\\"p-1\\\">\\r\\n                <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Type to filter all columns\\\">\\r\\n            </mat-form-field> \\r\\n        </div>\\r\\n        <mat-table #table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">       \\r\\n            <ng-container matColumnDef=\\\"Maintenance_ID\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> ID </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Maintenance_ID}} </mat-cell>\\r\\n            </ng-container>         \\r\\n            <ng-container matColumnDef=\\\"Maintenance_Type_Description\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Type </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Maintenance_Type_Description}} </mat-cell>\\r\\n            </ng-container>     \\r\\n            <ng-container matColumnDef=\\\"Maintenance_Description\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Description </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Maintenance_Description}} </mat-cell>\\r\\n            </ng-container>        \\r\\n            <ng-container matColumnDef=\\\"Maintenance_Start_Date\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Start Date </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Maintenance_Start_Date}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"Maintenance_End_Date\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> End Date </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Maintenance_End_Date}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"Importance_Description\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Importance </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Importance_Description}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"Status_Description\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Status </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Status_Description}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"Actions\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\" >\\r\\n                    <button mat-fab class=\\\"m-1\\\" style=\\\"color: green; background-color:rgb(51, 49, 49)\\\" (click) ='getMaintenanceDetail(element.Maintenance_ID)'>\\r\\n                        <mat-icon>edit</mat-icon>\\r\\n                    </button>\\r\\n                    <button mat-fab class=\\\"m-1\\\" style=\\\"color: red; background-color: rgb(51, 49, 49);\\\" (click)=\\\"deleteMaintenance()\\\">\\r\\n                        <mat-icon>delete_forever</mat-icon>\\r\\n                    </button>\\r\\n               </mat-cell>\\r\\n            </ng-container>\\r\\n\\r\\n            \\r\\n\\r\\n\\r\\n            <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n            <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n        </mat-table>  \\r\\n        <mat-paginator #paginator [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[15, 20]\\\"></mat-paginator>      \\r\\n    </div>\\r\\n</div>\\r\\n<br>\\r\\n\\r\\n\\r\\n<ng-container *ngIf=\\\"show\\\">\\r\\n    <form ng-show=\\\"show\\\" name=\\\"OwnerSub\\\" #userForm=\\\"ngForm\\\" ngNativeValidate (ngSubmit)=\\\"PutMaintenance()\\\">\\r\\n        <mat-card>\\r\\n            <mat-card-header>                \\r\\n               Maintenance Type\\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-select placeholder=\\\"Maintenance Type\\\"  name=\\\"Type\\\" required>\\r\\n                        <option value=\\\"\\\" disabled selected>Choose</option>\\r\\n                        <mat-option *ngFor=\\\"let type of types\\\" [value]=\\\"type\\\">\\r\\n                            {{type}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n        <mat-card>\\r\\n            <mat-card-header>                \\r\\n               Description\\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Description\\\"  name=\\\"Maintenance_Description\\\" required>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n        <mat-card>\\r\\n            <mat-card-header>                \\r\\n               Start Date\\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-form-field appearance=\\\"fill\\\">\\r\\n                        <mat-label>Choose an Start Date</mat-label>\\r\\n                        <input matInput [matDatepicker]=\\\"picker\\\">\\r\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n                        <mat-datepicker #picker></mat-datepicker>\\r\\n                      </mat-form-field>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n        <mat-card>\\r\\n            <mat-card-header>                \\r\\n               End Date\\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-form-field appearance=\\\"fill\\\">\\r\\n                        <mat-label>Choose an End Date</mat-label>\\r\\n                        <input matInput [matDatepicker]=\\\"picker\\\">\\r\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n                        <mat-datepicker #picker></mat-datepicker>\\r\\n                      </mat-form-field>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n\\r\\n        <mat-card>\\r\\n            <mat-card-header>                \\r\\n               Importance\\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-select placeholder=\\\"Importance\\\"  name=\\\"Importance\\\" required>\\r\\n                        <option value=\\\"\\\" disabled selected>Choose</option>\\r\\n                        <mat-option *ngFor=\\\"let type of importances\\\" [value]=\\\"type\\\">\\r\\n                            {{type}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n        <mat-card>\\r\\n            <mat-card-header>                \\r\\n               Staff\\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-select placeholder=\\\"Staff\\\"  name=\\\"Staff\\\" required>\\r\\n                        <option value=\\\"\\\" disabled selected>Choose</option>\\r\\n                        <mat-option *ngFor=\\\"let type of staffs\\\" [value]=\\\"type\\\">\\r\\n                            {{type}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n\\r\\n        <mat-card>\\r\\n            <mat-card-header>                \\r\\n               Infrastructure\\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-select placeholder=\\\"Infrastructure\\\"  name=\\\"Infrastructure\\\" >\\r\\n                        <option value=\\\"\\\" disabled selected>Choose</option>\\r\\n                        <mat-option *ngFor=\\\"let type of infrastructures\\\" [value]=\\\"type\\\">\\r\\n                            {{type}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n        <mat-card>\\r\\n            <mat-card-header>                \\r\\n               Equipment\\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-select placeholder=\\\"Equipment\\\"  name=\\\"Equipment\\\">\\r\\n                        <option value=\\\"\\\" disabled selected>Choose</option>\\r\\n                        <mat-option *ngFor=\\\"let type of equipments\\\" [value]=\\\"type\\\">\\r\\n                            {{type}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n        \\r\\n        <mat-card>\\r\\n        <button mat-icon-button color=\\\"primary\\\" aria-label=\\\"Example icon button with a home icon\\\">\\r\\n            <mat-icon>camera</mat-icon>\\r\\n          </button>\\r\\n        </mat-card>\\r\\n\\r\\n        <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\" (click)=\\\"back()\\\">Save</button>\\r\\n        &nbsp;\\r\\n        &nbsp;\\r\\n        <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\" (click)=\\\"back()\\\">Cancel</button>\\r\\n      </form>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n\\r\\n<ng-container *ngIf=\\\"showAdd\\\">\\r\\n    <form ng-show=\\\"show\\\" name=\\\"OwnerSub\\\" #userForm=\\\"ngForm\\\" ngNativeValidate (ngSubmit)=\\\"PutMaintenance()\\\">\\r\\n        <mat-card>\\r\\n            <mat-card-header>                \\r\\n               Maintenance Type\\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-select placeholder=\\\"Maintenance Type\\\"  name=\\\"Type\\\" required>\\r\\n                        <option value=\\\"\\\" disabled selected>Choose</option>\\r\\n                        <mat-option *ngFor=\\\"let type of types\\\" [value]=\\\"type\\\">\\r\\n                            {{type}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n        <mat-card>\\r\\n            <mat-card-header>                \\r\\n               Description\\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Description\\\"  name=\\\"Maintenance_Description\\\" required>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n        <mat-card>\\r\\n            <mat-card-header>                \\r\\n               Start Date\\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-form-field appearance=\\\"fill\\\">\\r\\n                        <mat-label>Choose an Start Date</mat-label>\\r\\n                        <input matInput [matDatepicker]=\\\"picker\\\">\\r\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n                        <mat-datepicker #picker></mat-datepicker>\\r\\n                      </mat-form-field>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n        <mat-card>\\r\\n            <mat-card-header>                \\r\\n               End Date\\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-form-field appearance=\\\"fill\\\">\\r\\n                        <mat-label>Choose an End Date</mat-label>\\r\\n                        <input matInput [matDatepicker]=\\\"picker\\\">\\r\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n                        <mat-datepicker #picker></mat-datepicker>\\r\\n                      </mat-form-field>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n\\r\\n        <mat-card>\\r\\n            <mat-card-header>                \\r\\n               Importance\\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-select placeholder=\\\"Importance\\\"  name=\\\"Importance\\\" required>\\r\\n                        <option value=\\\"\\\" disabled selected>Choose</option>\\r\\n                        <mat-option *ngFor=\\\"let type of importances\\\" [value]=\\\"type\\\">\\r\\n                            {{type}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n        <mat-card>\\r\\n            <mat-card-header>                \\r\\n               Staff\\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-select placeholder=\\\"Staff\\\"  name=\\\"Staff\\\" required>\\r\\n                        <option value=\\\"\\\" disabled selected>Choose</option>\\r\\n                        <mat-option *ngFor=\\\"let type of staffs\\\" [value]=\\\"type\\\">\\r\\n                            {{type}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n\\r\\n        <mat-card>\\r\\n            <mat-card-header>                \\r\\n               Infrastructure\\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-select placeholder=\\\"Infrastructure\\\"  name=\\\"Infrastructure\\\" >\\r\\n                        <option value=\\\"\\\" disabled selected>Choose</option>\\r\\n                        <mat-option *ngFor=\\\"let type of infrastructures\\\" [value]=\\\"type\\\">\\r\\n                            {{type}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n        <mat-card>\\r\\n            <mat-card-header>                \\r\\n               Equipment\\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-select placeholder=\\\"Equipment\\\"  name=\\\"Equipment\\\">\\r\\n                        <option value=\\\"\\\" disabled selected>Choose</option>\\r\\n                        <mat-option *ngFor=\\\"let type of equipments\\\" [value]=\\\"type\\\">\\r\\n                            {{type}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n        \\r\\n        <mat-card>\\r\\n            <label for=\\\"myfile\\\">Select a file:</label>\\r\\n            <input type=\\\"file\\\" id=\\\"myfile\\\" name=\\\"myfile\\\">\\r\\n        </mat-card>\\r\\n\\r\\n        <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\" (click)=\\\"back()\\\">Save</button>\\r\\n        &nbsp;\\r\\n        &nbsp;\\r\\n        <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\" (click)=\\\"back()\\\">Cancel</button>\\r\\n      </form>\\r\\n    </ng-container>\";","export default \"<p>maintenance-report works!</p>\\r\\n\";","export default \"<h1>Reset Password</h1>\\r\\n\\r\\n<mat-card>\\r\\n    <mat-card-header>                \\r\\n       Username\\r\\n    </mat-card-header>\\r\\n    <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n        <mat-form-field>\\r\\n            <input matInput placeholder=\\\"Username\\\"  name=\\\"Username\\\" required>\\r\\n        </mat-form-field>\\r\\n    </mat-card-content>\\r\\n</mat-card>\\r\\n\\r\\n<mat-card>\\r\\n    <mat-card-header>                \\r\\n       New Password\\r\\n    </mat-card-header>\\r\\n    <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n        <mat-form-field>\\r\\n            <input matInput placeholder=\\\"NPassword\\\" name=\\\"New_Password\\\" required>\\r\\n        </mat-form-field>\\r\\n    </mat-card-content>\\r\\n</mat-card>\\r\\n\\r\\n<mat-card>\\r\\n    <mat-card-header>                \\r\\n       Confirm Password\\r\\n    </mat-card-header>\\r\\n    <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n        <mat-form-field>\\r\\n            <input matInput placeholder=\\\"CPassword\\\"  name=\\\"Confirmed_Password\\\" required>\\r\\n        </mat-form-field>\\r\\n    </mat-card-content>\\r\\n    \\r\\n</mat-card>\\r\\n\\r\\n<button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\">Submit</button>\\r\\n&nbsp;\\r\\n&nbsp;\\r\\n<button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\" (click)= \\\"back()\\\">Cancel</button>\";","export default \"\";","export default \"<mat-sidenav-container>\\r\\n  \\r\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"h-100\\\">\\r\\n\\r\\n        <div fxFlex=\\\"80\\\" fxFlex.gt-sm=\\\"30\\\" fxFlex.sm=\\\"60\\\">\\r\\n\\r\\n            <mat-card class=\\\"p-0 mat-elevation-z24 box\\\">\\r\\n                <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"bg-primary box-header\\\">\\r\\n                    <button mat-fab color=\\\"accent\\\" class=\\\"mat-elevation-z12\\\">\\r\\n                        <mat-icon>warning</mat-icon>\\r\\n                    </button>\\r\\n                    <h1 class=\\\"error\\\">500</h1>\\r\\n                </div>\\r\\n                <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"box-content\\\">\\r\\n                    <mat-card fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"mat-elevation-z12 box-content-inner\\\">\\r\\n                        <span class=\\\"box-content-header server-error\\\">Internal server error</span>  \\r\\n                        <p class=\\\"box-text\\\">Opps, something went wrong.</p> \\r\\n                        <p class=\\\"box-text\\\">You can go to home page.</p> \\r\\n                    </mat-card>\\r\\n                    <button mat-raised-button color=\\\"primary\\\" class=\\\"mat-elevation-z12 box-button\\\" type=\\\"button\\\" (click)=\\\"goHome()\\\">GO HOME</button>\\r\\n                </mat-card-content>\\r\\n            </mat-card>\\r\\n            \\r\\n          </div>    \\r\\n  \\r\\n  </div>\\r\\n\\r\\n</mat-sidenav-container>\";","export default \"<mat-sidenav-container>\\r\\n  \\r\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"h-100\\\">\\r\\n\\r\\n        <div fxFlex=\\\"80\\\" fxFlex.gt-sm=\\\"30\\\" fxFlex.sm=\\\"60\\\">\\r\\n\\r\\n            <mat-card class=\\\"p-0 mat-elevation-z24 box\\\">\\r\\n                <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"bg-primary box-header\\\">\\r\\n                    <button mat-fab color=\\\"accent\\\" class=\\\"mat-elevation-z12\\\">\\r\\n                        <mat-icon>error</mat-icon>\\r\\n                    </button>\\r\\n                    <h1 class=\\\"error\\\">404</h1>\\r\\n                </div>\\r\\n                <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"box-content\\\">\\r\\n                    <mat-card fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"mat-elevation-z12 box-content-inner\\\">\\r\\n                        <p class=\\\"box-text\\\">Opps, it seems that this page does not exist.</p> \\r\\n                        <p class=\\\"box-text\\\">If you are sure it should, search for it.</p> \\r\\n                        <mat-form-field class=\\\"w-100\\\">\\r\\n                            <input matInput placeholder=\\\"Enter search keyword...\\\">\\r\\n                        </mat-form-field>\\r\\n                    </mat-card>\\r\\n                    <button mat-raised-button color=\\\"primary\\\" class=\\\"mat-elevation-z12 box-button\\\" type=\\\"button\\\" (click)=\\\"searchResult()\\\">SUBMIT</button>\\r\\n                </mat-card-content>\\r\\n            </mat-card>\\r\\n            \\r\\n          </div>    \\r\\n  \\r\\n  </div>\\r\\n\\r\\n</mat-sidenav-container>\";","export default \"<mat-sidenav-container>\\r\\n    <mat-sidenav *ngIf=\\\"settings.menu == 'vertical'\\\" [opened]=\\\"settings.sidenavIsOpened\\\" [mode]=\\\"(settings.sidenavIsPinned) ? 'side' : 'over'\\\" #sidenav class=\\\"sidenav mat-elevation-z6\\\">\\r\\n        <app-sidenav></app-sidenav>\\r\\n    </mat-sidenav>\\r\\n    <mat-sidenav-content id=\\\"main\\\" perfectScrollbar [disabled]=\\\"settings.fixedHeader\\\" (psScrollY)=\\\"onPsScrollY($event)\\\">\\r\\n        <mat-toolbar color=\\\"gray\\\" class=\\\"flex-p-x\\\">\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\" class=\\\"w-100\\\">            \\r\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">                    \\r\\n                    <button *ngIf=\\\"settings.menu == 'vertical'\\\" mat-icon-button (click)=\\\"toggleSidenav()\\\">\\r\\n                        <mat-icon>menu</mat-icon>\\r\\n                    </button> \\r\\n                    <button fxShow=\\\"false\\\" fxShow.gt-xs *ngIf=\\\"settings.menu == 'vertical'\\\" mat-icon-button (click)=\\\"settings.sidenavUserBlock = !settings.sidenavUserBlock\\\">\\r\\n                        <mat-icon>person</mat-icon>\\r\\n                    </button> \\r\\n                    <a *ngIf=\\\"settings.menu == 'horizontal'\\\" mat-raised-button color=\\\"accent\\\" routerLink=\\\"/\\\" (click)=\\\"closeSubMenus()\\\" class=\\\"small-logo\\\">A</a>\\r\\n                    <a *ngIf=\\\"settings.menu == 'horizontal'\\\" class=\\\"logo\\\" routerLink=\\\"/\\\" (click)=\\\"closeSubMenus()\\\">AGRILOG</a>  \\r\\n                </div>            \\r\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\">\\r\\n<!-- ------------------------------------------------Use this for farm selection and add farm----------------------------------- -->\\r\\n                    \\r\\n                    \\r\\n                    <label for=\\\"food\\\">Select Farm</label>\\r\\n                    <mat-select placeholder=\\\"Favorite food\\\" [(ngModel)]=\\\"selectedValue\\\" name=\\\"food\\\" (ngModelChange)=\\\"farmChange()\\\">\\r\\n                       \\r\\n                        <mat-option *ngFor=\\\"let food of foods\\\" [value]=\\\"food.value\\\">\\r\\n                            {{food.viewValue}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\"><mat-icon role=\\\"img\\\" class=\\\"mat-icon notranslate material-icons mat-icon-no-color\\\" aria-hidden=\\\"true\\\">add</mat-icon></div>\\r\\n                    \\r\\n <!-- ------------------------------------------------------------------------------------------------------ -->\\r\\n                    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxShow=\\\"false\\\" fxShow.gt-xs class=\\\"search-bar\\\">\\r\\n                       \\r\\n                    </div>                \\r\\n                    \\r\\n                    <app-fullscreen></app-fullscreen> \\r\\n                    \\r\\n                    <app-user-menu></app-user-menu> \\r\\n                </div>\\r\\n            </div>\\r\\n        </mat-toolbar>\\r\\n\\r\\n        <mat-toolbar id=\\\"horizontal-menu\\\" color=\\\"primary\\\" *ngIf=\\\"settings.menu == 'horizontal'\\\" \\r\\n            class=\\\"horizontal-menu flex-p-x transition-2\\\"  \\r\\n            [class.fixed-top]=\\\"!settings.fixedHeader\\\">\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"w-100\\\">            \\r\\n                <app-horizontal-menu [menuParentId]=\\\"0\\\"></app-horizontal-menu>\\r\\n            </div>            \\r\\n        </mat-toolbar>\\r\\n\\r\\n        <div id=\\\"main-content\\\" class=\\\"inner-sidenav-content transition-2\\\" perfectScrollbar [disabled]=\\\"!settings.fixedHeader\\\" (psScrollY)=\\\"onPsScrollY($event)\\\"> \\r\\n            <app-breadcrumb></app-breadcrumb>\\r\\n            <div [class.has-footer]=\\\"settings.hasFooter\\\">\\r\\n                <router-outlet></router-outlet>\\r\\n            </div>           \\r\\n           \\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"options-icon\\\" (click)=\\\"options.toggle()\\\">\\r\\n            <mat-icon>settings</mat-icon>\\r\\n        </div>\\r\\n\\r\\n        <div #backToTop fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"back-to-top\\\" (click)=\\\"scrollToTop()\\\">\\r\\n            <mat-icon>arrow_upward</mat-icon>\\r\\n        </div>\\r\\n\\r\\n    </mat-sidenav-content>\\r\\n    \\r\\n    <mat-sidenav #options position=\\\"end\\\" class=\\\"options\\\">        \\r\\n       \\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"control mat-elevation-z1\\\">\\r\\n            <h2>Settings</h2>\\r\\n        </div>  \\r\\n\\r\\n        <div perfectScrollbar>\\r\\n\\r\\n            <div fxLayout=\\\"column\\\" class=\\\"control\\\">\\r\\n                <h4>Layout</h4>        \\r\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                    <span>Fixed header</span>\\r\\n                    <mat-slide-toggle [checked]=\\\"settings.fixedHeader\\\" (change)=\\\"settings.fixedHeader = !settings.fixedHeader\\\" labelPosition=\\\"before\\\"></mat-slide-toggle>\\r\\n                </div>                \\r\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                    <span>RTL</span>\\r\\n                    <mat-slide-toggle [checked]=\\\"settings.rtl\\\" (change)=\\\"settings.rtl = !settings.rtl\\\" labelPosition=\\\"before\\\"></mat-slide-toggle>\\r\\n                </div>\\r\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                    <span>Has Footer</span>\\r\\n                    <mat-slide-toggle [checked]=\\\"settings.hasFooter\\\" (change)=\\\"settings.hasFooter = !settings.hasFooter\\\" labelPosition=\\\"before\\\"></mat-slide-toggle>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div fxLayout=\\\"column\\\" class=\\\"control\\\">\\r\\n                <h4>Choose menu</h4>\\r\\n                <mat-radio-group [(ngModel)]=\\\"menuOption\\\" (change)=\\\"chooseMenu()\\\">\\r\\n                    <mat-radio-button *ngFor=\\\"let menu of menus\\\" [value]=\\\"menu\\\">{{menu}}</mat-radio-button>\\r\\n                </mat-radio-group>\\r\\n            </div>\\r\\n\\r\\n            <div fxLayout=\\\"column\\\" class=\\\"control\\\">\\r\\n                <h4>Choose menu type</h4>\\r\\n                <mat-radio-group [(ngModel)]=\\\"menuTypeOption\\\" (change)=\\\"chooseMenuType()\\\">\\r\\n                    <mat-radio-button *ngFor=\\\"let menuType of menuTypes\\\" [value]=\\\"menuType\\\">{{menuType}}</mat-radio-button>\\r\\n                </mat-radio-group>\\r\\n            </div>\\r\\n\\r\\n            <div fxLayout=\\\"column\\\" class=\\\"control\\\">\\r\\n                <h4>Choose theme skin</h4>        \\r\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\"> \\r\\n                    <div class=\\\"skin-primary indigo-light\\\" (click)=\\\"changeTheme('indigo-light')\\\"><div class=\\\"skin-secondary\\\"></div></div>  \\r\\n                    <div class=\\\"skin-primary teal-light\\\" (click)=\\\"changeTheme('teal-light')\\\"><div class=\\\"skin-secondary\\\"></div></div>  \\r\\n                    <div class=\\\"skin-primary red-light\\\" (click)=\\\"changeTheme('red-light')\\\"><div class=\\\"skin-secondary\\\"></div></div>  \\r\\n                    <div class=\\\"skin-primary blue-dark\\\" (click)=\\\"changeTheme('blue-dark')\\\"><div class=\\\"skin-secondary\\\"></div></div>  \\r\\n                    <div class=\\\"skin-primary green-dark\\\" (click)=\\\"changeTheme('green-dark')\\\"><div class=\\\"skin-secondary\\\"></div></div>  \\r\\n                    <div class=\\\"skin-primary pink-dark\\\" (click)=\\\"changeTheme('pink-dark')\\\"><div class=\\\"skin-secondary\\\"></div></div>  \\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div fxLayout=\\\"column\\\" class=\\\"control\\\">\\r\\n                <h4>Sidenav options</h4>\\r\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                    <span>Opened sidenav</span>\\r\\n                    <mat-slide-toggle [checked]=\\\"settings.sidenavIsOpened\\\" (change)=\\\"settings.sidenavIsOpened = !settings.sidenavIsOpened\\\" labelPosition=\\\"before\\\"></mat-slide-toggle>\\r\\n                </div>\\r\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                    <span>Pinned sidenav</span>\\r\\n                    <mat-slide-toggle [checked]=\\\"settings.sidenavIsPinned\\\" (change)=\\\"settings.sidenavIsPinned = !settings.sidenavIsPinned\\\" labelPosition=\\\"before\\\"></mat-slide-toggle>\\r\\n                </div>\\r\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                    <span>Sidenav user info</span>\\r\\n                    <mat-slide-toggle [checked]=\\\"settings.sidenavUserBlock\\\" (change)=\\\"settings.sidenavUserBlock = !settings.sidenavUserBlock\\\" labelPosition=\\\"before\\\"></mat-slide-toggle>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n    </mat-sidenav>\\r\\n\\r\\n</mat-sidenav-container>\";","export default \"<div fxLayout=\\\"row wrap\\\">\\r\\n  <div fxFlex class=\\\"flex-p\\\"> <h4>Search results...</h4></div>\\r\\n</div>\";","export default \"<h1 mat-dialog-title>Cannot decomission</h1>\\r\\n<div mat-dialog-content>\\r\\n  <p>Certain holds are preventing the vehicle from being decomissioned</p>\\r\\n  <p>Check for outstanding service requests to the vehicle</p>\\r\\n \\r\\n\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-button [mat-dialog-close]=\\\"data.animal\\\" tabindex=\\\"2\\\">OK</button>\\r\\n\\r\\n \\r\\n\\r\\n</div>\";","export default \"<div fxLayout=\\\"column\\\">\\r\\n    <div class=\\\"flex-p\\\">\\r\\n        <mat-card>\\r\\n            <mat-card-header>                \\r\\n                <mat-card-subtitle><h2>Dialog Overview</h2></mat-card-subtitle>\\r\\n            </mat-card-header>\\r\\n            <mat-card-content>\\r\\n                <mat-form-field>\\r\\n                    <input matInput [(ngModel)]=\\\"name\\\" placeholder=\\\"What's your name?\\\">\\r\\n                </mat-form-field>\\r\\n                <p>\\r\\n                    <button mat-raised-button (click)=\\\"openDialog()\\\">Pick one</button>\\r\\n                </p>\\r\\n                <p *ngIf=\\\"animal\\\" class=\\\"py-1\\\">You chose: <i>{{animal}}</i></p>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n</div>\";","export default \"<h1>Repair Logs</h1>\\r\\n<div *ngIf=\\\"hideTable\\\">\\r\\n<button mat-raised-button color=\\\"primary\\\" (click) = \\\"AddRepairLog()\\\" class=\\\"m-1\\\">Add New</button>\\r\\n<button mat-raised-button color=\\\"primary\\\" (click) = \\\"SendNotification()\\\" class=\\\"m-1\\\">Send Repair Notification</button>\\r\\n<button mat-raised-button color=\\\"primary\\\" (click) = \\\"GenerateReport()\\\" class=\\\"m-1\\\">Generate Repair Report</button>\\r\\n\\r\\n<div fxLayout=\\\"column\\\">\\r\\n    <div class=\\\"flex-p\\\"> \\r\\n        <div fxLayout=\\\"column\\\" class=\\\"mat-elevation-z8\\\">           \\r\\n            <mat-form-field class=\\\"p-1\\\">\\r\\n                <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Type to filter all columns\\\">\\r\\n            </mat-form-field> \\r\\n        </div>\\r\\n        <mat-table #table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">       \\r\\n            <ng-container matColumnDef=\\\"VehicleRepair_ID\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> ID </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.VehicleRepair_ID}} </mat-cell>\\r\\n            </ng-container> \\r\\n            <ng-container matColumnDef=\\\"Provider_Name\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Repair Provider </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Provider_Name}} </mat-cell>\\r\\n            </ng-container>        \\r\\n            <ng-container matColumnDef=\\\"VRD_Invoice\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Invoice </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.VRD_Invoice}} </mat-cell>\\r\\n           </ng-container>     <!--(here we need to have option to submit an invoice)    -->\\r\\n            <ng-container matColumnDef=\\\"Vehicle_Registration_Number\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Vehicle Registration Number </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Vehicle_Registration_Number}} </mat-cell>\\r\\n            </ng-container>        \\r\\n            <ng-container matColumnDef=\\\"Vehicle_Repair_Date_Started\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Date Started </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Vehicle_Repair_Date_Started | date}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"Vehicle_Repair_Date_Ended\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Date Ended </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Vehicle_Repair_Date_Ended | date}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"Vehicle_Repair_Cost\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Cost </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Vehicle_Repair_Cost}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"Status_Description\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Status </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Status_Description}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"Actions\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\" >\\r\\n                    <button mat-fab class=\\\"m-1\\\" style=\\\"color: green; background-color:rgb(51, 49, 49)\\\" (click) ='getRepairLogDetail(element.VehicleRepair_ID)'>\\r\\n                        <mat-icon>edit</mat-icon>\\r\\n                    </button>\\r\\n                    <button mat-fab class=\\\"m-1\\\"  style=\\\"color: red; background-color: rgb(51, 49, 49);\\\"  (click)=\\\"deleteRepairLog()\\\">\\r\\n                        <mat-icon>delete_forever</mat-icon>\\r\\n                    </button>\\r\\n               </mat-cell>\\r\\n            </ng-container>\\r\\n\\r\\n            \\r\\n\\r\\n\\r\\n            <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n            <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n        </mat-table>  \\r\\n        <mat-paginator #paginator [pageSize]=\\\"5\\\" [pageSizeOptions]=\\\"[5, 10]\\\"></mat-paginator>      \\r\\n    </div>\\r\\n</div>\\r\\n</div>\\r\\n<br>\\r\\n\\r\\n<ng-container *ngIf=\\\"show\\\">\\r\\n    <h2>Edit Repair Log</h2>\\r\\n<form ng-show=\\\"show\\\" name=\\\"RepairLogSub\\\" #userForm=\\\"ngForm\\\" ngNativeValidate (ngSubmit)=\\\"PutRepairLog()\\\">\\r\\n    <mat-card>\\r\\n        <mat-card-header>                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Provider\\\" [(ngModel)]=\\\"ProviderSelect\\\" name=\\\"Provider\\\">\\r\\n                    <mat-option *ngFor=\\\"let type of providers\\\" [value]=\\\"type\\\">\\r\\n                        {{type}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n    \\r\\n    <mat-card>              \\r\\n        <mat-card-header>                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-label>Upload Invoice Here: </mat-label>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <input class=\\\"ng-hide\\\" id=\\\"input-file-id\\\" multiple type=\\\"file\\\" placeholder=\\\"All Auto Repair-Agrilog-Invoice.pdf\\\"/>\\r\\n    </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header>                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Vehicle\\\" [(ngModel)]=\\\"selectedValue\\\" name=\\\"Vehicle\\\">\\r\\n                    <mat-option *ngFor=\\\"let type of vehicles\\\" [value]=\\\"type\\\">\\r\\n                        {{type}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n                \\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-label>Choose a start date</mat-label>\\r\\n                <input matInput [matDatepicker]=\\\"updateStartDatePicker\\\" placeholder=\\\"Start_Date\\\" [(ngModel)]=\\\"StartDateSelected\\\" name=\\\"Start_Date\\\" required>\\r\\n                <mat-datepicker-toggle matSuffix [for]=\\\"updateStartDatePicker\\\"></mat-datepicker-toggle>\\r\\n                <mat-datepicker #updateStartDatePicker></mat-datepicker>\\r\\n              </mat-form-field>                                 \\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-label>Choose an end date</mat-label>\\r\\n                <input matInput [matDatepicker]=\\\"updateEndDatePicker\\\" placeholder=\\\"End_Date\\\" [(ngModel)]=\\\"EndDateSelected\\\" name=\\\"End_Date\\\" required>\\r\\n                <mat-datepicker-toggle matSuffix [for]=\\\"updateEndDatePicker\\\"></mat-datepicker-toggle>\\r\\n                <mat-datepicker #updateEndDatePicker></mat-datepicker>\\r\\n              </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Cost\\\" [(ngModel)]=\\\"RepairLogEdit.Vehicle_Repair_Cost\\\" name=\\\"Cost\\\" required>\\r\\n            </mat-form-field>\\r\\n                               \\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n    <mat-card>\\r\\n        <mat-card-header>                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Status\\\" [(ngModel)]=\\\"StatusSelect\\\" name=\\\"Status\\\">\\r\\n                    <mat-option *ngFor=\\\"let type of statusses\\\" [value]=\\\"type\\\">\\r\\n                        {{type}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n                \\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    \\r\\n    <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\">Save Changes</button>\\r\\n  </form>\\r\\n  <button mat-raised-button color=\\\"m-1\\\" (click)=\\\"back()\\\">Back</button>\\r\\n</ng-container>\\r\\n\\r\\n    <ng-container *ngIf=\\\"showAdd\\\">\\r\\n        <h2>Add Repair Log</h2>\\r\\n        <form ng-show=\\\"show\\\" name=\\\"RepairLogSub\\\" #userForm=\\\"ngForm\\\" ngNativeValidate (ngSubmit)=\\\"PutRepairLog()\\\">\\r\\n            <mat-card>              \\r\\n            <mat-card-header>                \\r\\n               \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-select placeholder=\\\"Provider\\\" [(ngModel)]=\\\"RepairLogAdd.ProviderSelect\\\" name=\\\"Provider\\\" required>\\r\\n                        <option value=\\\"\\\" disabled selected>Choose</option>\\r\\n                        <mat-option *ngFor=\\\"let type of providers\\\" [value]=\\\"type\\\">\\r\\n                            {{type}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n         <mat-card>              \\r\\n            <mat-card-header>                \\r\\n               \\r\\n            </mat-card-header>\\r\\n            <mat-label>Upload Invoice Here: </mat-label>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                    <input class=\\\"ng-hide\\\" id=\\\"input-file-id\\\" multiple type=\\\"file\\\" />\\r\\n        </mat-card-content>\\r\\n        </mat-card> \\r\\n        \\r\\n        <mat-card>\\r\\n            <mat-card-header>                \\r\\n               \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-select placeholder=\\\"Vehicle\\\" [(ngModel)]=\\\"RepairLogAdd.selectedValue\\\" name=\\\"Vehicle\\\" required>\\r\\n                        <option value=\\\"\\\" disabled selected>Choose</option>\\r\\n                        <mat-option *ngFor=\\\"let type of vehicles\\\" [value]=\\\"type\\\">\\r\\n                            {{type}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                    \\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n        <mat-card>\\r\\n            <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n               \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <!-- <mat-form-field>\\r\\n                    <input matInput type=\\\"datetime\\\" placeholder=\\\"Start_Date\\\" [(ngModel)]=\\\"RepairLogAdd.Vehicle_Repair_Date_Started\\\" name=\\\"Start_Date\\\" required>\\r\\n                </mat-form-field> -->\\r\\n                <mat-form-field>\\r\\n                    <mat-label>Choose a start date</mat-label>\\r\\n                    <input matInput [matDatepicker]=\\\"addStartDatePicker\\\" placeholder=\\\"Start_Date\\\" [(ngModel)]=\\\"RepairLogAdd.Vehicle_Repair_Date_Started\\\" name=\\\"Start_Date\\\" required>\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"addStartDatePicker\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker #addStartDatePicker></mat-datepicker>\\r\\n                  </mat-form-field>                                 \\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n        <mat-card>\\r\\n            <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n               \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <!-- <mat-form-field>\\r\\n                    <input matInput type=\\\"datetime\\\" placeholder=\\\"End_Date\\\" [(ngModel)]=\\\"RepairLogAdd.Vehicle_Repair_Date_Ended\\\" name=\\\"End_Date\\\" required>\\r\\n                </mat-form-field> -->\\r\\n                <mat-form-field>\\r\\n                    <mat-label>Choose an end date</mat-label>\\r\\n                    <input matInput [matDatepicker]=\\\"addEndDatePicker\\\" placeholder=\\\"End_Date\\\" [(ngModel)]=\\\"RepairLogAdd.Vehicle_Repair_Date_Ended\\\" name=\\\"End_Date\\\" required>\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"addEndDatePicker\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker #addEndDatePicker></mat-datepicker>\\r\\n                  </mat-form-field>                   \\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n        <mat-card>\\r\\n            <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n               \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Cost\\\" [(ngModel)]=\\\"RepairLogAdd.Vehicle_Repair_Cost\\\" name=\\\"Cost\\\" required>\\r\\n                </mat-form-field>\\r\\n                                   \\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n        <mat-card>\\r\\n            <mat-card-header>                \\r\\n               \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-select placeholder=\\\"Status\\\" [(ngModel)]=\\\"RepairLogAdd.StatusSelect\\\" name=\\\"Status\\\" required>\\r\\n                        <option value=\\\"\\\" disabled selected>Choose</option>\\r\\n                        <mat-option *ngFor=\\\"let type of statusses\\\" [value]=\\\"type\\\">\\r\\n                            {{type}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                    \\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n            <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\">Save</button>\\r\\n          </form>\\r\\n          <button mat-raised-button color=\\\"m-1\\\" (click)=\\\"back()\\\" class=\\\"m-1\\\">Back</button>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container *ngIf=\\\"showRequest\\\">\\r\\n            <h2>Send Repair Request</h2>\\r\\n            <form ng-show=\\\"show\\\" name=\\\"RepairLogSub\\\" #userForm=\\\"ngForm\\\" ngNativeValidate (ngSubmit)=\\\"PutRepairRequest()\\\">\\r\\n                <mat-card>              \\r\\n                <mat-card-header>                \\r\\n                   \\r\\n                </mat-card-header>\\r\\n                <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                    <mat-form-field>\\r\\n                        <mat-select placeholder=\\\"Provider\\\" [(ngModel)]=\\\"RepairRequestAdd.ProviderSelect\\\" name=\\\"Provider\\\" required>\\r\\n                            <option value=\\\"\\\" disabled selected>Choose</option>\\r\\n                            <mat-option *ngFor=\\\"let type of providers\\\" [value]=\\\"type\\\">\\r\\n                                {{type}}\\r\\n                            </mat-option>\\r\\n                        </mat-select>\\r\\n                    </mat-form-field>\\r\\n                </mat-card-content>\\r\\n            </mat-card>\\r\\n        \\r\\n            <!-- <mat-card>              \\r\\n                <mat-card-header>                \\r\\n                   \\r\\n                </mat-card-header>\\r\\n                <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                    <mat-form-field>\\r\\n                        <ngx-mat-file-input [formControl]=\\\"fileControl\\\" [multiple]=\\\"multiple\\\" [accept]=\\\"accept\\\" [color]=\\\"color\\\">\\r\\n                           <mat-icon ngxMatFileInputIcon>folder</mat-icon>\\r\\n                        </ngx-mat-file-input>\\r\\n                     </mat-form-field>\\r\\n            </mat-card-content>\\r\\n            </mat-card> -->\\r\\n            \\r\\n            <mat-card>\\r\\n                <mat-card-header>                \\r\\n                   \\r\\n                </mat-card-header>\\r\\n                <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                    <mat-form-field>\\r\\n                        <mat-select placeholder=\\\"Vehicle\\\" [(ngModel)]=\\\"RepairRequestAdd.selectedValue\\\" name=\\\"Vehicle\\\" required>\\r\\n                            <option value=\\\"\\\" disabled selected>Choose</option>\\r\\n                            <mat-option *ngFor=\\\"let type of vehicles\\\" [value]=\\\"type\\\">\\r\\n                                {{type}}\\r\\n                            </mat-option>\\r\\n                        </mat-select>\\r\\n                        \\r\\n                    </mat-form-field>\\r\\n                </mat-card-content>\\r\\n            </mat-card>\\r\\n        \\r\\n            <mat-card>\\r\\n                <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n                   \\r\\n                </mat-card-header>\\r\\n                <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                    <!-- <mat-form-field>\\r\\n                        <input matInput type=\\\"datetime\\\" placeholder=\\\"Start_Date\\\" [(ngModel)]=\\\"RepairLogAdd.Vehicle_Repair_Date_Started\\\" name=\\\"Start_Date\\\" required>\\r\\n                    </mat-form-field> -->\\r\\n                    <mat-form-field>\\r\\n                        <mat-label>Choose a start date</mat-label>\\r\\n                        <input matInput [matDatepicker]=\\\"addStartDatePicker\\\" placeholder=\\\"Start_Date\\\" [(ngModel)]=\\\"RepairRequestAdd.Vehicle_Repair_Date_Started\\\" name=\\\"Start_Date\\\" required>\\r\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"addStartDatePicker\\\"></mat-datepicker-toggle>\\r\\n                        <mat-datepicker #addStartDatePicker></mat-datepicker>\\r\\n                      </mat-form-field>                                 \\r\\n                </mat-card-content>\\r\\n            </mat-card>\\r\\n        \\r\\n            <!-- <mat-card>\\r\\n                <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n                   \\r\\n                </mat-card-header>\\r\\n                <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                     <mat-form-field>\\r\\n                        <input matInput type=\\\"datetime\\\" placeholder=\\\"End_Date\\\" [(ngModel)]=\\\"RepairLogAdd.Vehicle_Repair_Date_Ended\\\" name=\\\"End_Date\\\" required>\\r\\n                    </mat-form-field>\\r\\n                    <mat-form-field>\\r\\n                        <mat-label>Choose an end date</mat-label>\\r\\n                        <input matInput [matDatepicker]=\\\"addEndDatePicker\\\" placeholder=\\\"End_Date\\\" [(ngModel)]=\\\"RepairLogAdd.Vehicle_Repair_Date_Ended\\\" name=\\\"End_Date\\\" required>\\r\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"addEndDatePicker\\\"></mat-datepicker-toggle>\\r\\n                        <mat-datepicker #addEndDatePicker></mat-datepicker>\\r\\n                      </mat-form-field>                   \\r\\n                </mat-card-content>\\r\\n            </mat-card> -->\\r\\n        \\r\\n            <mat-card>\\r\\n                <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n                   \\r\\n                </mat-card-header>\\r\\n                <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                    <mat-form-field>\\r\\n                        <input matInput placeholder=\\\"Cost\\\" [(ngModel)]=\\\"RepairRequestAdd.Vehicle_Repair_Cost\\\" name=\\\"Cost\\\" required>\\r\\n                    </mat-form-field>\\r\\n                                       \\r\\n                </mat-card-content>\\r\\n            </mat-card>\\r\\n        \\r\\n            <mat-card>\\r\\n                <mat-card-header>                \\r\\n                   \\r\\n                </mat-card-header>\\r\\n                <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                    <mat-form-field>\\r\\n                        <mat-select placeholder=\\\"Status\\\" [(ngModel)]=\\\"RepairRequestAdd.StatusSelect\\\" name=\\\"Status\\\" required>\\r\\n                            <option value=\\\"\\\" disabled selected>Choose</option>\\r\\n                            <mat-option *ngFor=\\\"let type of statusses\\\" [value]=\\\"type\\\">\\r\\n                                {{type}}\\r\\n                            </mat-option>\\r\\n                        </mat-select>\\r\\n                        \\r\\n                    </mat-form-field>\\r\\n                </mat-card-content>\\r\\n            </mat-card>\\r\\n        \\r\\n                <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\">Send</button>\\r\\n              </form>\\r\\n              <button mat-raised-button color=\\\"m-1\\\" (click)=\\\"back()\\\" class=\\\"m-1\\\">Back</button>\\r\\n            </ng-container>\\r\\n    \";","export default \"<h1>Reset Password</h1>\\r\\n\\r\\n<mat-card>\\r\\n    <mat-card-header>                \\r\\n       Username\\r\\n    </mat-card-header>\\r\\n    <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n        <mat-form-field>\\r\\n            <input matInput placeholder=\\\"Username\\\"  name=\\\"Username\\\" required>\\r\\n        </mat-form-field>\\r\\n    </mat-card-content>\\r\\n</mat-card>\\r\\n\\r\\n<button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\">Save</button>\\r\\n        &nbsp;\\r\\n        &nbsp;\\r\\n        <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\" (click)= \\\"back()\\\">Cancel</button>\";","export default \"<h1>Scheduled Tasks</h1>\\r\\n<div *ngIf=\\\"hideTable\\\">\\r\\n<button mat-raised-button color=\\\"primary\\\" (click) = \\\"AddScheduledTask()\\\" class=\\\"m-1\\\">Schedule Task</button>\\r\\n<button mat-raised-button color=\\\"primary\\\" (click) = \\\"SendSchedules()\\\" class=\\\"m-1\\\">Send Daily Schedules</button>\\r\\n<button mat-raised-button color=\\\"primary\\\" (click) = \\\"GenerateSchedules()\\\" class=\\\"m-1\\\">Generate Daily Schedules</button>\\r\\n\\r\\n<div fxLayout=\\\"column\\\">\\r\\n    <div class=\\\"flex-p\\\"> \\r\\n        <div fxLayout=\\\"column\\\" class=\\\"mat-elevation-z8\\\">           \\r\\n            <mat-form-field class=\\\"p-1\\\">\\r\\n                <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Type to filter all columns\\\">\\r\\n            </mat-form-field> \\r\\n        </div>\\r\\n        <mat-table #table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">       \\r\\n            <ng-container matColumnDef=\\\"Schedule_ID\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> ID </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Schedule_ID}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"Day_Description\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Day of Week </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Day_Description}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"Schedule_Start_Date\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Start Date </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Schedule_Start_Date | date}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"Schedule_End_Date\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> End Date </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Schedule_End_Date | date}} </mat-cell>\\r\\n            </ng-container>       \\r\\n            <!-- <ng-container matColumnDef=\\\"VRD_Invoice\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Type </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.VRD_Invoice}} </mat-cell>\\r\\n            </ng-container>   (here we need to have option to submit an invoice)   -->\\r\\n            <ng-container matColumnDef=\\\"Task_Description\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Task </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Task_Description}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"Staff_Name\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Staff Assigned </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Staff_Name}} </mat-cell>\\r\\n            </ng-container>        \\r\\n            <ng-container matColumnDef=\\\"Status_Description\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Status </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Status_Description}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"Actions\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\" >\\r\\n                    <button mat-fab class=\\\"m-1\\\" style=\\\"color: green; background-color:rgb(51, 49, 49)\\\" (click) ='getScheduledTaskDetail(element.Schedule_ID)'>\\r\\n                        <mat-icon>edit</mat-icon>\\r\\n                    </button>\\r\\n                    <button mat-fab class=\\\"m-1\\\" style=\\\"color: red; background-color: rgb(51, 49, 49);\\\" (click)=\\\"deleteScheduledTask()\\\">\\r\\n                        <mat-icon>delete_forever</mat-icon>\\r\\n                    </button>\\r\\n               </mat-cell>\\r\\n            </ng-container>\\r\\n\\r\\n            \\r\\n\\r\\n\\r\\n            <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n            <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n        </mat-table>  \\r\\n        <mat-paginator #paginator [pageSize]=\\\"5\\\" [pageSizeOptions]=\\\"[5, 10]\\\"></mat-paginator>      \\r\\n    </div>\\r\\n</div>\\r\\n</div>\\r\\n<br>\\r\\n\\r\\n<ng-container *ngIf=\\\"show\\\">\\r\\n    <h2>Edit Scheduled Task</h2>\\r\\n<form ng-show=\\\"show\\\" name=\\\"ScheduleSub\\\" #userForm=\\\"ngForm\\\" ngNativeValidate (ngSubmit)=\\\"PutScheduledTask()\\\">\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header>                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <section class=\\\"example-section\\\">\\r\\n                    <mat-checkbox (change)=\\\"onChangeRecurring()\\\" class=\\\"example-margin\\\" [(ngModel)]=\\\"once\\\" [(ngModel)]=\\\"recurring\\\" name=\\\"recurring\\\">Schedule task to reoccur over a specified time period: </mat-checkbox>\\r\\n                  </section>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card *ngIf=\\\"recurring\\\">\\r\\n        <mat-card-header>                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Day\\\" [(ngModel)]=\\\"DaySelect\\\" name=\\\"Day\\\" required>\\r\\n                    <mat-option *ngFor=\\\"let type of days\\\" [value]=\\\"type\\\">\\r\\n                        {{type}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n    \\r\\n    <mat-card >\\r\\n        <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-label *ngIf=\\\"recurring\\\">Choose a start date</mat-label>\\r\\n                <mat-label *ngIf=\\\"once\\\">Choose a date</mat-label>\\r\\n                <input matInput [matDatepicker]=\\\"updateStartDatePicker\\\" placeholder=\\\"Start_Date\\\" [(ngModel)]=\\\"StartDateSelected\\\" name=\\\"Start_Date\\\" required>\\r\\n                <mat-datepicker-toggle matSuffix [for]=\\\"updateStartDatePicker\\\"></mat-datepicker-toggle>\\r\\n                <mat-datepicker #updateStartDatePicker></mat-datepicker>\\r\\n              </mat-form-field>                                 \\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card *ngIf=\\\"recurring\\\">\\r\\n        <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-label>Choose an end date</mat-label>\\r\\n                <input matInput [matDatepicker]=\\\"updateEndDatePicker\\\" placeholder=\\\"End_Date\\\" [(ngModel)]=\\\"EndDateSelected\\\" name=\\\"End_Date\\\" required>\\r\\n                <mat-datepicker-toggle matSuffix [for]=\\\"updateEndDatePicker\\\"></mat-datepicker-toggle>\\r\\n                <mat-datepicker #updateEndDatePicker></mat-datepicker>\\r\\n              </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header>                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Task\\\" [(ngModel)]=\\\"TaskSelect\\\" name=\\\"Task\\\" required>\\r\\n                    <mat-option *ngFor=\\\"let type of tasks\\\" [value]=\\\"type\\\">\\r\\n                        {{type}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n                \\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header>                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Staff\\\" [(ngModel)]=\\\"StaffSelect\\\" name=\\\"Staff\\\" required>\\r\\n                    <mat-option *ngFor=\\\"let type of staff\\\" [value]=\\\"type\\\">\\r\\n                        {{type}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n                \\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n    <mat-card>\\r\\n        <mat-card-header>                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Status\\\" [(ngModel)]=\\\"StatusSelect\\\" name=\\\"Status\\\" required>\\r\\n                    <mat-option *ngFor=\\\"let type of statusses\\\" [value]=\\\"type\\\">\\r\\n                        {{type}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n                \\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    \\r\\n    <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\">Save Changes</button>\\r\\n  </form>\\r\\n  <button mat-raised-button color=\\\"m-1\\\" (click)=\\\"back()\\\">Back</button>\\r\\n</ng-container>\\r\\n\\r\\n<ng-container *ngIf=\\\"showAdd\\\">\\r\\n    <h2>Schedule Task</h2>\\r\\n    <form ng-show=\\\"show\\\" name=\\\"ScheduleSub\\\" #userForm=\\\"ngForm\\\" ngNativeValidate (ngSubmit)=\\\"PutScheduledTask()\\\">\\r\\n\\r\\n        <mat-card>\\r\\n            <mat-card-header>                \\r\\n               \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                    <section class=\\\"example-section\\\">\\r\\n                        <mat-checkbox (change)=\\\"onChangeRecurring()\\\" class=\\\"example-margin\\\" [(ngModel)]=\\\"once\\\" [(ngModel)]=\\\"recurring\\\" name=\\\"recurring\\\">Schedule task to reoccur over a specified time period: </mat-checkbox>\\r\\n                      </section>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n\\r\\n        <mat-card *ngIf=\\\"recurring\\\">\\r\\n            <mat-card-header>                \\r\\n               \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-select placeholder=\\\"Day\\\" (ngModelChange)=\\\"onChangeDay($event)\\\" [(ngModel)]=\\\"ScheduledTaskAdd.DaySelect\\\" name=\\\"Day\\\" required> \\r\\n                        <option value=\\\"\\\" disabled selected>Choose</option>\\r\\n                        <mat-option *ngFor=\\\"let type of days\\\" value=\\\"type\\\">\\r\\n                            {{type}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n<mat-card > \\r\\n        <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-label *ngIf=\\\"recurring\\\">Choose a start date</mat-label>\\r\\n                <mat-label *ngIf=\\\"once\\\">Choose a date</mat-label>\\r\\n                <input matInput [matDatepicker]=\\\"addStartDatePicker\\\" (ngModelChange)=\\\"onChangeStartDate($event)\\\" placeholder=\\\"Start_Date\\\" [(ngModel)]=\\\"ScheduledTaskAdd.Schedule_Start_Date\\\" name=\\\"Start_Date\\\" required>\\r\\n                <mat-datepicker-toggle matSuffix [for]=\\\"addStartDatePicker\\\"></mat-datepicker-toggle>\\r\\n                <mat-datepicker #addStartDatePicker></mat-datepicker>\\r\\n              </mat-form-field>                                 \\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card *ngIf=\\\"recurring\\\">\\r\\n        <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-label>Choose an end date</mat-label>\\r\\n                <input matInput [matDatepicker]=\\\"addEndDatePicker\\\" (ngModelChange)=\\\"onChangeEndDate($event)\\\" placeholder=\\\"End_Date\\\" [(ngModel)]=\\\"ScheduledTaskAdd.Schedule_End_Date\\\" name=\\\"End_Date\\\" required>\\r\\n                <mat-datepicker-toggle matSuffix [for]=\\\"addEndDatePicker\\\"></mat-datepicker-toggle>\\r\\n                <mat-datepicker #addEndDatePicker></mat-datepicker>\\r\\n              </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header>                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Task\\\" (ngModelChange)=\\\"onChangeTask($event)\\\" [(ngModel)]=\\\"ScheduledTaskAdd.TaskSelect\\\" name=\\\"Task\\\" [disabled]=\\\"!disableTask\\\" required>\\r\\n                    <option value=\\\"\\\" disabled selected>Choose</option>\\r\\n                    <mat-option *ngFor=\\\"let type of tasks\\\" value=\\\"type\\\">\\r\\n                        {{type}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n                \\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header>                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Staff\\\" [(ngModel)]=\\\"ScheduledTaskAdd.StaffSelect\\\" name=\\\"Staff\\\" [disabled]=\\\"!disableStaff\\\" required>\\r\\n                    <option value=\\\"\\\" disabled selected>Choose</option>\\r\\n                    <mat-option *ngFor=\\\"let type of staff\\\" value=\\\"type\\\">\\r\\n                        {{type}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n                \\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n        <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" class=\\\"m-1\\\">Save</button>\\r\\n      </form>\\r\\n      <button mat-raised-button color=\\\"m-1\\\" (click)=\\\"back()\\\" class=\\\"m-1\\\">Back</button>\\r\\n    </ng-container>\\r\\n\";","export default \"<h1>Generate Section Report</h1>\\r\\n\\r\\n  <section class=\\\"example-section\\\">\\r\\n    <mat-checkbox class=\\\"example-margin\\\">Sections</mat-checkbox>\\r\\n  </section>\\r\\n\\r\\n  <section class=\\\"example-section\\\">\\r\\n    <mat-checkbox class=\\\"example-margin\\\">Section Types</mat-checkbox>\\r\\n  </section>\\r\\n\\r\\n  <br>\\r\\n\\r\\n  <button mat-raised-button color=\\\"primary\\\" (click) = \\\"generateReport()\\\" class=\\\"m-1\\\">Submit</button>\\r\\n  &nbsp;\\r\\n  &nbsp;\\r\\n  <button mat-raised-button color=\\\"primary\\\" (click) = \\\"Cancel()\\\" class=\\\"m-1\\\">Cancel</button>\\r\\n  &nbsp;\\r\\n  &nbsp;\\r\\n  <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\" disabled>Download</button>\";","export default \"<h1 style=\\\"text-align: center;\\\">Section Types</h1>\\r\\n<button mat-raised-button color=\\\"primary\\\" (click) = \\\"AddSectionType()\\\" class=\\\"m-1\\\">Add New SectionType Type</button>\\r\\n\\r\\n<div fxLayout=\\\"column\\\">\\r\\n    <div class=\\\"flex-p\\\"> \\r\\n        <div fxLayout=\\\"column\\\" class=\\\"mat-elevation-z8\\\">           \\r\\n            <mat-form-field class=\\\"p-1\\\">\\r\\n                <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Type to filter all columns\\\">\\r\\n            </mat-form-field> \\r\\n        </div>\\r\\n        <mat-table #table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">       \\r\\n            <ng-container matColumnDef=\\\"Section_Type_ID\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> ID </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Section_Type_ID}} </mat-cell>\\r\\n            </ng-container>         \\r\\n            <ng-container matColumnDef=\\\"Section_Type_Description\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Description </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Section_Type_Description}} </mat-cell>\\r\\n            </ng-container>     \\r\\n\\r\\n            <ng-container matColumnDef=\\\"Actions\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\" >\\r\\n                    <button mat-fab class=\\\"m-1\\\" style=\\\"color: green; background-color:rgb(51, 49, 49)\\\" (click) ='getSectionTypeDetail(element.Vehicle_ID)'>\\r\\n                        <mat-icon>edit</mat-icon>\\r\\n                    </button>\\r\\n                    \\r\\n               </mat-cell>\\r\\n            </ng-container>\\r\\n\\r\\n            <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n            <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n        </mat-table>  \\r\\n        <mat-paginator #paginator [pageSize]=\\\"5\\\" [pageSizeOptions]=\\\"[5, 10]\\\"></mat-paginator>      \\r\\n    </div>\\r\\n</div>\\r\\n<br>\\r\\n\\r\\n<ng-container *ngIf=\\\"show\\\">\\r\\n<form ng-show=\\\"show\\\" name=\\\"OwnerSub\\\" #userForm=\\\"ngForm\\\" ngNativeValidate (ngSubmit)=\\\"PutSectionType()\\\">\\r\\n    <mat-card>\\r\\n        <mat-card-header>                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Description\\\"  name=\\\"Section_Type_Description\\\" required>\\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\">Save</button>\\r\\n        &nbsp;\\r\\n        &nbsp;\\r\\n        <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\">Cancel</button>\\r\\n  </form>\\r\\n</ng-container>\\r\\n\\r\\n\\r\\n\\r\\n<ng-container *ngIf=\\\"showAdd\\\">\\r\\n    <form ng-show=\\\"show\\\" name=\\\"OwnerSub\\\" #userForm=\\\"ngForm\\\" ngNativeValidate (ngSubmit)=\\\"PutSectionType()\\\">\\r\\n        <mat-card>\\r\\n            <mat-card-header>                \\r\\n               \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Description\\\"  name=\\\"Section_Type_Description\\\" required>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n           \\r\\n        <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\">Save</button>\\r\\n        &nbsp;\\r\\n        &nbsp;\\r\\n        <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\">Cancel</button>\\r\\n      </form>\\r\\n    </ng-container>\";","export default \"<h1 style=\\\"text-align: center;\\\">Sections</h1>\\r\\n\\r\\n<br>\\r\\n<button mat-raised-button color=\\\"primary\\\" (click) = \\\"SectionTypes()\\\" class=\\\"m-1\\\">Section Types</button>\\r\\n&nbsp;\\r\\n<button mat-raised-button color=\\\"primary\\\" (click) = \\\"AddSection()\\\" class=\\\"m-1\\\">Add Section</button>\\r\\n\\r\\n<div fxLayout=\\\"column\\\" *ngIf =\\\"hideTable\\\">\\r\\n    <div class=\\\"flex-p\\\"> \\r\\n        <div fxLayout=\\\"column\\\" class=\\\"mat-elevation-z8\\\">           \\r\\n            <mat-form-field class=\\\"p-1\\\">\\r\\n                <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Type to filter all columns\\\">\\r\\n            </mat-form-field> \\r\\n        </div>\\r\\n        <mat-table #table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">       \\r\\n            <ng-container matColumnDef=\\\"Section_ID\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> ID </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Section_ID}} </mat-cell>\\r\\n            </ng-container>         \\r\\n            <ng-container matColumnDef=\\\"Section_Type_Description\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Type </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Section_Type_Description}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"Section_Location\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Location </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Section_Location}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"Section_Size\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Size </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Section_Size}} </mat-cell>\\r\\n            </ng-container>     \\r\\n\\r\\n            <ng-container matColumnDef=\\\"Actions\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\" >\\r\\n                    <button mat-fab class=\\\"m-1\\\" style=\\\"color: green; background-color:rgb(51, 49, 49)\\\" (click) ='getSectionDetail(element.Vehicle_ID)'>\\r\\n                        <mat-icon>edit</mat-icon>\\r\\n                    </button>\\r\\n                    <button mat-fab class=\\\"m-1\\\" style=\\\"color: red; background-color: rgb(51, 49, 49);\\\" (click)=\\\"deleteSection()\\\">\\r\\n                        <mat-icon>delete_forever</mat-icon>\\r\\n                    </button>\\r\\n                    \\r\\n               </mat-cell>\\r\\n            </ng-container>\\r\\n\\r\\n            <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n            <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n        </mat-table>  \\r\\n        <mat-paginator #paginator [pageSize]=\\\"5\\\" [pageSizeOptions]=\\\"[5, 10]\\\"></mat-paginator>      \\r\\n    </div>\\r\\n</div>\\r\\n<br>\\r\\n\\r\\n<ng-container *ngIf=\\\"show\\\">\\r\\n<form ng-show=\\\"show\\\" name=\\\"OwnerSub\\\" #userForm=\\\"ngForm\\\" ngNativeValidate (ngSubmit)=\\\"PutSection()\\\">\\r\\n    <mat-card>\\r\\n        <mat-card-header>                \\r\\n           Section Name\\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Section Type\\\" [(ngModel)]=\\\"selectedValue\\\" name=\\\"Type\\\">\\r\\n                    <mat-option *ngFor=\\\"let type of types\\\" [value]=\\\"type\\\">\\r\\n                        {{type}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n                \\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n    <mat-card>\\r\\n        <mat-card-header>                \\r\\n           Section Type\\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Section Type\\\"  name=\\\"Type\\\">\\r\\n                    <mat-option *ngFor=\\\"let type of types\\\" [value]=\\\"type\\\">\\r\\n                        {{type}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n                \\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n    <mat-card>\\r\\n        <mat-card-header>                \\r\\n           Location\\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Section Type\\\"  name=\\\"Type\\\">\\r\\n                    <mat-option *ngFor=\\\"let type of types\\\" [value]=\\\"type\\\">\\r\\n                        {{type}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n                \\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n    <mat-card>\\r\\n        <mat-card-header>                \\r\\n           Size\\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Section Type\\\" [(ngModel)]=\\\"selectedValue\\\" name=\\\"Type\\\">\\r\\n                    <mat-option *ngFor=\\\"let type of types\\\" [value]=\\\"type\\\">\\r\\n                        {{type}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n                \\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\" (click)= \\\"back()\\\">Save</button>\\r\\n        &nbsp;\\r\\n        &nbsp;\\r\\n        <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\" (click)= \\\"back()\\\">Cancel</button>\\r\\n  </form>\\r\\n</ng-container>\\r\\n\\r\\n\\r\\n\\r\\n<ng-container *ngIf=\\\"showAdd\\\">\\r\\n    <form ng-show=\\\"show\\\" name=\\\"OwnerSub\\\" #userForm=\\\"ngForm\\\" ngNativeValidate (ngSubmit)=\\\"PutSection()\\\">\\r\\n        <mat-card>\\r\\n            <mat-card-header>                \\r\\n               Section Name\\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Name\\\"  name=\\\"Section_Name\\\" required>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n        <mat-card>\\r\\n            <mat-card-header>                \\r\\n               Section Type\\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-select placeholder=\\\"Section Type\\\" [(ngModel)]=\\\"SectionAdd.SectionTypeSelect\\\" name=\\\"Type\\\" required>\\r\\n                        <option value=\\\"\\\" disabled selected>Choose</option>\\r\\n                        <mat-option *ngFor=\\\"let type of types\\\" [value]=\\\"type\\\">\\r\\n                            {{type}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n        <mat-card>\\r\\n            <mat-card-header>                \\r\\n               Location\\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Location\\\"  name=\\\"Section_Location\\\" required>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n        <mat-card>\\r\\n            <mat-card-header>                \\r\\n               Size\\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Size\\\"  name=\\\"Section_Size\\\" required>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n           \\r\\n        <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\" (click)= \\\"back()\\\">Save</button>\\r\\n        &nbsp;\\r\\n        &nbsp;\\r\\n        <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\" (click)= \\\"back()\\\">Cancel</button>\\r\\n      </form>\\r\\n    </ng-container>\";","export default \"<h1>Staff Member Skills</h1>\\r\\n<div *ngIf=\\\"hideTable\\\">\\r\\n<button mat-raised-button color=\\\"primary\\\" (click) = \\\"AddSkill()\\\" class=\\\"m-1\\\">Add New</button>\\r\\n<button mat-raised-button color=\\\"primary\\\" (click) = \\\"download()\\\" class=\\\"m-1\\\">Download</button>\\r\\n\\r\\n<div fxLayout=\\\"column\\\">\\r\\n    <div class=\\\"flex-p\\\"> \\r\\n        <div fxLayout=\\\"column\\\" class=\\\"mat-elevation-z8\\\">           \\r\\n            <mat-form-field class=\\\"p-1\\\">\\r\\n                <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Type to filter all columns\\\">\\r\\n            </mat-form-field> \\r\\n        </div>\\r\\n        <mat-table #table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">       \\r\\n            <ng-container matColumnDef=\\\"Skill_ID\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> ID </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Skill_ID}} </mat-cell>\\r\\n            </ng-container>         \\r\\n            <ng-container matColumnDef=\\\"Skill_Description\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Skill Type </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Skill_Description}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"Actions\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\" >\\r\\n                    <button mat-fab class=\\\"m-1\\\" style=\\\"color: green; background-color:rgb(51, 49, 49)\\\" (click) =\\\"getSkillDetail(element.Skill_ID)\\\">\\r\\n                        <mat-icon>edit</mat-icon>\\r\\n                    </button>\\r\\n                    <button mat-fab class=\\\"m-1\\\" style=\\\"color: red; background-color: rgb(51, 49, 49);\\\" (click)=\\\"deleteSkill()\\\">\\r\\n                        <mat-icon>delete_forever</mat-icon>\\r\\n                    </button>\\r\\n                    \\r\\n               </mat-cell>\\r\\n            </ng-container>        \\r\\n\\r\\n\\r\\n            <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n            <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n        </mat-table>  \\r\\n        <mat-paginator #paginator [pageSize]=\\\"15\\\" [pageSizeOptions]=\\\"[15, 20]\\\"></mat-paginator>      \\r\\n    </div>\\r\\n</div>\\r\\n<br>\\r\\n</div>\\r\\n\\r\\n<ng-container *ngIf=\\\"show\\\">\\r\\n<form ng-show=\\\"show\\\" name=\\\"OwnerSub\\\" #userForm=\\\"ngForm\\\" ngNativeValidate (ngSubmit)=\\\"PutSkill()\\\">\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Skill Description\\\" [(ngModel)]=\\\"SkillEdit.Skill_Description\\\" name=\\\"Description\\\" required>\\r\\n            </mat-form-field>\\r\\n                               \\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    \\r\\n    <button mat-raised-button id=\\\"endButton\\\" color=\\\"primary\\\" class=\\\"m-1\\\">Save Changes</button>\\r\\n  </form>\\r\\n  <button mat-raised-button id=\\\"endButton\\\" color=\\\"primary\\\" class=\\\"m-1\\\" (click)=\\\"back()\\\">Back</button>\\r\\n</ng-container>\\r\\n\\r\\n\\r\\n<ng-container *ngIf=\\\"showAdd\\\">\\r\\n    <form ng-show=\\\"show\\\" name=\\\"OwnerSub\\\" #userForm=\\\"ngForm\\\" ngNativeValidate (ngSubmit)=\\\"PutSkill()\\\">\\r\\n            <mat-label id=\\\"provideLabel\\\">Please provide the following details:</mat-label>\\r\\n        <mat-card>\\r\\n            <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n               \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Decription\\\" [(ngModel)]=\\\"SkillAdd.Skill_Description\\\" name=\\\"Description\\\" required>\\r\\n                </mat-form-field> \\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n\\r\\n        <button mat-raised-button color=\\\"primary\\\" id=\\\"endButton\\\" class=\\\"m-1\\\">Save</button>\\r\\n    </form>\\r\\n    <button mat-raised-button color=\\\"primary\\\" id=\\\"endButton\\\" class=\\\"m-1\\\" (click)=\\\"back()\\\">Back</button>\\r\\n</ng-container>\";","export default \"<h1>Service and Repair Providers</h1>\\r\\n\\r\\n<div >\\r\\n<button mat-raised-button color=\\\"primary\\\" (click) = \\\"AddSRProvider()\\\" class=\\\"m-1\\\">Add Provider</button>\\r\\n\\r\\n<div fxLayout=\\\"column\\\" *ngIf=\\\"hideTable\\\">\\r\\n    <div class=\\\"flex-p\\\"> \\r\\n        <div fxLayout=\\\"column\\\" class=\\\"mat-elevation-z8\\\">           \\r\\n            <mat-form-field class=\\\"p-1\\\">\\r\\n                <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Type to filter all columns\\\">\\r\\n            </mat-form-field> \\r\\n        </div>\\r\\n        <mat-table #table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">       \\r\\n            <ng-container matColumnDef=\\\"Provider_ID\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> ID </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Provider_ID}} </mat-cell>\\r\\n            </ng-container>         \\r\\n            <ng-container matColumnDef=\\\"Provider_Name\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Provider_Name}} </mat-cell>\\r\\n            </ng-container>     \\r\\n            <ng-container matColumnDef=\\\"Provider_Contact\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Contact Number </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Provider_Contact}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"Provider_Email\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Email </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Provider_Email}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"Provider_Address\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Address </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Provider_Address}} </mat-cell>\\r\\n            </ng-container>\\r\\n            \\r\\n\\r\\n            <ng-container matColumnDef=\\\"Actions\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\" >\\r\\n                    <button mat-fab class=\\\"m-1\\\" style=\\\"color: green; background-color:rgb(51, 49, 49)\\\" (click) ='getSRProviderDetail(element.Provider_ID)'>\\r\\n                        <mat-icon>edit</mat-icon>\\r\\n                    </button>\\r\\n                    <button mat-fab class=\\\"m-1\\\" style=\\\"color: red; background-color: rgb(51, 49, 49);\\\" (click)=\\\"deleteSRProvider()\\\">\\r\\n                        <mat-icon>delete_forever</mat-icon>\\r\\n                    </button>\\r\\n               </mat-cell>\\r\\n            </ng-container>\\r\\n\\r\\n            <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n            <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n        </mat-table>  \\r\\n        <mat-paginator #paginator [pageSize]=\\\"5\\\" [pageSizeOptions]=\\\"[5, 10]\\\"></mat-paginator>      \\r\\n    </div>\\r\\n</div>\\r\\n</div>\\r\\n<br>\\r\\n\\r\\n<ng-container *ngIf=\\\"show\\\">\\r\\n<form ng-show=\\\"show\\\" name=\\\"OwnerSub\\\" #userForm=\\\"ngForm\\\" ngNativeValidate (ngSubmit)=\\\"PutSRProvider()\\\">\\r\\n    <mat-card>\\r\\n        <mat-card-header>                \\r\\n           Name\\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Name\\\"  name=\\\"Provider_Name\\\" required>\\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n    <mat-card>\\r\\n        <mat-card-header>                \\r\\n           Contact Number\\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Number\\\"  name=\\\"Provider_Contact\\\" required>\\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n    <mat-card>\\r\\n        <mat-card-header>                \\r\\n           Email Address\\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Email\\\"  name=\\\"Provider_Email\\\" required>\\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n    <mat-card>\\r\\n        <mat-card-header>                \\r\\n           Address\\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Address\\\"  name=\\\"Provider_Address\\\" required>\\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\">Save</button>\\r\\n        &nbsp;\\r\\n        &nbsp;\\r\\n        <button mat-raised-button color=\\\"primary\\\" (click) = \\\"back()\\\" class=\\\"m-1\\\">Cancel</button>\\r\\n  </form>\\r\\n</ng-container>\\r\\n\\r\\n\\r\\n\\r\\n<ng-container *ngIf=\\\"showAdd\\\">\\r\\n    <form ng-show=\\\"show\\\" name=\\\"OwnerSub\\\" #userForm=\\\"ngForm\\\" ngNativeValidate (ngSubmit)=\\\"PutSRProvider()\\\">\\r\\n        <mat-card>\\r\\n            <mat-card-header>                \\r\\n               Name\\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Name\\\"  name=\\\"Provider_Name\\\" required>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n        <mat-card>\\r\\n            <mat-card-header>                \\r\\n               Contact\\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Number\\\" name=\\\"Provider_Contact\\\" required>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n        <mat-card>\\r\\n            <mat-card-header>                \\r\\n               Address\\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Address\\\"  name=\\\"Provider_Address\\\" required>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n        <mat-card>\\r\\n            <mat-card-header>                \\r\\n               Email\\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Email\\\"  name=\\\"Provider_Email\\\" required>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n           \\r\\n        <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\">Save</button>\\r\\n        &nbsp;\\r\\n        &nbsp;\\r\\n        <button mat-raised-button color=\\\"primary\\\" (click) = \\\"back()\\\" class=\\\"m-1\\\">Cancel</button>\\r\\n      </form>\\r\\n    </ng-container>\";","export default \"\\r\\n<h1>Your Tasks</h1>\\r\\n<div *ngIf=\\\"hideTable\\\">\\r\\n<div fxLayout=\\\"column\\\">\\r\\n    <div class=\\\"flex-p\\\"> \\r\\n        <div fxLayout=\\\"column\\\" class=\\\"mat-elevation-z8\\\">           \\r\\n            <mat-form-field class=\\\"p-1\\\">\\r\\n                <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Type to filter all columns\\\">\\r\\n            </mat-form-field> \\r\\n        </div>\\r\\n        <mat-table #table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">          \\r\\n            <ng-container matColumnDef=\\\"Task_Description\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Task </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Task_Description}} </mat-cell>\\r\\n            </ng-container>       \\r\\n            <ng-container matColumnDef=\\\"Status_Description\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Status </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Status_Description}} </mat-cell>\\r\\n            </ng-container>\\r\\n\\r\\n            <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n            <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n        </mat-table>  \\r\\n        <mat-paginator #paginator [pageSize]=\\\"5\\\" [pageSizeOptions]=\\\"[5, 10]\\\"></mat-paginator>      \\r\\n    </div>\\r\\n</div>\\r\\n</div>\\r\\n<br>\\r\\n\\r\\n\";","export default \"<div>\\r\\n    <h1> Staff Members Clocked-in for the Day</h1>\\r\\n    \\r\\n    <!---------------------------------------------------------------------------------------------------------------------------------------->\\r\\n    <div>\\r\\n    <!--Task Table-->\\r\\n            <mat-table  #table [dataSource]=\\\"data\\\" class=\\\"mat-elevation-z8\\\">       \\r\\n                <ng-container matColumnDef=\\\"Staff_ID\\\">\\r\\n                    <mat-header-cell *matHeaderCellDef> ID Number </mat-header-cell>\\r\\n                    <mat-cell *matCellDef=\\\"let element\\\"> {{element.Staff_ID}} </mat-cell>\\r\\n                </ng-container>         \\r\\n                   \\r\\n                <ng-container matColumnDef=\\\"Staff_Name\\\">\\r\\n                    <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\\r\\n                    <mat-cell *matCellDef=\\\"let element\\\"> {{element.Staff_Name}} </mat-cell>\\r\\n                </ng-container>        \\r\\n                <ng-container matColumnDef=\\\"Staff_Surname\\\">\\r\\n                    <mat-header-cell *matHeaderCellDef> Surname </mat-header-cell>\\r\\n                    <mat-cell *matCellDef=\\\"let element\\\"> {{element.Staff_Surname}} </mat-cell>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"Staff_Phone_Number\\\">\\r\\n                    <mat-header-cell *matHeaderCellDef> Phone Number </mat-header-cell>\\r\\n                    <mat-cell *matCellDef=\\\"let element\\\"> {{element.Staff_Phone_Number}} </mat-cell>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"Clock_in_Time\\\">\\r\\n                        <mat-header-cell *matHeaderCellDef> Clocked-in Time </mat-header-cell>\\r\\n                        <mat-cell *matCellDef=\\\"let element\\\"> {{element.Clock_in_Time}} </mat-cell>\\r\\n                    </ng-container>\\r\\n        \\r\\n                <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n                <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n            </mat-table>  \\r\\n            <mat-paginator #paginator [pageSize]=\\\"15\\\" [pageSizeOptions]=\\\"[15, 20]\\\"></mat-paginator>      \\r\\n        </div>\\r\\n    </div>\\r\\n    \\r\\n    \";","export default \"<h1>Task Types</h1>\\r\\n<div *ngIf=\\\"hideTable\\\">\\r\\n<button mat-raised-button color=\\\"primary\\\" (click) = \\\"AddTaskType()\\\" class=\\\"m-1\\\">Add New</button>\\r\\n\\r\\n<div fxLayout=\\\"column\\\">\\r\\n    <div class=\\\"flex-p\\\"> \\r\\n        <div fxLayout=\\\"column\\\" class=\\\"mat-elevation-z8\\\">           \\r\\n            <mat-form-field class=\\\"p-1\\\">\\r\\n                <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Type to filter all columns\\\">\\r\\n            </mat-form-field> \\r\\n        </div>\\r\\n        <mat-table #table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">       \\r\\n            <ng-container matColumnDef=\\\"Task_Type_ID\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> ID </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Task_Type_ID}} </mat-cell>\\r\\n            </ng-container>         \\r\\n            <ng-container matColumnDef=\\\"Task_Type_Description\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Skill Type </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Task_Type_Description}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"Actions\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\" >\\r\\n                    <button mat-fab class=\\\"m-1\\\" style=\\\"color: green; background-color:rgb(51, 49, 49);\\\" (click) =\\\"getTaskTypeDetail(element.Task_Type_ID)\\\">\\r\\n                        <mat-icon>edit</mat-icon>\\r\\n                    </button>\\r\\n                    <button mat-fab class=\\\"m-1\\\" style=\\\"color: red; background-color: rgb(51, 49, 49);\\\" (click)=\\\"deleteTaskType()\\\">\\r\\n                        <mat-icon>delete_forever</mat-icon>\\r\\n                    </button>\\r\\n                    \\r\\n               </mat-cell>\\r\\n            </ng-container>        \\r\\n\\r\\n\\r\\n            <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n            <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n        </mat-table>  \\r\\n        <mat-paginator #paginator [pageSize]=\\\"15\\\" [pageSizeOptions]=\\\"[15, 20]\\\"></mat-paginator>      \\r\\n    </div>\\r\\n</div>\\r\\n<br>\\r\\n</div>\\r\\n\\r\\n<ng-container *ngIf=\\\"show\\\">\\r\\n<form ng-show=\\\"show\\\" name=\\\"OwnerSub\\\" #userForm=\\\"ngForm\\\" ngNativeValidate (ngSubmit)=\\\"PutTaskType()\\\">\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Task Type\\\" [(ngModel)]=\\\"Task_TypeEdit.Task_Type_Description\\\" name=\\\"Description\\\" required>\\r\\n            </mat-form-field>\\r\\n                               \\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    \\r\\n    <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\">Save Changes</button>\\r\\n  </form>\\r\\n  <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\" (click)=\\\"back()\\\">Back</button>\\r\\n</ng-container>\\r\\n\\r\\n\\r\\n<ng-container *ngIf=\\\"showAdd\\\">\\r\\n    <form ng-show=\\\"show\\\" name=\\\"OwnerSub\\\" #userForm=\\\"ngForm\\\" ngNativeValidate (ngSubmit)=\\\"PutTaskType()\\\">\\r\\n    \\r\\n        <mat-card>\\r\\n            <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n               \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Decription\\\" [(ngModel)]=\\\"Task_TypeAdd.Task_Type_Description\\\" name=\\\"Description\\\" required>\\r\\n                </mat-form-field> \\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n\\r\\n        <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\">Save</button>\\r\\n    </form>\\r\\n    <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\" (click)=\\\"back()\\\">Back</button>\\r\\n</ng-container>\";","export default \"<h1>Farm Tasks</h1>\\r\\n<!---------------------------------------------------------------------------------------------------------------------------------------->\\r\\n<!--Task buttons to add and download-->\\r\\n<div *ngIf=\\\"hideTable\\\">\\r\\n<button mat-raised-button color=\\\"primary\\\" (click) = \\\"AddTask()\\\" class=\\\"m-1\\\">Add Task</button>\\r\\n<button mat-raised-button color=\\\"primary\\\" (click) = \\\"download()\\\" class=\\\"m-1\\\">Download</button>\\r\\n<!--Task Search-->\\r\\n<div fxLayout=\\\"column\\\">\\r\\n    <div class=\\\"flex-p\\\"> \\r\\n        <div fxLayout=\\\"column\\\" class=\\\"mat-elevation-z8\\\">         \\r\\n            <mat-form-field class=\\\"p-1\\\">\\r\\n                <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Type to filter all columns\\\">\\r\\n            </mat-form-field> \\r\\n        </div>\\r\\n\\r\\n<!--Task Table-->\\r\\n        <mat-table  #table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">       \\r\\n            <ng-container matColumnDef=\\\"Task_ID\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> ID </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Task_ID}} </mat-cell>\\r\\n            </ng-container>         \\r\\n               \\r\\n            <ng-container matColumnDef=\\\"Section_Name\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Section </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Section_Name}} </mat-cell>\\r\\n            </ng-container>        \\r\\n            <ng-container matColumnDef=\\\"Infrastructure_Name\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Infrastructure </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Infrastructure_Name}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"Equipment_Description\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Equipment </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Equipment_Description}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"Task_Type_Description\\\">\\r\\n                    <mat-header-cell *matHeaderCellDef> Type </mat-header-cell>\\r\\n                    <mat-cell *matCellDef=\\\"let element\\\"> {{element.Task_Type_Description}} </mat-cell>\\r\\n                </ng-container>  \\r\\n            <ng-container matColumnDef=\\\"Task_Description\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Task Description </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Task_Description}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"Task_Duration\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Duration </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Task_Duration}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"Importance_Description\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Importance </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Importance_Description}} </mat-cell>\\r\\n            </ng-container> \\r\\n            <ng-container matColumnDef=\\\"Skill_Description\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Skill </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Skill_Description}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"Actions\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\" >\\r\\n                    <button mat-fab class=\\\"m-1\\\" style=\\\"color: green; background-color:rgb(51, 49, 49)\\\" (click) ='getTaskDetail(element.Task_ID)'>\\r\\n                        <mat-icon>edit</mat-icon>\\r\\n                    </button>\\r\\n                    <button mat-fab class=\\\"m-1\\\" style=\\\"color: red; background-color: rgb(51, 49, 49);\\\" (click)=\\\"deleteTask()\\\">\\r\\n                        <mat-icon>delete_forever</mat-icon>\\r\\n                    </button>\\r\\n                    \\r\\n               </mat-cell>\\r\\n            </ng-container>\\r\\n\\r\\n\\r\\n            <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n            <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n        </mat-table>  \\r\\n        <mat-paginator #paginator [pageSize]=\\\"15\\\" [pageSizeOptions]=\\\"[15, 20]\\\"></mat-paginator>      \\r\\n    </div>\\r\\n</div>\\r\\n<br>\\r\\n</div>\\r\\n\\r\\n<!---------------------------------------------------------------------------------------------------------------------------------->\\r\\n<!--EDIT TASK------EDIT TASK -->\\r\\n<ng-container *ngIf=\\\"show\\\">\\r\\n<form ng-show=\\\"show\\\" name=\\\"OwnerSub\\\" #userForm=\\\"ngForm\\\" ngNativeValidate (ngSubmit)=\\\"PutTask()\\\" >\\r\\n    \\r\\n    <!--Section-->\\r\\n    <mat-card>\\r\\n        <mat-card-header>                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Section location\\\" [(ngModel)]=\\\"SectionSelect\\\" name=\\\"Section\\\">\\r\\n                    <mat-option *ngFor=\\\"let type of sections\\\" [value]=\\\"type\\\">\\r\\n                        {{type}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <!-- Infrastructure-->\\r\\n    <mat-card>\\r\\n        <mat-card-header>                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Infrastructure location\\\" [(ngModel)]=\\\"InfrastructureSelect\\\" name=\\\"Infras\\\">\\r\\n                    <mat-option *ngFor=\\\"let type of infrastructures\\\" [value]=\\\"type\\\">\\r\\n                        {{type}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n<!-- Equipment-->\\r\\n    <mat-card>\\r\\n        <mat-card-header>                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Equipment\\\" [(ngModel)]=\\\"EquipmentSelect\\\" name=\\\"Equipment\\\">\\r\\n                    <mat-option *ngFor=\\\"let type of equipments\\\" [value]=\\\"type\\\">\\r\\n                        {{type}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n<!--Task Type-->\\r\\n    <mat-card>\\r\\n            <mat-card-header>                \\r\\n               \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-select placeholder=\\\"Task Type\\\" [(ngModel)]=\\\"selectedValue\\\" name=\\\"Type\\\">\\r\\n                        <mat-option *ngFor=\\\"let type of types\\\" [value]=\\\"type\\\">\\r\\n                            {{type}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                    \\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n        \\r\\n        <!--Task Description-->\\r\\n    <mat-card>\\r\\n        <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Task Description\\\" [(ngModel)]=\\\"TaskEdit.Task_Description\\\" name=\\\"task_description\\\" required>\\r\\n            </mat-form-field>\\r\\n                               \\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <!--Task Duration-->\\r\\n    <mat-card>\\r\\n        <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Task Duration Minutes\\\" type=\\\"number\\\" [(ngModel)]=\\\"TaskEdit.Task_Duration\\\" name=\\\"task_duration\\\" required>\\r\\n            </mat-form-field>\\r\\n                               \\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n<!--Importance-->\\r\\n    <mat-card>\\r\\n        <mat-card-header>                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Importance\\\" [(ngModel)]=\\\"ImportanceSelect\\\" name=\\\"importance\\\">\\r\\n                    <mat-option *ngFor=\\\"let type of importances\\\" [value]=\\\"type\\\">\\r\\n                        {{type}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <!--Skills-->\\r\\n    <mat-card>\\r\\n            <mat-card-header>\\r\\n                    Skills Neccessary For Completion                \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\" >\\r\\n                        <!-- filter skill checkboxes-->\\r\\n                        <mat-form-field>\\r\\n                                <mat-label>Type to filter skills</mat-label>\\r\\n                                    <input matInput  name=\\\"searchSkills\\\" >\\r\\n                            </mat-form-field>\\r\\n                        <!-- show skills in checkbox format-->\\r\\n                        <mat-selection-list [(ngModel)]=\\\"SkillSelect\\\" name=\\\"skill_description\\\">\\r\\n                            <mat-list-option *ngFor=\\\"let type of skills\\\" [value]=\\\"type\\\">\\r\\n                                {{type}}\\r\\n                            </mat-list-option>\\r\\n                        </mat-selection-list>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n<br>\\r\\n    <button mat-raised-button color=\\\"primary\\\"  class=\\\"endButton\\\">Save Changes</button>\\r\\n    \\r\\n  </form>\\r\\n <br> <button mat-raised-button color=\\\"primary\\\" class=\\\"endButton\\\" (click)=\\\"back()\\\">Back</button>\\r\\n</ng-container>\\r\\n\\r\\n\\r\\n\\r\\n <!---------------------------------------------------------------------------------------------------------------------------------->\\r\\n <!-- ADD TASK--------ADD TASK -->\\r\\n<ng-container *ngIf=\\\"showAdd\\\">\\r\\n    <form name=\\\"OwnerSub\\\" #userForm=\\\"ngForm\\\" ngNativeValidate (ngSubmit)=\\\"PutTask()\\\">\\r\\n        <mat-label id=\\\"provideLabel\\\">Please provide the following details:</mat-label>\\r\\n\\r\\n         <!-- Section -->\\r\\n        <mat-card  name =\\\"section\\\" >\\r\\n            <mat-card-header>                \\r\\n               Section\\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-select placeholder=\\\"Select Section location\\\" [(ngModel)]=\\\"TaskAdd.Section_Name\\\" name=\\\"section\\\" required>\\r\\n                        <option value=\\\"\\\" disabled selected>Choose</option>\\r\\n                        <mat-option *ngFor=\\\"let type of sections\\\" [value]=\\\"type\\\">\\r\\n                            {{type}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n                \\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n       \\r\\n        \\r\\n     <!-- Infractructure -->\\r\\n        <mat-card  name =\\\"infrastructure\\\">\\r\\n            <mat-card-header>                \\r\\n               Infractructure\\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-select placeholder=\\\"Select Infrastructure location\\\" [(ngModel)]=\\\"TaskAdd.Infrastructure_Name\\\" name=\\\"infrastructure\\\" required>\\r\\n                        <option value=\\\"\\\" disabled selected>Choose</option>\\r\\n                        <mat-option *ngFor=\\\"let type of infrastructures\\\" [value]=\\\"type\\\">\\r\\n                            {{type}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n\\r\\n         <!-- Equipment -->\\r\\n        <mat-card  name =\\\"equipment\\\">\\r\\n            <mat-card-header>                \\r\\n               Equipment\\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-select placeholder=\\\"Select Equipment\\\" [(ngModel)]=\\\"TaskAdd.Equipment_Description\\\" name=\\\"equipment\\\" required>\\r\\n                        <option value=\\\"\\\" disabled selected>Choose</option>\\r\\n                        <mat-option *ngFor=\\\"let type of equipments\\\" [value]=\\\"type\\\">\\r\\n                            {{type}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n\\r\\n         <!-- Task type dropdown -->\\r\\n        <mat-card >\\r\\n                <mat-card-header>                \\r\\n                   Task Type\\r\\n                </mat-card-header>\\r\\n                <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                    <mat-form-field>\\r\\n                        <mat-select placeholder=\\\" Select Task Type\\\" [(ngModel)]=\\\"TaskAdd.Task_Type\\\" name=\\\"Type\\\" required>\\r\\n                            <option value=\\\"\\\" disabled selected>Choose</option>\\r\\n                            <mat-option *ngFor=\\\"let type of types\\\" [value]=\\\"type\\\">\\r\\n                                {{type}}\\r\\n                            </mat-option>\\r\\n                        </mat-select>\\r\\n                    </mat-form-field>\\r\\n                </mat-card-content>\\r\\n            </mat-card>\\r\\n             <!-- Task Description -->\\r\\n        <mat-card  >\\r\\n            <mat-card-header >                \\r\\n               Task Description\\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Provide Task Description\\\" [(ngModel)]=\\\"TaskAdd.Task_Description\\\" name=\\\"task_description\\\" required>\\r\\n                </mat-form-field>\\r\\n                                   \\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n     <!-- Task Duration -->\\r\\n        <mat-card >\\r\\n            <mat-card-header >                \\r\\n               Task Duration\\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Provide Task duration in Minutes\\\" type=\\\"number\\\" [(ngModel)]=\\\"TaskAdd.Task_Duration\\\" name=\\\"task_duration\\\" required>\\r\\n                </mat-form-field>\\r\\n                                   \\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n\\r\\n    <!-- Importance -->\\r\\n        <mat-card  >\\r\\n            <mat-card-header>                \\r\\n               Importance\\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-select placeholder=\\\"Select Task Importance\\\" [(ngModel)]=\\\"TaskAdd.Importance_Description\\\" name=\\\"importance\\\" required>\\r\\n                        <option value=\\\"\\\" disabled selected>Choose</option>\\r\\n                        <mat-option *ngFor=\\\"let type of importances\\\" [value]=\\\"type\\\">\\r\\n                            {{type}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n\\r\\n        <mat-card >\\r\\n            <mat-card-header>\\r\\n                    Skills Neccessary For Completion                \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\" >\\r\\n                        <!-- filter skill checkboxes-->\\r\\n                        <mat-form-field>\\r\\n                                <mat-label>Type to filter skills</mat-label>\\r\\n                                    <input matInput  name=\\\"searchSkills\\\" >\\r\\n                            </mat-form-field>\\r\\n                        <!-- show skills in checkbox format-->\\r\\n                        <mat-selection-list [(ngModel)]=\\\"TaskAdd.Skill_Description\\\" name=\\\"skillBoxes\\\">\\r\\n                            <mat-list-option *ngFor=\\\"let type of skills\\\" [value]=\\\"type\\\">{{type}}\\r\\n                                </mat-list-option>\\r\\n                        </mat-selection-list>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n        <!-- save new task-->\\r\\n        <br><button  mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" class=\\\"endButton\\\">Save Task</button>\\r\\n      </form>\\r\\n      <!-- go back to the task page with the table-->\\r\\n      <br><button  mat-raised-button color=\\\"primary\\\" class=\\\"endButton\\\"(click)=\\\"back()\\\">Back</button><br>\\r\\n    </ng-container>\\r\\n    <!---------------------------------------------------------------------------------------------------------------------------------->\";","export default \"<p>test works!</p>\\r\\n\";","export default \"<button mat-icon-button [matMenuTriggerFor]=\\\"appsMenu\\\" #appsMenuTrigger=\\\"matMenuTrigger\\\">\\r\\n    <mat-icon>apps</mat-icon>\\r\\n</button>\\r\\n<mat-menu #appsMenu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\" class=\\\"toolbar-dropdown-menu applications\\\">\\r\\n    <span (mouseleave)=\\\"appsMenuTrigger.closeMenu()\\\">\\r\\n        <mat-toolbar color=\\\"primary\\\">\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\" class=\\\"header\\\">\\r\\n               Applications \\r\\n            </div>  \\r\\n        </mat-toolbar>\\r\\n        <mat-card>           \\r\\n            <mat-grid-list cols=\\\"3\\\" rowHeight=\\\"1:1\\\">\\r\\n                <mat-grid-tile>\\r\\n                  <button mat-button>\\r\\n                      <mat-icon class=\\\"muted-text\\\">person</mat-icon>\\r\\n                      <span>My account</span>\\r\\n                  </button>\\r\\n                </mat-grid-tile>\\r\\n                <mat-grid-tile>\\r\\n                  <button mat-button>\\r\\n                      <mat-icon class=\\\"muted-text\\\">search</mat-icon>\\r\\n                      <span>Search</span>\\r\\n                  </button>\\r\\n                </mat-grid-tile>\\r\\n                <mat-grid-tile>\\r\\n                  <button mat-button>\\r\\n                      <mat-icon class=\\\"muted-text\\\">play_arrow</mat-icon>\\r\\n                      <span>Player</span>\\r\\n                  </button>\\r\\n                </mat-grid-tile>\\r\\n                <mat-grid-tile>\\r\\n                  <button mat-button>\\r\\n                      <mat-icon class=\\\"muted-text\\\">settings</mat-icon>\\r\\n                      <span>Settings</span>\\r\\n                  </button>\\r\\n                </mat-grid-tile>\\r\\n                <mat-grid-tile>\\r\\n                  <button mat-button>\\r\\n                      <mat-icon class=\\\"muted-text\\\">event</mat-icon>\\r\\n                      <span>Calendar</span>\\r\\n                  </button>\\r\\n                </mat-grid-tile>\\r\\n                <mat-grid-tile>\\r\\n                  <button mat-button>\\r\\n                      <mat-icon class=\\\"muted-text\\\">image</mat-icon>\\r\\n                      <span>Gallery</span>\\r\\n                  </button>\\r\\n                </mat-grid-tile>\\r\\n                 <mat-grid-tile>\\r\\n                  <button mat-button>\\r\\n                      <mat-icon class=\\\"muted-text\\\">library_books</mat-icon>\\r\\n                      <span>Documents</span>\\r\\n                  </button>\\r\\n                </mat-grid-tile>\\r\\n                <mat-grid-tile>\\r\\n                  <button mat-button>\\r\\n                      <mat-icon class=\\\"muted-text\\\">mail</mat-icon>\\r\\n                      <span>Mail</span>\\r\\n                  </button>\\r\\n                </mat-grid-tile>\\r\\n                <mat-grid-tile>\\r\\n                  <button mat-button>\\r\\n                      <mat-icon class=\\\"muted-text\\\">place</mat-icon>\\r\\n                      <span>Maps</span>\\r\\n                  </button>\\r\\n                </mat-grid-tile>\\r\\n            </mat-grid-list>\\r\\n        </mat-card>\\r\\n    </span>\\r\\n</mat-menu>\";","export default \"<div fxLayout=\\\"row wrap\\\" *ngIf=\\\"router.url != '/'\\\">\\r\\n    <div fxFlex=\\\"100\\\" class=\\\"flex-p\\\">\\r\\n        <mat-card fxLayout=\\\"row\\\" class=\\\"breadcrumb\\\">\\r\\n            <a *ngIf=\\\"router.url != '/'\\\" routerLink=\\\"/\\\" class=\\\"breadcrumb-item\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" (click)=\\\"closeSubMenus()\\\">\\r\\n                <mat-icon>home</mat-icon>\\r\\n                <span class=\\\"breadcrumb-title\\\">Home</span>\\r\\n            </a>\\r\\n            <div *ngFor=\\\"let breadcrumb of breadcrumbs; let i = index;\\\" class=\\\"breadcrumb-item\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">                 \\r\\n                <a [hidden]=\\\"i == (breadcrumbs.length - 1)\\\" [routerLink]=\\\"[breadcrumb.url]\\\">{{breadcrumb.name}}</a>   \\r\\n                <span [hidden]=\\\"i != (breadcrumbs.length - 1)\\\" class=\\\"breadcrumb-title active\\\">{{breadcrumb.name}}</span>\\r\\n            </div> \\r\\n        </mat-card>\\r\\n    </div> \\r\\n</div>\\r\\n\\r\\n\";","export default \"<button mat-icon-button [matMenuTriggerFor]=\\\"flagsMenu\\\" #flagsMenuTrigger=\\\"matMenuTrigger\\\">\\r\\n    <mat-icon>flag</mat-icon>\\r\\n</button>\\r\\n<!--<button mat-icon-button [matMenuTriggerFor]=\\\"flagsMenu\\\" #flagsMenuTrigger=\\\"matMenuTrigger\\\">\\r\\n    <img src=\\\"assets/img/flags/gb.svg\\\" width=\\\"20\\\" alt=\\\"english\\\"> \\r\\n</button>-->\\r\\n<mat-menu #flagsMenu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\" class=\\\"toolbar-dropdown-menu flags\\\">\\r\\n    <span (mouseleave)=\\\"flagsMenuTrigger.closeMenu()\\\">      \\r\\n        <button mat-menu-item>\\r\\n            <img src=\\\"assets/img/flags/gb.svg\\\" width=\\\"20\\\" alt=\\\"english\\\"> \\r\\n            English\\r\\n        </button>\\r\\n        <button mat-menu-item>\\r\\n            <img src=\\\"assets/img/flags/de.svg\\\" width=\\\"20\\\" alt=\\\"german\\\"> \\r\\n            German\\r\\n        </button>\\r\\n        <button mat-menu-item>\\r\\n            <img src=\\\"assets/img/flags/fr.svg\\\" width=\\\"20\\\" alt=\\\"french\\\"> \\r\\n            French\\r\\n        </button>\\r\\n        <button mat-menu-item>\\r\\n            <img src=\\\"assets/img/flags/ru.svg\\\" width=\\\"20\\\" alt=\\\"russian\\\"> \\r\\n            Russian\\r\\n        </button>\\r\\n        <button mat-menu-item>\\r\\n            <img src=\\\"assets/img/flags/tr.svg\\\" width=\\\"20\\\" alt=\\\"turkish\\\"> \\r\\n            Turkish\\r\\n        </button>\\r\\n    </span>\\r\\n</mat-menu>\";","export default \"<div [fxLayout]=\\\"(menuParentId == 0) ? 'row' : 'column'\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n    \\r\\n\\r\\n    \\r\\n    <div *ngFor=\\\"let menu of menuItems\\\" class=\\\"horizontal-menu-item w-100\\\">\\r\\n        \\r\\n\\r\\n        \\r\\n        \\r\\n        <a *ngIf=\\\"menu.routerLink && !menu.hasSubMenu\\\" mat-button \\r\\n            fxLayout=\\\"row\\\" [fxLayoutAlign]=\\\"(settings.menuType=='default') ? 'start center' : 'center center'\\\"\\r\\n            [routerLink]=\\\"[menu.routerLink]\\\" routerLinkActive=\\\"active-link\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\"\\r\\n            [matTooltip]=\\\"menu.title\\\" matTooltipPosition=\\\"above\\\" [matTooltipDisabled]=\\\"(settings.menuType=='mini') ? 'false' : 'true'\\\"\\r\\n            [id]=\\\"'horizontal-menu-item-'+menu.id\\\">\\r\\n            <mat-icon class=\\\"horizontal-menu-icon\\\">{{menu.icon}}</mat-icon>\\r\\n            <span class=\\\"horizontal-menu-title\\\">{{menu.title}}</span>\\r\\n        </a>\\r\\n        <a *ngIf=\\\"menu.href && !menu.subMenu\\\" mat-button \\r\\n            fxLayout=\\\"row\\\" [fxLayoutAlign]=\\\"(settings.menuType=='default') ? 'start center' : 'center center'\\\"\\r\\n            [attr.href]=\\\"menu.href || ''\\\" [attr.target]=\\\"menu.target || ''\\\"\\r\\n            [matTooltip]=\\\"menu.title\\\" matTooltipPosition=\\\"above\\\" [matTooltipDisabled]=\\\"(settings.menuType=='mini') ? 'false' : 'true'\\\"\\r\\n            [id]=\\\"'horizontal-menu-item-'+menu.id\\\">\\r\\n            <mat-icon class=\\\"horizontal-menu-icon\\\">{{menu.icon}}</mat-icon>\\r\\n            <span class=\\\"horizontal-menu-title\\\">{{menu.title}}</span>\\r\\n        </a>\\r\\n        <a *ngIf=\\\"menu.hasSubMenu\\\" mat-button \\r\\n            fxLayout=\\\"row\\\" [fxLayoutAlign]=\\\"(settings.menuType=='default') ? 'start center' : 'center center'\\\"\\r\\n            [matTooltip]=\\\"menu.title\\\" matTooltipPosition=\\\"above\\\" [matTooltipDisabled]=\\\"(settings.menuType=='mini') ? 'false' : 'true'\\\"\\r\\n            [id]=\\\"'horizontal-menu-item-'+menu.id\\\">\\r\\n            <mat-icon class=\\\"horizontal-menu-icon\\\">{{menu.icon}}</mat-icon>\\r\\n            <span class=\\\"horizontal-menu-title\\\">{{menu.title}}</span>\\r\\n        </a>\\r\\n\\r\\n        <div *ngIf=\\\"menu.hasSubMenu\\\" class=\\\"horizontal-sub-menu\\\" [id]=\\\"'horizontal-sub-menu-'+menu.id\\\">\\r\\n            <app-horizontal-menu [menuParentId]=\\\"menu.id\\\"></app-horizontal-menu>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<div *ngFor=\\\"let menu of parentMenu\\\" class=\\\"menu-item\\\">\\r\\n    <a *ngIf=\\\"menu.routerLink && !menu.hasSubMenu\\\" mat-button \\r\\n        fxLayout=\\\"row\\\" [fxLayoutAlign]=\\\"(settings.menuType=='default') ? 'start center' : 'center center'\\\"\\r\\n        [routerLink]=\\\"[menu.routerLink]\\\" routerLinkActive=\\\"active-link\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\"\\r\\n        [matTooltip]=\\\"menu.title\\\" matTooltipPosition=\\\"after\\\" [matTooltipDisabled]=\\\"(settings.menuType=='mini') ? 'false' : 'true'\\\"\\r\\n        (click)=\\\"onClick(menu.id)\\\" [id]=\\\"'menu-item-'+menu.id\\\">\\r\\n        <mat-icon class=\\\"menu-icon\\\">{{menu.icon}}</mat-icon>\\r\\n        <span class=\\\"menu-title\\\">{{menu.title}}</span>\\r\\n    </a>\\r\\n    <a *ngIf=\\\"menu.href && !menu.subMenu\\\" mat-button \\r\\n        fxLayout=\\\"row\\\" [fxLayoutAlign]=\\\"(settings.menuType=='default') ? 'start center' : 'center center'\\\"\\r\\n        [attr.href]=\\\"menu.href || ''\\\" [attr.target]=\\\"menu.target || ''\\\"\\r\\n        [matTooltip]=\\\"menu.title\\\" matTooltipPosition=\\\"after\\\" [matTooltipDisabled]=\\\"(settings.menuType=='mini') ? 'false' : 'true'\\\"\\r\\n        (click)=\\\"onClick(menu.id)\\\" [id]=\\\"'menu-item-'+menu.id\\\">\\r\\n        <mat-icon class=\\\"menu-icon\\\">{{menu.icon}}</mat-icon>\\r\\n        <span class=\\\"menu-title\\\">{{menu.title}}</span>\\r\\n    </a>\\r\\n    <a *ngIf=\\\"menu.hasSubMenu\\\" mat-button \\r\\n        fxLayout=\\\"row\\\" [fxLayoutAlign]=\\\"(settings.menuType=='default') ? 'start center' : 'center center'\\\"\\r\\n        [matTooltip]=\\\"menu.title\\\" matTooltipPosition=\\\"after\\\" [matTooltipDisabled]=\\\"(settings.menuType=='mini') ? 'false' : 'true'\\\"\\r\\n        (click)=\\\"onClick(menu.id)\\\" [id]=\\\"'menu-item-'+menu.id\\\">\\r\\n        <mat-icon class=\\\"menu-icon\\\">{{menu.icon}}</mat-icon>\\r\\n        <span class=\\\"menu-title\\\">{{menu.title}}</span>\\r\\n        <mat-icon class=\\\"menu-expand-icon transition-2\\\">arrow_drop_down</mat-icon>\\r\\n    </a>\\r\\n\\r\\n    <div *ngIf=\\\"menu.hasSubMenu\\\" class=\\\"sub-menu\\\" [id]=\\\"'sub-menu-'+menu.id\\\">\\r\\n        <app-vertical-menu [menuItems]=\\\"menuItems\\\" [menuParentId]=\\\"menu.id\\\"></app-vertical-menu>\\r\\n    </div>\\r\\n</div>\";","export default \"<button mat-icon-button [matMenuTriggerFor]=\\\"messagesMenu\\\" (click)=\\\"openMessagesMenu()\\\">\\r\\n    <mat-icon>notifications</mat-icon>\\r\\n</button>\\r\\n<mat-menu #messagesMenu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\" class=\\\"toolbar-dropdown-menu messages\\\">\\r\\n    <!--<span (mouseleave)=\\\"onMouseLeave()\\\">-->\\r\\n        <mat-tab-group backgroundColor=\\\"primary\\\" (click)=\\\"stopClickPropagate($event)\\\" [selectedIndex]=\\\"selectedTab\\\">\\r\\n            <mat-tab>\\r\\n                <ng-template mat-tab-label>\\r\\n                    <mat-icon>message</mat-icon>\\r\\n                </ng-template>\\r\\n                <mat-card class=\\\"content\\\" perfectScrollbar>\\r\\n                  <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"none\\\">\\r\\n                      <button mat-button *ngFor=\\\"let message of messages\\\">\\r\\n                          <img src=\\\"{{ ( message.image || (message.name | profilePicture)) }}\\\" width=\\\"50\\\">   \\r\\n                          <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"none\\\" class=\\\"w-100\\\">\\r\\n                              <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between start\\\">\\r\\n                                  <span class=\\\"name\\\">{{message.name}}</span>\\r\\n                                  <span class=\\\"info\\\"><mat-icon>access_time</mat-icon> {{message.time}}</span>\\r\\n                              </div>\\r\\n                              <span class=\\\"text muted-text\\\">{{message.text}}</span>\\r\\n                          </div>\\r\\n                      </button>\\r\\n                    </div>             \\r\\n                </mat-card>\\r\\n            </mat-tab>\\r\\n            <mat-tab>\\r\\n                <ng-template mat-tab-label>\\r\\n                    <mat-icon>description</mat-icon>\\r\\n                </ng-template>\\r\\n                <mat-card class=\\\"content\\\" perfectScrollbar>\\r\\n                  <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"none\\\">\\r\\n                      <button mat-button *ngFor=\\\"let file of files\\\">\\r\\n                          <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"none\\\" class=\\\"w-100\\\">\\r\\n                              <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between start\\\">\\r\\n                                  <span class=\\\"name\\\">{{file.text}}</span>\\r\\n                                  <span class=\\\"info\\\">{{file.size}}</span>\\r\\n                              </div>\\r\\n                              <mat-progress-bar\\r\\n                                  class=\\\"example-margin\\\"\\r\\n                                  [color]=\\\"file.color\\\"\\r\\n                                  mode=\\\"indeterminate\\\"\\r\\n                                  [value]=\\\"file.value\\\">\\r\\n                              </mat-progress-bar>\\r\\n                          </div>\\r\\n                      </button>\\r\\n                    </div>             \\r\\n                </mat-card>\\r\\n            </mat-tab>\\r\\n            <mat-tab>\\r\\n                <ng-template mat-tab-label>\\r\\n                    <mat-icon>event</mat-icon>\\r\\n                </ng-template>\\r\\n                <mat-card class=\\\"content\\\" perfectScrollbar>\\r\\n                  <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"none\\\">\\r\\n                      <button mat-button *ngFor=\\\"let meeting of meetings\\\">  \\r\\n                          <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"row-1\\\">\\r\\n                              <span class=\\\"name\\\">{{meeting.day}}</span>\\r\\n                              <span class=\\\"name\\\">{{meeting.month}}</span>\\r\\n                          </div>\\r\\n                          <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"none\\\">\\r\\n                              <span class=\\\"name\\\">{{meeting.title}}</span>\\r\\n                              <span class=\\\"text muted-text\\\">{{meeting.text}}</span>\\r\\n                          </div>\\r\\n                      </button>\\r\\n                    </div>             \\r\\n                </mat-card>\\r\\n            </mat-tab>\\r\\n        </mat-tab-group>\\r\\n    <!--</span>-->\\r\\n</mat-menu>\";","export default \"<mat-toolbar color=\\\"gray\\\" [fxLayoutAlign]=\\\"(settings.menuType != 'mini') ? 'space-between center' : 'center center'\\\" class=\\\"sidenav-header\\\">\\r\\n\\r\\n    <img src=\\\"../../../../assets/img/Logo-02.png\\\"  *ngIf=\\\"settings.menuType == 'default'\\\" class=\\\"logo\\\" routerLink=\\\"/\\\" (click)=\\\"closeSubMenus()\\\" style=\\\"height: 110px; width: 145px;\\\">\\r\\n    <svg *ngIf=\\\"settings.menuType != 'mini'\\\" class=\\\"pin\\\" (click)=\\\"settings.sidenavIsPinned = !settings.sidenavIsPinned\\\">\\r\\n        <path *ngIf=\\\"!settings.sidenavIsPinned\\\" d=\\\"M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z\\\" />\\r\\n        <path *ngIf=\\\"settings.sidenavIsPinned\\\" d=\\\"M2,5.27L3.28,4L20,20.72L18.73,22L12.8,16.07V22H11.2V16H6V14L8,12V11.27L2,5.27M16,12L18,14V16H17.82L8,6.18V4H7V2H17V4H16V12Z\\\" />\\r\\n    </svg>  \\r\\n</mat-toolbar>\\r\\n\\r\\n\\r\\n\\r\\n<perfect-scrollbar class=\\\"sidenav-menu-outer\\\" [class.user-block-show]=\\\"settings.sidenavUserBlock\\\">\\r\\n    <div id=\\\"vertical-menu\\\">\\r\\n        <app-vertical-menu [menuItems]=\\\"menuItems\\\" [menuParentId]=\\\"0\\\"></app-vertical-menu> \\r\\n    </div>   \\r\\n</perfect-scrollbar>\\r\\n\\r\\n\";","export default \"<button mat-icon-button [matMenuTriggerFor]=\\\"userMenu\\\" #userMenuTrigger=\\\"matMenuTrigger\\\" >\\r\\n    <mat-icon>account_circle</mat-icon>\\r\\n</button>\\r\\n\\r\\n<mat-menu #userMenu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\" class=\\\"toolbar-dropdown-menu user-menu\\\">\\r\\n    <!--<span (mouseleave)=\\\"userMenuTrigger.closeMenu()\\\">-->\\r\\n        <mat-toolbar color=\\\"primary\\\">\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\" class=\\\"user-info\\\">\\r\\n                <img [src]=\\\"userImage\\\" alt=\\\"user-image\\\" width=\\\"80\\\" class=\\\"rounded mat-elevation-z6\\\">\\r\\n                <p>Emilio Verdines <br> <small>Web developer</small></p>\\r\\n            </div>  \\r\\n        </mat-toolbar>\\r\\n        <a mat-menu-item routerLink=\\\"/profile/projects\\\"> \\r\\n            <mat-icon>person</mat-icon>\\r\\n            <span>Profile</span> \\r\\n        </a>\\r\\n        <a mat-menu-item routerLink=\\\"/profile/user-info\\\"> \\r\\n            <mat-icon>edit</mat-icon>\\r\\n            <span>Edit Profile</span> \\r\\n        </a>\\r\\n\\r\\n\\r\\n        <a mat-menu-item routerLink=\\\"help\\\"> \\r\\n            <mat-icon>help</mat-icon>\\r\\n            <span>Help</span> \\r\\n        </a>\\r\\n        <div class=\\\"divider\\\"></div>\\r\\n        <a mat-menu-item routerLink=\\\"/login\\\"> \\r\\n            <mat-icon>power_settings_new</mat-icon>\\r\\n            <span>Log out</span> \\r\\n        </a>\\r\\n    <!--</span>-->\\r\\n</mat-menu>\";","export default \"<h1 style=\\\"text-align: center;\\\">Vehicle Service</h1>\\r\\n<button mat-raised-button color=\\\"primary\\\" (click) = \\\"addVehicleService()\\\" class=\\\"m-1\\\">Add New</button>\\r\\n<button mat-raised-button color=\\\"primary\\\" (click) = \\\"Download()\\\" class=\\\"m-1\\\">Download List</button>\\r\\n\\r\\n<div fxLayout=\\\"column\\\">\\r\\n    <div class=\\\"flex-p\\\" *ngIf = \\\"showtable\\\"> \\r\\n        <div fxLayout=\\\"column\\\" class=\\\"mat-elevation-z8\\\" >           \\r\\n            <mat-form-field class=\\\"p-1\\\">\\r\\n                <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Type to filter all columns\\\">\\r\\n            </mat-form-field> \\r\\n        </div>\\r\\n        <mat-table #table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">       \\r\\n            <ng-container matColumnDef=\\\"Vehicle_Service_ID\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Service ID </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Vehicle_Service_ID}} </mat-cell>\\r\\n            </ng-container>         \\r\\n            <ng-container matColumnDef=\\\"Vehicle_ID\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Vehicle ID </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Vehicle_ID}} </mat-cell>\\r\\n            </ng-container>     \\r\\n            <ng-container matColumnDef=\\\"Vehicle_Service_Milage\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Service Milage </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Vehicle_Service_Milage}} </mat-cell>\\r\\n            </ng-container>        \\r\\n            <ng-container matColumnDef=\\\"Vehicle_Service_Description\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Description </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Vehicle_Service_Description}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"Vehicle_Service_Start_Date\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Service Start Date </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Vehicle_Service_Start_Date}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"Vehicle_Service_End_Date\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Service End Date </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Vehicle_Service_End_Date}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"Invoice\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Service End Date </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\">\\r\\n                    <button mat-fab class=\\\"m-1\\\" color=\\\"red\\\" (click) ='getVehicleServiceDetail(element.Vehicle_Service_ID)'>\\r\\n                    <mat-icon>Download Invoice</mat-icon>\\r\\n                </button></mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"Actions\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\" >\\r\\n                    <button mat-fab class=\\\"m-1\\\" color=\\\"red\\\" (click) ='getVehicleServiceDetail(element.Vehicle_Service_ID)'>\\r\\n                        <mat-icon>edit</mat-icon>\\r\\n                    </button>\\r\\n                    <button mat-fab class=\\\"m-1\\\" color=\\\"red\\\" (click)=\\\"deleteVehicleService()\\\">\\r\\n                        <mat-icon>delete_forever</mat-icon>\\r\\n                    </button>\\r\\n                    <button mat-raised-button color=\\\"primary\\\"  >Mileage</button>\\r\\n               </mat-cell>\\r\\n            </ng-container>\\r\\n            <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n            <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n        </mat-table>  \\r\\n        <mat-paginator #paginator [pageSize]=\\\"15\\\" [pageSizeOptions]=\\\"[15, 20]\\\"></mat-paginator>      \\r\\n    </div>\\r\\n</div>\\r\\n<br>\\r\\n\\r\\n<ng-container *ngIf=\\\"show\\\">\\r\\n<form ng-show=\\\"show\\\" name=\\\"OwnerSub\\\" #userForm=\\\"ngForm\\\" ngNativeValidate (ngSubmit)=\\\"putVehicleService()\\\">\\r\\n    <mat-card>\\r\\n        <mat-card-header>   \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Vehicle Type\\\" [(ngModel)]=\\\"selectedValue\\\" name=\\\"Type\\\">\\r\\n                    <mat-option *ngFor=\\\"let type of types\\\" [value]=\\\"type\\\">\\r\\n                        {{type}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header>       \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Provider\\\" [(ngModel)]=\\\"providersSelect\\\" name=\\\"Provider\\\">\\r\\n                    <mat-option *ngFor=\\\"let type of providers\\\" [value]=\\\"type\\\">\\r\\n                        {{type}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header fxLayoutAlign=\\\"center\\\">     \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Desc\\\" [(ngModel)]=\\\"VehicleServEdit.Vehicle_Service_Description\\\" name=\\\"Desc\\\" required>\\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header fxLayoutAlign=\\\"center\\\">    \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Milage\\\" [(ngModel)]=\\\"VehicleServEdit.Vehicle_Service_Milage\\\" name=\\\"Milage\\\" required>\\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header fxLayoutAlign=\\\"center\\\">      \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Start\\\" [(ngModel)]=\\\"VehicleServEdit.Vehicle_Service_Start_Date\\\" name=\\\"Start\\\" required>\\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header fxLayoutAlign=\\\"center\\\">    \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"End\\\" [(ngModel)]=\\\"VehicleServEdit.Vehicle_Service_End_Date\\\" name=\\\"End\\\" required>\\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header fxLayoutAlign=\\\"center\\\">      \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"VSD\\\" [(ngModel)]=\\\"VehicleServEdit.VSD\\\" name=\\\"VSD\\\" required required>\\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\">Save Changes</button>\\r\\n  </form>\\r\\n</ng-container>\\r\\n\\r\\n\\r\\n<ng-container *ngIf=\\\"showAdd\\\">\\r\\n    <form ng-show=\\\"show\\\" name=\\\"OwnerSub\\\" #userForm=\\\"ngForm\\\" ngNativeValidate (ngSubmit)=\\\"putVehicleService()\\\">\\r\\n        <mat-card>\\r\\n            <mat-card-header>                \\r\\n               \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-select placeholder=\\\"Vehicle Type\\\" [(ngModel)]=\\\"VehicleServAdd.Vehicle_Type\\\" name=\\\"Type\\\" required>\\r\\n                        <option value=\\\"\\\" disabled selected>Choose</option>\\r\\n                        <mat-option *ngFor=\\\"let type of types\\\" [value]=\\\"type\\\">\\r\\n                            {{type}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n        <mat-card>\\r\\n            <mat-card-header>                \\r\\n               \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-select placeholder=\\\"Provider\\\" [(ngModel)]=\\\"VehicleServAdd.Providers\\\" name=\\\"Provider\\\" required>\\r\\n                        <option value=\\\"\\\" disabled selected>Choose</option>\\r\\n                        <mat-option *ngFor=\\\"let type of providers\\\" [value]=\\\"type\\\">\\r\\n                            {{type}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n        <mat-card>\\r\\n            <mat-card-header fxLayoutAlign=\\\"center\\\">              \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Desc\\\" [(ngModel)]=\\\"VehicleServAdd.Vehicle_Service_Description\\\" name=\\\"Desc\\\" required>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n        <mat-card>\\r\\n            <mat-card-header fxLayoutAlign=\\\"center\\\">             \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Milage\\\" [(ngModel)]=\\\"VehicleServAdd.Vehicle_Service_Milage\\\" name=\\\"Milage\\\" required>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n        <mat-card>\\r\\n            <mat-card-header fxLayoutAlign=\\\"center\\\">        \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Start\\\" [(ngModel)]=\\\"VehicleServAdd.Vehicle_Service_Start_Date\\\" name=\\\"Start\\\" required>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n        <mat-card>\\r\\n            <mat-card-header fxLayoutAlign=\\\"center\\\">        \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"End\\\" [(ngModel)]=\\\"VehicleServAdd.Vehicle_Service_End_Date\\\" name=\\\"End\\\" required>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n        <mat-card>\\r\\n            <mat-card-header fxLayoutAlign=\\\"center\\\">  \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"VSD\\\" [(ngModel)]=\\\"VehicleServAdd.VSD\\\" name=\\\"VSD\\\" required>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n        \\r\\n        <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\">Save</button>\\r\\n      </form>\\r\\n    </ng-container>\";","export default \"<h1 style=\\\"text-align: center;\\\">Vehicle Types</h1>\\r\\n<button mat-raised-button color=\\\"primary\\\" (click) = \\\"AddVehicleType()\\\" class=\\\"m-1\\\">Add New</button>\\r\\n\\r\\n<div fxLayout=\\\"column\\\">\\r\\n    <div class=\\\"flex-p\\\" > \\r\\n        <div fxLayout=\\\"column\\\" class=\\\"mat-elevation-z8\\\" >           \\r\\n            <mat-form-field class=\\\"p-1\\\">\\r\\n                <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Type to filter all columns\\\">\\r\\n            </mat-form-field> \\r\\n        </div>\\r\\n        <mat-table #table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">       \\r\\n            <ng-container matColumnDef=\\\"Type_ID\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> ID </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Type_ID}} </mat-cell>\\r\\n            </ng-container>         \\r\\n            <ng-container matColumnDef=\\\"Type\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Type </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Type}} </mat-cell>\\r\\n            </ng-container>     \\r\\n\\r\\n            <ng-container matColumnDef=\\\"Actions\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\" >\\r\\n                    <button mat-fab class=\\\"m-1\\\"  style=\\\"color: green; background-color:rgb(51, 49, 49)\\\" (click) ='getTypeDetail(element.Vehicle_ID)'>\\r\\n                        <mat-icon>edit</mat-icon>\\r\\n                    </button>\\r\\n                    <button mat-fab class=\\\"m-1\\\"  style=\\\"color: red; background-color:rgb(51, 49, 49)\\\" (click)=\\\"deleteVehicle()\\\">\\r\\n                        <mat-icon>delete_forever</mat-icon>\\r\\n                    </button>\\r\\n               </mat-cell>\\r\\n            </ng-container>\\r\\n\\r\\n            \\r\\n\\r\\n\\r\\n            <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n            <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n        </mat-table>  \\r\\n        <mat-paginator #paginator [pageSize]=\\\"15\\\" [pageSizeOptions]=\\\"[15, 20]\\\"></mat-paginator>      \\r\\n    </div>\\r\\n</div>\\r\\n<br>\\r\\n\\r\\n<ng-container *ngIf=\\\"show\\\">\\r\\n<form ng-show=\\\"show\\\" name=\\\"OwnerSub\\\" #userForm=\\\"ngForm\\\" ngNativeValidate (ngSubmit)=\\\"PutVehicle()\\\">\\r\\n           \\r\\n           \\r\\n    \\r\\n            <mat-card>\\r\\n                <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n                   \\r\\n                </mat-card-header>\\r\\n                <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                    <mat-form-field>\\r\\n                        <input matInput placeholder=\\\"Type\\\" [(ngModel)]=\\\"TypeEdit\\\"   name=\\\"PurchMileage\\\" required>\\r\\n                    </mat-form-field>\\r\\n                                       \\r\\n                </mat-card-content>\\r\\n            </mat-card>\\r\\n        \\r\\n\\r\\n    <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\">Save Changes</button>\\r\\n  </form>\\r\\n  <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\" (click)=\\\"showTable()\\\">Back</button>\\r\\n</ng-container>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<ng-container *ngIf=\\\"showAdd\\\">\\r\\n    <form ng-show=\\\"show\\\" name=\\\"OwnerSub\\\" #userForm=\\\"ngForm\\\" ngNativeValidate (ngSubmit)=\\\"AddNewVehicle()\\\">\\r\\n            \\r\\n        <mat-card>\\r\\n            <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n               \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Type\\\"  name=\\\"PurchMileage\\\" required>\\r\\n                </mat-form-field>\\r\\n                                   \\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n       \\r\\n\\r\\n        \\r\\n        <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\">Save</button>\\r\\n      </form>\\r\\n      <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\" (click)=\\\"showTable()\\\">Back</button>\\r\\n    </ng-container>\";","export default \"<h1 style=\\\"text-align: center;\\\">Vehicle</h1>\\r\\n<button mat-raised-button color=\\\"primary\\\" (click) = \\\"AddVehicle()\\\" class=\\\"m-1\\\">Add New</button>\\r\\n<button mat-raised-button color=\\\"primary\\\" (click) = \\\"LoadTypes()\\\" class=\\\"m-1\\\">Vehicle Types</button>\\r\\n<button mat-raised-button color=\\\"primary\\\" (click) = \\\"Download()\\\" class=\\\"m-1\\\">Download List</button>\\r\\n<div fxLayout=\\\"column\\\">\\r\\n    <div class=\\\"flex-p\\\" *ngIf = \\\"showtable\\\"> \\r\\n        <div fxLayout=\\\"column\\\" class=\\\"mat-elevation-z8\\\" >           \\r\\n            <mat-form-field class=\\\"p-1\\\">\\r\\n                <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Type to filter all columns\\\">\\r\\n            </mat-form-field> \\r\\n        </div>\\r\\n        <mat-table #table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">       \\r\\n            <ng-container matColumnDef=\\\"Vehicle_ID\\\" >\\r\\n                <mat-header-cell *matHeaderCellDef> ID </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\" > {{element.Vehicle_ID}} </mat-cell>\\r\\n            </ng-container>         \\r\\n            <ng-container matColumnDef=\\\"Vehicle_Type_Description\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Type </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Vehicle_Type_Description}} </mat-cell>\\r\\n            </ng-container>     \\r\\n            <ng-container matColumnDef=\\\"Model_Description\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Model </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Model_Description}} </mat-cell>\\r\\n            </ng-container>        \\r\\n            <ng-container matColumnDef=\\\"Section_Name\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Section </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Section_Name}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"Vehicle_Mileage_Current\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Curr. Mileage </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Vehicle_Mileage_Current}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"Vehicle_Registration_Number\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Reg no </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.Vehicle_Registration_Number}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"is_Active\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Active </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.is_Active}} </mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"Actions\\\">\\r\\n                <mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\" >\\r\\n                    <button mat-fab class=\\\"m-1\\\"  style=\\\"color: green; background-color:rgb(51, 49, 49)\\\" (click) ='getVehicleDetail(element.Vehicle_ID)'>\\r\\n                        <mat-icon>edit</mat-icon>\\r\\n                    </button>\\r\\n                    <button mat-fab class=\\\"m-1\\\"  style=\\\"color: red; background-color:rgb(51, 49, 49)\\\" (click)=\\\"deleteVehicle()\\\">\\r\\n                        <mat-icon>delete_forever</mat-icon>\\r\\n                    </button>\\r\\n                    <button mat-raised-button color=\\\"primary\\\"  (click) = \\\"Prompt()\\\">Mileage</button>\\r\\n                    \\r\\n               </mat-cell>\\r\\n            </ng-container>\\r\\n\\r\\n            \\r\\n\\r\\n\\r\\n            <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n            <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n        </mat-table>  \\r\\n        <mat-paginator #paginator [pageSize]=\\\"15\\\" [pageSizeOptions]=\\\"[15, 20]\\\"></mat-paginator>      \\r\\n    </div>\\r\\n</div>\\r\\n<br>\\r\\n\\r\\n<ng-container *ngIf=\\\"show\\\">\\r\\n<form ng-show=\\\"show\\\" name=\\\"OwnerSub\\\" #userForm=\\\"ngForm\\\" ngNativeValidate (ngSubmit)=\\\"putVehicle()\\\" [formGroup] = \\\"form\\\">\\r\\n    <mat-card>\\r\\n        <mat-card-header>                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Vehicle Type\\\" [(ngModel)]=\\\"selectedValue\\\" name=\\\"Type\\\" formControlName = \\\"Type\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                    <mat-option *ngFor=\\\"let type of types\\\" [value]=\\\"type\\\">\\r\\n                        {{type}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n                \\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header>                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Section\\\" [(ngModel)]=\\\"SectionSelect\\\" name=\\\"Section\\\" formControlName = \\\"Section\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                    <mat-option *ngFor=\\\"let type of sections\\\" [value]=\\\"type\\\">\\r\\n                        {{type}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header>                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Infrastructure location\\\" [(ngModel)]=\\\"InfrastructureSelect\\\" name=\\\"Infras\\\" formControlName = \\\"Infras\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                    <mat-option *ngFor=\\\"let type of infrastructures\\\" [value]=\\\"type\\\">\\r\\n                        {{type}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header>                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Make\\\" [(ngModel)]=\\\"MakeSelect\\\" name=\\\"Make\\\" formControlName = \\\"Make\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                    <mat-option *ngFor=\\\"let type of makes\\\" [value]=\\\"type\\\">\\r\\n                        {{type}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header>                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Model\\\" [(ngModel)]=\\\"ModelSelect\\\" name=\\\"Model\\\" formControlName = \\\"Model\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                    <mat-option *ngFor=\\\"let type of models\\\" [value]=\\\"type\\\">\\r\\n                        {{type}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n   \\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Year\\\" [(ngModel)]=\\\"VehicleEdit.Year\\\" name=\\\"Year\\\" required formControlName = \\\"Year\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                <mat-error *ngIf = \\\"form.controls.Year.errors?.required\\\">Year is required</mat-error>\\r\\n                <mat-error *ngIf = \\\"form.controls.Year.errors?.maxlength\\\">Year cannot exceed 4 charachters</mat-error>\\r\\n            </mat-form-field>\\r\\n                               \\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Colour\\\" [(ngModel)]=\\\"VehicleEdit.Colour\\\" name=\\\"Color\\\" required formControlName = \\\"Color\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                <mat-error *ngIf = \\\"form.controls.Color.errors?.required\\\">Color is required</mat-error>\\r\\n                <mat-error *ngIf = \\\"form.controls.Color.errors?.maxlength\\\">Color cannot exceed 16 charachters</mat-error>\\r\\n            </mat-form-field>\\r\\n                               \\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Mileage on purchase\\\" [(ngModel)]=\\\"VehicleEdit.StartMileage\\\" name=\\\"PurchMileage\\\" required formControlName = \\\"PurchMileage\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                <mat-error *ngIf = \\\"form.controls.PurchMileage.errors?.required\\\">Purchase Mileage is required</mat-error>\\r\\n                <mat-error *ngIf = \\\"form.controls.PurchMileage.errors?.maxlength\\\">Purchase Mileage cannot exceed 8 charachters</mat-error>\\r\\n            </mat-form-field>\\r\\n                               \\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Current Mileage\\\" [(ngModel)]=\\\"VehicleEdit.CurrentMileage\\\" name=\\\"CurrMileage\\\" required formControlName = \\\"CurrMileage\\\" [ngModelOptions]=\\\"{standalone: true}\\\" >\\r\\n                <mat-error *ngIf = \\\"form.controls.CurrMileage.errors?.required\\\">Current Mileage is required</mat-error>\\r\\n                <mat-error *ngIf = \\\"form.controls.CurrMileage.errors?.maxlength\\\">Current Mileage cannot exceed 8 charachters</mat-error>\\r\\n            </mat-form-field>\\r\\n                               \\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Service interval\\\" [(ngModel)]=\\\"VehicleEdit.ServiceIntervals\\\" name=\\\"Interval\\\" required  formControlName = \\\"Interval\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                <mat-error *ngIf = \\\"form.controls.Interval.errors?.required\\\">Interval Mileage is required</mat-error>\\r\\n                <mat-error *ngIf = \\\"form.controls.Interval.errors?.maxlength\\\">Interval Mileage cannot exceed 8 charachters</mat-error>\\r\\n            </mat-form-field>\\r\\n                               \\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Last Service mileage\\\" [(ngModel)]=\\\"VehicleEdit.LastServiceKM\\\" name=\\\"LastService\\\" required formControlName = \\\"LastService\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                <mat-error *ngIf = \\\"form.controls.LastService.errors?.required\\\">Last Service Mileage is required</mat-error>\\r\\n                <mat-error *ngIf = \\\"form.controls.LastService.errors?.maxlength\\\">Last Service Mileage cannot exceed 8 charachters</mat-error>\\r\\n            </mat-form-field>\\r\\n                               \\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Registration\\\" [(ngModel)]=\\\"VehicleEdit.Registration\\\" name=\\\"Registration\\\" required formControlName = \\\"Registration\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                <mat-error *ngIf = \\\"form.controls.Registration.errors?.required\\\">Registration is required</mat-error>\\r\\n                <mat-error *ngIf = \\\"form.controls.Registration.errors?.maxlength\\\">Registration cannot exceed 15 charachters</mat-error>\\r\\n            </mat-form-field>\\r\\n                               \\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"DateOfPurchase\\\" [(ngModel)]=\\\"VehicleEdit.DateofPurchase\\\" name=\\\"PurchaseDate\\\" required formControlName = \\\"PurchaseDate\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                <mat-error *ngIf = \\\"form.controls.PurchaseDate.errors?.required\\\">PurchaseDate is required</mat-error>\\r\\n                <mat-error *ngIf = \\\"form.controls.PurchaseDate.errors?.maxlength\\\">Purchase Date cannot exceed 10 charachters</mat-error>\\r\\n            </mat-form-field>\\r\\n                               \\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"PurchasePrice\\\" [(ngModel)]=\\\"VehicleEdit.DateofPurchase\\\" name=\\\"Price\\\" required formControlName = \\\"Price\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                <mat-error *ngIf = \\\"form.controls.Price.errors?.required\\\">Price is required</mat-error>\\r\\n                <mat-error *ngIf = \\\"form.controls.Price.errors?.maxlength\\\">Price cannot exceed 6 charachters</mat-error>\\r\\n            </mat-form-field>\\r\\n                               \\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n           \\r\\n        </mat-card-header>\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Status\\\" [(ngModel)]=\\\"VehicleEdit.Active\\\" name=\\\"Active\\\" required [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n            </mat-form-field>\\r\\n                               \\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    \\r\\n    <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\">Save Changes</button>\\r\\n  </form>\\r\\n  <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\" (click)=\\\"showTable()\\\">Back</button>\\r\\n</ng-container>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<ng-container *ngIf=\\\"showAdd\\\">\\r\\n    <form ng-show=\\\"show\\\" name=\\\"OwnerSub\\\" #userForm=\\\"ngForm\\\" ngNativeValidate (ngSubmit)=\\\"addNewVehicle()\\\" [formGroup] = \\\"form\\\">\\r\\n        <mat-card>\\r\\n            <mat-card-header>                \\r\\n               \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-select placeholder=\\\"Vehicle Type\\\" [(ngModel)]=\\\"VehicleAdd.Vehicle_Type\\\" name=\\\"Type\\\" required formControlName = \\\"Type\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                        <option value=\\\"\\\" disabled selected>Choose</option>\\r\\n                        <mat-option *ngFor=\\\"let type of types\\\" [value]=\\\"type\\\">\\r\\n                            {{type}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n        <mat-card>\\r\\n            <mat-card-header>                \\r\\n               \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-select placeholder=\\\"Section\\\" [(ngModel)]=\\\"VehicleAdd.Section\\\" name=\\\"Section\\\" required formControlName = \\\"Section\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                        <option value=\\\"\\\" disabled selected>Choose</option>\\r\\n                        <mat-option *ngFor=\\\"let type of sections\\\" [value]=\\\"type\\\">\\r\\n                            {{type}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n\\r\\n        <mat-card>\\r\\n            <mat-card-header>                \\r\\n               \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-select placeholder=\\\"Infrastructure location\\\" [(ngModel)]=\\\"VehicleAdd.Infrastructure\\\" name=\\\"Infras\\\" required formControlName = \\\"Infras\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                        <option value=\\\"\\\" disabled selected>Choose</option>\\r\\n                        <mat-option *ngFor=\\\"let type of infrastructures\\\" [value]=\\\"type\\\">\\r\\n                            {{type}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n        <mat-card>\\r\\n            <mat-card-header>                \\r\\n               \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-select placeholder=\\\"Make\\\" [(ngModel)]=\\\"VehicleAdd.Make\\\" name=\\\"Make\\\" required formControlName = \\\"Make\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                        <option value=\\\"\\\" disabled selected>Choose</option>\\r\\n                        <mat-option *ngFor=\\\"let type of makes\\\" [value]=\\\"type\\\">\\r\\n                            {{type}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n        <mat-card>\\r\\n            <mat-card-header>                \\r\\n               \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-select placeholder=\\\"Model\\\" [(ngModel)]=\\\"VehicleAdd.Model_Description\\\" name=\\\"Model\\\" required formControlName = \\\"Model\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                        <option value=\\\"\\\" disabled selected>Choose</option>\\r\\n                        <mat-option *ngFor=\\\"let type of models\\\" [value]=\\\"type\\\">\\r\\n                            {{type}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n\\r\\n    \\r\\n        <mat-card>\\r\\n            <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n               \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Year\\\" [(ngModel)]=\\\"VehicleAdd.Year\\\" name=\\\"Year\\\" required formControlName = \\\"Year\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                    <mat-error *ngIf = \\\"form.controls.Year.errors?.required\\\">Year is required</mat-error>\\r\\n                    <mat-error *ngIf = \\\"form.controls.Year.errors?.maxlength\\\">Year cannot exceed 4 charachters</mat-error>\\r\\n                </mat-form-field>\\r\\n                                   \\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n        <mat-card>\\r\\n            <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n               \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Colour\\\" [(ngModel)]=\\\"VehicleAdd.Colour\\\" name=\\\"Color\\\" required formControlName = \\\"Color\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                    <mat-error *ngIf = \\\"form.controls.Color.errors?.required\\\">Color is required</mat-error>\\r\\n                    <mat-error *ngIf = \\\"form.controls.Color.errors?.maxlength\\\">Color cannot exceed 16 charachters</mat-error>\\r\\n                </mat-form-field>\\r\\n                                   \\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n        <mat-card>\\r\\n            <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n               \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Mileage on purchase\\\" [(ngModel)]=\\\"VehicleAdd.StartMileage\\\" name=\\\"PurchMileage\\\" required formControlName = \\\"PurchMileage\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                    <mat-error *ngIf = \\\"form.controls.PurchMileage.errors?.required\\\">Purchase Mileage is required</mat-error>\\r\\n                    <mat-error *ngIf = \\\"form.controls.PurchMileage.errors?.maxlength\\\">Purchase Mileage cannot exceed 8 charachters</mat-error>\\r\\n                </mat-form-field>\\r\\n                                   \\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n        <mat-card>\\r\\n            <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n               \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Current Mileage\\\" [(ngModel)]=\\\"VehicleAdd.CurrentMileage\\\" name=\\\"CurrMileage\\\" required formControlName = \\\"CurrMileage\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                    <mat-error *ngIf = \\\"form.controls.CurrMileage.errors?.required\\\">Current Mileage is required</mat-error>\\r\\n                    <mat-error *ngIf = \\\"form.controls.CurrMileage.errors?.maxlength\\\">Current Mileage cannot exceed 8 charachters</mat-error>\\r\\n                </mat-form-field>\\r\\n                                   \\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n        <mat-card>\\r\\n            <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n               \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Service interval\\\" [(ngModel)]=\\\"VehicleAdd.ServiceIntervals\\\" name=\\\"Interval\\\" required formControlName = \\\"Interval\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                    <mat-error *ngIf = \\\"form.controls.Interval.errors?.required\\\">Interval Mileage is required</mat-error>\\r\\n                    <mat-error *ngIf = \\\"form.controls.Interval.errors?.maxlength\\\">Interval Mileage cannot exceed 8 charachters</mat-error>\\r\\n                </mat-form-field>\\r\\n                                   \\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n        <mat-card>\\r\\n            <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n               \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Last Service mileage\\\" [(ngModel)]=\\\"VehicleAdd.LastServiceKM\\\" name=\\\"LastService\\\" required formControlName = \\\"LastService\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                    <mat-error *ngIf = \\\"form.controls.LastService.errors?.required\\\">Last Service Mileage is required</mat-error>\\r\\n                    <mat-error *ngIf = \\\"form.controls.LastService.errors?.maxlength\\\">Last Service Mileage cannot exceed 8 charachters</mat-error>\\r\\n                </mat-form-field>\\r\\n                                   \\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n        <mat-card>\\r\\n            <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n               \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Registration\\\" [(ngModel)]=\\\"VehicleAdd.Registration\\\" name=\\\"Registration\\\" required formControlName = \\\"Registration\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                    <mat-error *ngIf = \\\"form.controls.Registration.errors?.required\\\">Registration is required</mat-error>\\r\\n                    <mat-error *ngIf = \\\"form.controls.Registration.errors?.maxlength\\\">Registration cannot exceed 15 charachters</mat-error>\\r\\n                </mat-form-field>\\r\\n                                   \\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n        <mat-card>\\r\\n            <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n               \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"DateOfPurchase\\\" [(ngModel)]=\\\"VehicleAdd.DateofPurchase\\\" name=\\\"PurchaseDate\\\" required formControlName = \\\"PurchaseDate\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                    <mat-error *ngIf = \\\"form.controls.PurchaseDate.errors?.required\\\">PurchaseDate is required</mat-error>\\r\\n                    <mat-error *ngIf = \\\"form.controls.PurchaseDate.errors?.maxlength\\\">Purchase Date cannot exceed 10 charachters</mat-error>\\r\\n                </mat-form-field>\\r\\n                                   \\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n        <mat-card>\\r\\n            <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n               \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"PurchasePrice\\\" [(ngModel)]=\\\"VehicleAdd.Price\\\" name=\\\"Price\\\" required formControlName = \\\"Price\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                    <mat-error *ngIf = \\\"form.controls.Price.errors?.required\\\">Price is required</mat-error>\\r\\n                    <mat-error *ngIf = \\\"form.controls.Price.errors?.maxlength\\\">Price cannot exceed 6 charachters</mat-error>\\r\\n                </mat-form-field>\\r\\n                                   \\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n        <mat-card>\\r\\n            <mat-card-header fxLayoutAlign=\\\"center\\\">                \\r\\n               \\r\\n            </mat-card-header>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Status\\\" [(ngModel)]=\\\"VehicleAdd.Active\\\" name=\\\"Active\\\" required [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                </mat-form-field>\\r\\n                                   \\r\\n            </mat-card-content>\\r\\n        </mat-card>\\r\\n    \\r\\n        \\r\\n        <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\">Save</button>\\r\\n      </form>\\r\\n      <button mat-raised-button color=\\\"primary\\\" class=\\\"m-1\\\" (click)=\\\"showTable()\\\">Back</button>\\r\\n    </ng-container>\";","export class Farm{\r\n    constructor(){}\r\n\r\n    Farm_Type: string;\r\n    Farm_Size:Number;\r\n    Farm_Name:string;\r\n    Farm_Address: string;\r\n    Farm_Email: string; \r\n    Farm_Number: string;\r\n    Farm_Avg_Health_Score: number;\r\n    Province: string;\r\n    Active: string;\r\n\r\n    Foreman_Email:string;\r\n    Foreman_Name:string;\r\n}","export class Faults{\r\n    constructor(){}\r\n\r\n    Fault_ID: number;\r\n    Fault_Description: string;\r\n    Fault_Start_Date: string;\r\n    Fault_End_Date: string;\r\n    Fault_Image: string;\r\n    Fault_Type_Description: string;\r\n    Equipment_Description: string;\r\n    Infrastructure_Description: string;\r\n    Status_Description: string;\r\n    Importance_Description: string;\r\n    Staff_Name: string;\r\n}","export class Infrastructures{\r\n    constructor(){}\r\n\r\nSection: string;\r\nInfrastructure_Type: string;\r\nInfrastructure_Size: string;\r\nInfrastructure_Location: string;\r\nInfrastructure_Name: string;\r\nActive: boolean;\r\n\r\n}","export class Insurance{\r\n    constructor(){}\r\n    IP_ID:string;\r\n    User_ID: string;\r\n    IP_Name:string;\r\n    IP_Reg_Number:string;\r\n    IP_VAT_Number:number;\r\n    IP_Phone_Number:number;\r\n}","export class Maintenance{\r\n    constructor(){}\r\n\r\n    Maintenance_ID: number;\r\n    Maintenance_Description: string;\r\n    Maintenance_Start_Date: string;\r\n    Maintenance_End_Date: string;\r\n    Maintenance_Image: string;\r\n    Maintenance_Type_Description: string;\r\n    Equipment_Description: string;\r\n    Infrastructure_Description: string;\r\n    Status_Description: string;\r\n    Importance_Description: string;\r\n    Staff_Name: string;\r\n}","export class RepairLogs{\r\n    constructor(){}\r\n\r\n    Vehicle: string;\r\n    VRD_Invoice: String;\r\n    Vehicle_Repair_Date_Ended : Date;\r\n    Vehicle_Repair_Date_Started: Date;\r\n    Provider: string;\r\n    Vehicle_Repair_Cost: string;\r\n    Status: string;\r\n}","export class RepairRequests{\r\n    constructor(){}\r\n\r\n    Vehicle: string;\r\n    Vehicle_Repair_Date_Started: Date;\r\n    Provider: string;\r\n    Vehicle_Repair_Cost: string;\r\n    Status: string;\r\n}","export class SRProviders{\r\n    constructor(){}\r\n\r\nProvider_ID: number;\r\nProvider_Name: string;\r\nProvider_Contact_Number: string;\r\nProvider_Email: string;\r\nProvider_Address: string;\r\nIs_Active: string;\r\n}","export class ScheduledTasks{\r\n    constructor(){}\r\n\r\n    Staff: string;\r\n    Schedule_End_Date : Date;\r\n    Schedule_Start_Date: Date;\r\n    Task: string;\r\n    Day: string;\r\n    Status: string;\r\n}","export class Sections{\r\n    constructor(){}\r\n\r\nSection_ID: number;\r\nSection_Name: string;\r\nSection_Location: string;\r\nSection_Size: string;\r\nIs_Active: string;\r\nFarm_Name: string;\r\nSection_Type_Description: string;\r\n}","export class SectionTypes{\r\n    constructor(){}\r\n\r\nSection_Type_ID: number;\r\nSection_Type_Description: string;\r\n}","export class Skill{\r\n    constructor(){}\r\nSkill_ID:number;\r\nSkill_Description:string;\r\n\r\n}","export class Task{\r\n    constructor(){}\r\nTask_ID:number;\r\nTask_Type_Description:string;\r\nImportance_Description:string;\r\nSection_Name:string;\r\nInfrastructure_Name:string;\r\nEquipment_Description:string;\r\nTask_Description:string;\r\nTask_Duration:number;\r\nSkill_Description:string;\r\n\r\n}","export class Task_Type{\r\n    constructor(){}\r\nTask_Type_ID:number;\r\nTask_Type_Description:string;\r\n\r\n}","import { Time } from \"@angular/common\";\r\n\r\nexport class VehicleService{\r\n    constructor(){}\r\n        \r\n    Vehicle_Service_Mileage: number;\r\n    Vehicle_Service_Start_Date: string;//not sure what format to use for DateTime\r\n    Vehicle_Service_End_Date: string; //not sure what format to use for DateTime\r\n    Vehicle_Service_Description: string;\r\n    VSD:string; // should be for the pdf of the document\r\n    Providers:string;\r\n    Vehicle_Type:string;\r\n}","export class Vehicles{\r\n    constructor(){}\r\n\r\nVehicle_Type: string;\r\nInfrastructure: string;\r\nMake: string;\r\nModel: string;\r\nSection: string;\r\nYear: string;\r\nColour: string;\r\nStartMileage: string;\r\nCurrentMileage: string;\r\nServiceIntervals: string;\r\nLastServiceKM: string;\r\nRegistration: string;\r\nDateofPurchase: string;\r\nActive: string;\r\n\r\n}","export class Equipment{\r\n    constructor(){}\r\nEquipment_ID: string;\r\nEquipment_type_Description: string;\r\nInfrastructure_Name: string;\r\nEquipment_Description: string;\r\nEquipment_Condition: string;\r\nEquipment_Cost: number;\r\nIs_Active: string;\r\n\r\n}","export default \"mat-card {\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWJvdXQvRDpcXDM3MFxcRmluYWxGcm9udGVuZC9zcmNcXGFwcFxcYWJvdXRcXGFib3V0LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9hYm91dC9hYm91dC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUFVLGtCQUFBO0FDRVYiLCJmaWxlIjoic3JjL2FwcC9hYm91dC9hYm91dC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1jYXJkIHt0ZXh0LWFsaWduOiBjZW50ZXJ9IiwibWF0LWNhcmQge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59Il19 */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-about',\r\n  templateUrl: './about.component.html',\r\n  styleUrls: ['./about.component.scss']\r\n})\r\nexport class AboutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjdGl2ZS1saXN0L2FjdGl2ZS1saXN0LmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-active-list',\r\n  templateUrl: './active-list.component.html',\r\n  styleUrls: ['./active-list.component.scss']\r\n})\r\nexport class ActiveListComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\nDownload(){\r\n\r\n}\r\n\r\nNewFunc(){\r\n  \r\n}\r\n\r\nCancel(){\r\n\r\n}\r\n\r\nback(){\r\n\r\n}\r\n}\r\n","export default \".app {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n}\\n\\n#app-spinner {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n  height: 100%;\\n  width: 100%;\\n  position: fixed;\\n  top: 0;\\n  background: #fff;\\n  z-index: 999999;\\n  visibility: visible;\\n  opacity: 1;\\n  transition: visibility 0.5s, opacity 0.3s linear;\\n}\\n\\n#app-spinner.hide {\\n  visibility: hidden;\\n  opacity: 0;\\n}\\n\\n#app-spinner h4 {\\n  margin-top: 10px;\\n  letter-spacing: 0.02em;\\n  opacity: 0;\\n  text-transform: uppercase;\\n  -webkit-animation: loading-text-opacity 2s linear 0s infinite normal;\\n  animation: loading-text-opacity 2s linear 0s infinite normal;\\n}\\n\\n@keyframes loading-text-opacity {\\n  0% {\\n    opacity: 0;\\n  }\\n  20% {\\n    opacity: 0;\\n  }\\n  50% {\\n    opacity: 1;\\n  }\\n  100% {\\n    opacity: 0;\\n  }\\n}\\n\\n@-webkit-keyframes loading-text-opacity {\\n  0% {\\n    opacity: 0;\\n  }\\n  20% {\\n    opacity: 0;\\n  }\\n  50% {\\n    opacity: 1;\\n  }\\n  100% {\\n    opacity: 0;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvRDpcXDM3MFxcRmluYWxGcm9udGVuZC9zcmNcXGFwcFxcYXBwLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxrQkFBQTtFQUNBLE1BQUE7RUFDQSxPQUFBO0VBQ0EsUUFBQTtFQUNBLFNBQUE7QUNDSjs7QURFQTtFQUtJLGFBQUE7RUFDQSxzQkFBQTtFQUNBLG1CQUFBO0VBQ0EsdUJBQUE7RUFDQSxZQUFBO0VBQ0EsV0FBQTtFQUNBLGVBQUE7RUFDQSxNQUFBO0VBQ0EsZ0JBQUE7RUFDQSxlQUFBO0VBQ0EsbUJBQUE7RUFDQSxVQUFBO0VBR0EsZ0RBQUE7QUNDSjs7QURBSTtFQUNJLGtCQUFBO0VBQ0EsVUFBQTtBQ0VSOztBREFJO0VBQ0ksZ0JBQUE7RUFDQSxzQkFBQTtFQUNBLFVBQUE7RUFDQSx5QkFBQTtFQUdBLG9FQUFBO0VBQ0EsNERBQUE7QUNFUjs7QURFQTtFQUNJO0lBQUssVUFBQTtFQ0VQO0VEREU7SUFBSyxVQUFBO0VDSVA7RURIRTtJQUFLLFVBQUE7RUNNUDtFRExFO0lBQUssVUFBQTtFQ1FQO0FBQ0Y7O0FEREE7RUFDSTtJQUFLLFVBQUE7RUNrQlA7RURqQkU7SUFBSyxVQUFBO0VDb0JQO0VEbkJFO0lBQUssVUFBQTtFQ3NCUDtFRHJCRTtJQUFLLFVBQUE7RUN3QlA7QUFDRiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hcHB7XHJcbiAgICBwb3NpdGlvbjphYnNvbHV0ZTtcclxuICAgIHRvcDowO1xyXG4gICAgbGVmdDowO1xyXG4gICAgcmlnaHQ6MDtcclxuICAgIGJvdHRvbTowO1xyXG59XHJcblxyXG4jYXBwLXNwaW5uZXJ7XHJcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcclxuICAgIGRpc3BsYXk6IC1tb3otYm94O1xyXG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XHJcbiAgICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgYmFja2dyb3VuZDogI2ZmZjtcclxuICAgIHotaW5kZXg6IDk5OTk5OTtcclxuICAgIHZpc2liaWxpdHk6IHZpc2libGU7XHJcbiAgICBvcGFjaXR5OiAxO1xyXG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiB2aXNpYmlsaXR5IDAuNXMsIG9wYWNpdHkgMC4zcyBsaW5lYXI7XHJcbiAgICAtbW96LXRyYW5zaXRpb246IHZpc2liaWxpdHkgMC41cywgb3BhY2l0eSAwLjNzIGxpbmVhcjtcclxuICAgIHRyYW5zaXRpb246IHZpc2liaWxpdHkgMC41cywgb3BhY2l0eSAwLjNzIGxpbmVhcjtcclxuICAgICYuaGlkZXtcclxuICAgICAgICB2aXNpYmlsaXR5OiBoaWRkZW47XHJcbiAgICAgICAgb3BhY2l0eTogMDsgXHJcbiAgICB9XHJcbiAgICBoNHtcclxuICAgICAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG4gICAgICAgIGxldHRlci1zcGFjaW5nOiAwLjAyZW07XHJcbiAgICAgICAgb3BhY2l0eTogMDtcclxuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgIC1tb3otYW5pbWF0aW9uOiBsb2FkaW5nLXRleHQtb3BhY2l0eSAycyBsaW5lYXIgMHMgaW5maW5pdGUgbm9ybWFsO1xyXG4gICAgICAgIC1vLWFuaW1hdGlvbjogbG9hZGluZy10ZXh0LW9wYWNpdHkgMnMgbGluZWFyIDBzIGluZmluaXRlIG5vcm1hbDtcclxuICAgICAgICAtd2Via2l0LWFuaW1hdGlvbjogbG9hZGluZy10ZXh0LW9wYWNpdHkgMnMgbGluZWFyIDBzIGluZmluaXRlIG5vcm1hbDtcclxuICAgICAgICBhbmltYXRpb246IGxvYWRpbmctdGV4dC1vcGFjaXR5IDJzIGxpbmVhciAwcyBpbmZpbml0ZSBub3JtYWw7XHJcbiAgICB9XHJcbn1cclxuXHJcbkBrZXlmcmFtZXMgbG9hZGluZy10ZXh0LW9wYWNpdHkge1xyXG4gICAgMCUgIHtvcGFjaXR5OiAwfVxyXG4gICAgMjAlIHtvcGFjaXR5OiAwfVxyXG4gICAgNTAlIHtvcGFjaXR5OiAxfVxyXG4gICAgMTAwJXtvcGFjaXR5OiAwfVxyXG59XHJcbkAtbW96LWtleWZyYW1lcyBsb2FkaW5nLXRleHQtb3BhY2l0eSB7XHJcbiAgICAwJSAge29wYWNpdHk6IDB9XHJcbiAgICAyMCUge29wYWNpdHk6IDB9XHJcbiAgICA1MCUge29wYWNpdHk6IDF9XHJcbiAgICAxMDAle29wYWNpdHk6IDB9XHJcbn1cclxuQC13ZWJraXQta2V5ZnJhbWVzIGxvYWRpbmctdGV4dC1vcGFjaXR5IHtcclxuICAgIDAlICB7b3BhY2l0eTogMH1cclxuICAgIDIwJSB7b3BhY2l0eTogMH1cclxuICAgIDUwJSB7b3BhY2l0eTogMX1cclxuICAgIDEwMCV7b3BhY2l0eTogMH1cclxufVxyXG5ALW8ta2V5ZnJhbWVzIGxvYWRpbmctdGV4dC1vcGFjaXR5IHtcclxuICAgIDAlICB7b3BhY2l0eTogMH1cclxuICAgIDIwJSB7b3BhY2l0eTogMH1cclxuICAgIDUwJSB7b3BhY2l0eTogMX1cclxuICAgIDEwMCV7b3BhY2l0eTogMH1cclxufVxyXG4iLCIuYXBwIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG59XG5cbiNhcHAtc3Bpbm5lciB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbW96LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGhlaWdodDogMTAwJTtcbiAgd2lkdGg6IDEwMCU7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xuICB6LWluZGV4OiA5OTk5OTk7XG4gIHZpc2liaWxpdHk6IHZpc2libGU7XG4gIG9wYWNpdHk6IDE7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogdmlzaWJpbGl0eSAwLjVzLCBvcGFjaXR5IDAuM3MgbGluZWFyO1xuICAtbW96LXRyYW5zaXRpb246IHZpc2liaWxpdHkgMC41cywgb3BhY2l0eSAwLjNzIGxpbmVhcjtcbiAgdHJhbnNpdGlvbjogdmlzaWJpbGl0eSAwLjVzLCBvcGFjaXR5IDAuM3MgbGluZWFyO1xufVxuI2FwcC1zcGlubmVyLmhpZGUge1xuICB2aXNpYmlsaXR5OiBoaWRkZW47XG4gIG9wYWNpdHk6IDA7XG59XG4jYXBwLXNwaW5uZXIgaDQge1xuICBtYXJnaW4tdG9wOiAxMHB4O1xuICBsZXR0ZXItc3BhY2luZzogMC4wMmVtO1xuICBvcGFjaXR5OiAwO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAtbW96LWFuaW1hdGlvbjogbG9hZGluZy10ZXh0LW9wYWNpdHkgMnMgbGluZWFyIDBzIGluZmluaXRlIG5vcm1hbDtcbiAgLW8tYW5pbWF0aW9uOiBsb2FkaW5nLXRleHQtb3BhY2l0eSAycyBsaW5lYXIgMHMgaW5maW5pdGUgbm9ybWFsO1xuICAtd2Via2l0LWFuaW1hdGlvbjogbG9hZGluZy10ZXh0LW9wYWNpdHkgMnMgbGluZWFyIDBzIGluZmluaXRlIG5vcm1hbDtcbiAgYW5pbWF0aW9uOiBsb2FkaW5nLXRleHQtb3BhY2l0eSAycyBsaW5lYXIgMHMgaW5maW5pdGUgbm9ybWFsO1xufVxuXG5Aa2V5ZnJhbWVzIGxvYWRpbmctdGV4dC1vcGFjaXR5IHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gIH1cbiAgMjAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICB9XG4gIDUwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICB9XG59XG5ALW1vei1rZXlmcmFtZXMgbG9hZGluZy10ZXh0LW9wYWNpdHkge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgfVxuICAyMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gIH1cbiAgNTAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gIH1cbn1cbkAtd2Via2l0LWtleWZyYW1lcyBsb2FkaW5nLXRleHQtb3BhY2l0eSB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICB9XG4gIDIwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgfVxuICA1MCUge1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgfVxufVxuQC1vLWtleWZyYW1lcyBsb2FkaW5nLXRleHQtb3BhY2l0eSB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICB9XG4gIDIwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgfVxuICA1MCUge1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgfVxufSJdfQ== */\";","import { Component } from '@angular/core';\r\nimport { AppSettings } from './app.settings';\r\nimport { Settings } from './app.settings.model';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  public settings: Settings;\r\n  constructor(public appSettings:AppSettings){\r\n      this.settings = this.appSettings.settings;\r\n  } \r\n\r\n  ngOnInit() { }\r\n}","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { OverlayContainer } from '@angular/cdk/overlay';\r\nimport { CustomOverlayContainer } from './theme/utils/custom-overlay-container';\r\nimport { NgxGaugeModule } from 'ngx-gauge';\r\nimport { AgmCoreModule } from '@agm/core';\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\nimport { PERFECT_SCROLLBAR_CONFIG } from 'ngx-perfect-scrollbar';\r\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\r\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\r\n  wheelPropagation: true,\r\n  suppressScrollX: true               \r\n};\r\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\r\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { PipesModule } from './theme/pipes/pipes.module';\r\nimport { routing } from './app.routing';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { PagesComponent } from './pages/pages.component';\r\nimport { BlankComponent } from './pages/blank/blank.component';\r\nimport { SearchComponent } from './pages/search/search.component';\r\nimport { NotFoundComponent } from './pages/errors/not-found/not-found.component';\r\nimport { ErrorComponent } from './pages/errors/error/error.component';\r\nimport { AppSettings } from './app.settings';\r\n\r\nimport { SidenavComponent } from './theme/components/sidenav/sidenav.component';\r\nimport { VerticalMenuComponent } from './theme/components/menu/vertical-menu/vertical-menu.component';\r\nimport { HorizontalMenuComponent } from './theme/components/menu/horizontal-menu/horizontal-menu.component';\r\nimport { BreadcrumbComponent } from './theme/components/breadcrumb/breadcrumb.component';\r\nimport { FlagsMenuComponent } from './theme/components/flags-menu/flags-menu.component';\r\nimport { FullScreenComponent } from './theme/components/fullscreen/fullscreen.component';\r\nimport { ApplicationsComponent } from './theme/components/applications/applications.component';\r\nimport { MessagesComponent } from './theme/components/messages/messages.component';\r\nimport { UserMenuComponent } from './theme/components/user-menu/user-menu.component';\r\nimport { TestComponent } from './test/test.component';\r\nimport { VehicleComponent } from './vehicle/vehicle.component';\r\n\r\nimport { CommonModule } from '@angular/common';\r\nimport { EquipmentComponent } from './equipment/equipment.component';\r\nimport { FarmHealthComponent } from './farm-health/farm-health.component';  \r\nimport { InsurnaceProviderComponent } from './insurnace-provider/insurnace-provider.component';\r\nimport { VehicleServiceComponent } from './vehicle-service/vehicle-service.component';\r\nimport { FarmComponent } from './farm/farm.component';\r\nimport { EquipmentTypesComponent } from './equipment-types/equipment-types.component';\r\nimport { VehicleTypesComponent } from './vehicle-types/vehicle-types.component';\r\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\r\nimport { InfrastructureComponent } from './infrastructure/infrastructure.component';\r\nimport { ScheduledtasksComponent } from './scheduledtasks/scheduledtasks.component';\r\nimport { RepairLogComponent } from './repair-log/repair-log.component';\r\nimport { SrProviderComponent } from './sr-provider/sr-provider.component';\r\nimport { ActiveListComponent } from './active-list/active-list.component';\r\nimport { FaultLogComponent } from './fault-log/fault-log.component';\r\nimport { MaintenanceLogComponent } from './maintenance-log/maintenance-log.component';\r\nimport { FaultreportComponent } from './faultreport/faultreport.component';\r\nimport { FmMainComponent } from './fm-main/fm-main.component';\r\nimport { SectionReportComponent } from './section-report/section-report.component';\r\nimport { SectionComponent } from './section/section.component';\r\nimport { SectionTypeComponent } from './section-type/section-type.component';\r\nimport { AuditLogComponent } from './audit-log/audit-log.component';\r\nimport { EmailSentComponent } from './email-sent/email-sent.component';\r\nimport { NewPasswordComponent } from './new-password/new-password.component';\r\nimport { RequestEmailComponent } from './request-email/request-email.component';\r\nimport { SkillComponent } from './skill/skill.component';\r\nimport { StaffComponent } from './staff/staff.component';\r\nimport { TaskComponent } from './task/task.component';\r\nimport { TaskTypeComponent } from './task-type/task-type.component';\r\nimport { MaintenanceReportComponent } from './maintenance-report/maintenance-report.component';\r\nimport { StaffScheduleComponent } from './staff-schedule/staff-schedule.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { AboutComponent } from './about/about.component';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,     \r\n    FormsModule, \r\n    ReactiveFormsModule,\r\n    CommonModule,\r\n    NgxGaugeModule,\r\n    NgxChartsModule,\r\n    AgmCoreModule.forRoot({\r\n      apiKey: 'AIzaSyAir4tXhx3X-wcdZnhe8TLlo9J2m_AKx6w'\r\n    }), \r\n    PerfectScrollbarModule, \r\n    CalendarModule.forRoot({\r\n      provide: DateAdapter,\r\n      useFactory: adapterFactory\r\n    }),\r\n    SharedModule,\r\n    PipesModule,\r\n    routing\r\n  ],\r\n  declarations: [\r\n    AppComponent,\r\n    PagesComponent,\r\n    BlankComponent,\r\n    SearchComponent,\r\n    NotFoundComponent,\r\n    ErrorComponent,\r\n    SidenavComponent,\r\n    VerticalMenuComponent,\r\n    HorizontalMenuComponent,\r\n    BreadcrumbComponent,\r\n    FlagsMenuComponent,\r\n    FullScreenComponent,\r\n    ApplicationsComponent,\r\n    MessagesComponent,\r\n    UserMenuComponent,\r\n    TestComponent,\r\n    VehicleComponent,\r\n    EquipmentComponent,\r\n    FarmHealthComponent,\r\n    FarmComponent,\r\n    VehicleServiceComponent,\r\n    InsurnaceProviderComponent,\r\n    EquipmentTypesComponent,\r\n    VehicleTypesComponent,\r\n    InfrastructureComponent,\r\n    ScheduledtasksComponent,\r\n    RepairLogComponent,\r\n    SrProviderComponent,\r\n    ActiveListComponent,\r\n    FaultLogComponent,\r\n    MaintenanceLogComponent,\r\n    FaultreportComponent,\r\n    FmMainComponent,\r\n    SectionReportComponent,\r\n    SectionComponent,\r\n    SectionTypeComponent,\r\n    AuditLogComponent,\r\n    EmailSentComponent,\r\n    NewPasswordComponent,\r\n    RequestEmailComponent,\r\n    SkillComponent,\r\n    StaffComponent,\r\n    TaskComponent,\r\n    TaskTypeComponent,\r\n    MaintenanceReportComponent,\r\n    StaffScheduleComponent,\r\n    HomeComponent,\r\n    AboutComponent\r\n  ],\r\n  entryComponents:[\r\n    VerticalMenuComponent\r\n  ],\r\n  providers: [ \r\n    AppSettings,\r\n    { provide: PERFECT_SCROLLBAR_CONFIG, useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG },\r\n    { provide: OverlayContainer, useClass: CustomOverlayContainer }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }","import { Routes, RouterModule, PreloadAllModules  } from '@angular/router';\r\nimport { ModuleWithProviders } from '@angular/core';\r\n\r\nimport { PagesComponent } from './pages/pages.component';\r\nimport { BlankComponent } from './pages/blank/blank.component';\r\nimport { SearchComponent } from './pages/search/search.component';\r\nimport { NotFoundComponent } from './pages/errors/not-found/not-found.component';\r\nimport { ErrorComponent } from './pages/errors/error/error.component';\r\nimport { TestComponent } from './test/test.component';\r\nimport { VehicleComponent } from './vehicle/vehicle.component';\r\nimport { EquipmentComponent } from './equipment/equipment.component';\r\nimport { FarmHealthComponent } from './farm-health/farm-health.component';\r\nimport { FarmComponent } from './farm/farm.component';\r\nimport { InsurnaceProviderComponent } from './insurnace-provider/insurnace-provider.component';\r\nimport { VehicleServiceComponent } from './vehicle-service/vehicle-service.component';\r\nimport { VehicleTypesComponent } from './vehicle-types/vehicle-types.component';\r\nimport { EquipmentTypesComponent } from './equipment-types/equipment-types.component';\r\nimport { ScheduledtasksComponent } from './scheduledtasks/scheduledtasks.component';\r\nimport { RepairLogComponent } from './repair-log/repair-log.component';\r\nimport { InfrastructureComponent } from './infrastructure/infrastructure.component';\r\nimport { ActiveListComponent } from './active-list/active-list.component';\r\nimport { FaultLogComponent } from './fault-log/fault-log.component';\r\nimport { FmMainComponent } from './fm-main/fm-main.component';\r\nimport { MaintenanceLogComponent } from './maintenance-log/maintenance-log.component';\r\nimport { FaultreportComponent } from './faultreport/faultreport.component';\r\nimport { SectionComponent } from './section/section.component';\r\nimport { SectionTypeComponent } from './section-type/section-type.component';\r\nimport { SrProviderComponent } from './sr-provider/sr-provider.component';\r\nimport { AuditLogComponent } from './audit-log/audit-log.component';\r\nimport { EmailSentComponent } from './email-sent/email-sent.component';\r\nimport { NewPasswordComponent } from './new-password/new-password.component';\r\nimport { RequestEmailComponent } from './request-email/request-email.component';\r\nimport { SkillComponent } from './skill/skill.component';\r\nimport { StaffComponent } from './staff/staff.component';\r\nimport { TaskComponent } from './task/task.component';\r\nimport { TaskTypeComponent } from './task-type/task-type.component';\r\nimport { SectionReportComponent } from './section-report/section-report.component';\r\nimport { MaintenanceReportComponent } from './maintenance-report/maintenance-report.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { AboutComponent } from './about/about.component';\r\n\r\nexport const routes: Routes = [\r\n    { \r\n        path: '', \r\n        component: PagesComponent, children: [\r\n            { path: '', component: HomeComponent },\r\n            { path: 'users', loadChildren: () => import('./pages/users/users.module').then(m => m.UsersModule), data: { breadcrumb: 'Users' } },\r\n            { path: 'ui', loadChildren: () => import('./pages/ui/ui.module').then(m => m.UiModule), data: { breadcrumb: 'UI' } },\r\n            { path: 'form-controls', loadChildren: () => import('./pages/form-controls/form-controls.module').then(m => m.FormControlsModule), data: { breadcrumb: 'Form Controls' } },\r\n            { path: 'tables', loadChildren: () => import('./pages/tables/tables.module').then(m => m.TablesModule), data: { breadcrumb: 'Tables' } },\r\n            { path: 'icons', loadChildren: () => import('./pages/icons/icons.module').then(m => m.IconsModule), data: { breadcrumb: 'Material Icons' } },\r\n            { path: 'drag-drop', loadChildren: () => import('./pages/drag-drop/drag-drop.module').then(m => m.DragDropModule), data: { breadcrumb: 'Drag & Drop' } },\r\n\r\n            { path: 'mailbox', loadChildren: () => import('./pages/mailbox/mailbox.module').then(m => m.MailboxModule), data: { breadcrumb: 'Mailbox' } },\r\n            { path: 'chat', loadChildren: () => import('./pages/chat/chat.module').then(m => m.ChatModule), data: { breadcrumb: 'Chat' } },\r\n            { path: 'maps', loadChildren: () => import('./pages/maps/maps.module').then(m => m.MapsModule), data: { breadcrumb: 'Maps' } },\r\n            { path: 'charts', loadChildren: () => import('./pages/charts/charts.module').then(m => m.ChartsModule), data: { breadcrumb: 'Charts' } },\r\n            { path: 'dynamic-menu', loadChildren: () => import('./pages/dynamic-menu/dynamic-menu.module').then(m => m.DynamicMenuModule), data: { breadcrumb: 'Dynamic Menu' }  },          \r\n            { path: 'profile', loadChildren: () => import ('./pages/profile/profile.module').then(m => m.ProfileModule), data: { breadcrumb: 'Profile' } }, \r\n            { path: 'blank', component: BlankComponent, data: { breadcrumb: 'Blank page' } },\r\n            { path: 'search', component: SearchComponent, data: { breadcrumb: 'Search' } },\r\n            { path: 'vehicles', component: VehicleComponent },\r\n            { path: 'equipment', component: EquipmentComponent },\r\n            { path: 'health', component: FarmHealthComponent },\r\n            { path: 'farm', component: FarmComponent },\r\n\r\n            { path: 'service', component: VehicleServiceComponent },\r\n            { path: 'eqTypes', component: EquipmentTypesComponent },\r\n            { path: 'veTypes', component: VehicleTypesComponent },\r\n\r\n            { path: 'schedule', component: ScheduledtasksComponent },\r\n            { path: 'repairlog', component: RepairLogComponent },\r\n            { path: 'infrastructure', component: InfrastructureComponent },\r\n\r\n\r\n\r\n\r\n            { path: 'active-list', component: ActiveListComponent },\r\n            { path: 'fault-log', component: FaultLogComponent },\r\n            { path: 'fm-main', component: FmMainComponent },\r\n            { path: 'maintenance', component: MaintenanceLogComponent },\r\n            { path: 'report', component: FaultreportComponent },\r\n            { path: 'sec-report', component: SectionReportComponent },\r\n            { path: 'section', component: SectionComponent },\r\n            { path: 'sec-type', component: SectionTypeComponent },\r\n            { path: 'sr-prov', component: SrProviderComponent },\r\n            { path: 'audit-log', component: AuditLogComponent },\r\n            { path: 'emailsent', component: EmailSentComponent },\r\n            { path: 'newPass', component: NewPasswordComponent },\r\n            { path: 'reqEmail', component: RequestEmailComponent },\r\n            { path: 'insure', component: InsurnaceProviderComponent },\r\n            { path: 'skill', component: SkillComponent },\r\n            { path: 'staff', component: StaffComponent },\r\n            { path: 'task', component: TaskComponent },\r\n            { path: 'task-type', component: TaskTypeComponent },\r\n            { path: 'maintenance-report', component: MaintenanceReportComponent },\r\n            { path: 'about', component: AboutComponent },\r\n        ]\r\n    },\r\n    { path: 'landing', loadChildren: () => import('./pages/landing/landing.module').then(m => m.LandingModule) },\r\n    { path: 'login', loadChildren: () => import('./pages/login/login.module').then(m => m.LoginModule) },\r\n    { path: 'register', loadChildren: () => import('./pages/register/register.module').then(m => m.RegisterModule) },\r\n    { path: 'error', component: ErrorComponent, data: { breadcrumb: 'Error' } },\r\n    { path: '**', component: NotFoundComponent }\r\n];\r\n\r\nexport const routing: ModuleWithProviders = RouterModule.forRoot(routes, {\r\n    preloadingStrategy: PreloadAllModules,  // <- comment this line for enable lazy load\r\n    // useHash: true\r\n});","export class Settings {\r\n    constructor(public name: string, \r\n                public loadingSpinner: boolean,\r\n                public fixedHeader:boolean,\r\n                public sidenavIsOpened: boolean,\r\n                public sidenavIsPinned: boolean,\r\n                public sidenavUserBlock: boolean,\r\n                public menu: string,\r\n                public menuType: string,\r\n                public theme: string,\r\n                public rtl: boolean,\r\n                public hasFooter: boolean) { }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Settings } from './app.settings.model';\r\n\r\n@Injectable()\r\nexport class AppSettings {\r\n    public settings = new Settings(\r\n        'Gradus',       //theme name\r\n        true,           //loadingSpinner\r\n        true,           //fixedHeader\r\n        true,           //sidenavIsOpened\r\n        true,           //sidenavIsPinned  \r\n        true,           //sidenavUserBlock \r\n        'vertical',     //horizontal , vertical\r\n        'default',      //default, compact, mini\r\n        'green-dark', //indigo-light, teal-light, red-light, blue-dark, green-dark, pink-dark\r\n        false,          // true = rtl, false = ltr\r\n        true            // true = has footer, false = no footer\r\n    )\r\n}\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1ZGl0LWxvZy9hdWRpdC1sb2cuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-audit-log',\r\n  templateUrl: './audit-log.component.html',\r\n  styleUrls: ['./audit-log.component.scss']\r\n})\r\nexport class AuditLogComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  back(){\r\n\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtYWlsLXNlbnQvZW1haWwtc2VudC5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-email-sent',\r\n  templateUrl: './email-sent.component.html',\r\n  styleUrls: ['./email-sent.component.scss']\r\n})\r\nexport class EmailSentComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VxdWlwbWVudC10eXBlcy9lcXVpcG1lbnQtdHlwZXMuY29tcG9uZW50LnNjc3MifQ== */\";","import {  OnInit } from '@angular/core';\r\nimport { Settings } from '../app.settings.model';\r\nimport { AppSettings } from '../app.settings';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Component, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { Vehicles } from '../Models/Vehicles'\r\nimport { Router } from '@angular/router';\r\nexport interface Element {\r\n  Type_ID: string;\r\n  Type: string;\r\n\r\n  }\r\n\r\n@Component({\r\n  selector: 'app-equipment-types',\r\n  templateUrl: './equipment-types.component.html',\r\n  styleUrls: ['./equipment-types.component.scss']\r\n})\r\nexport class EquipmentTypesComponent implements OnInit {\r\n  public displayedColumns = ['Type_ID', 'Type','Actions'];\r\n  public dataSource: any;\r\n  public settings: Settings;\r\n  TypeEdit = \"Truck\";\r\n  show: boolean = false;\r\n  showtable: boolean = true;\r\n  showAdd: boolean = false;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  data: Element[] = [\r\n    {Type_ID: \"1\",Type:\"irrigation\"},\r\n    {Type_ID: \"2\",Type:\"Power tools\"},\r\n\r\n\r\n\r\n  ];\r\n  constructor(public appSettings:AppSettings, public router: Router) {\r\n    this.settings = this.appSettings.settings; \r\n    this.dataSource = new MatTableDataSource<Element>(this.data);\r\n  }\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  changeform(){\r\n    if(this.show == false){\r\n      this.show =true;\r\n      this.showAdd = false;\r\n      this.showtable = false;\r\n    }\r\n  }\r\n  AddVehicleType(){\r\n    if(this.show == true){\r\n         this.show = false;\r\n    }\r\n\r\n    this.showAdd = true;\r\n    this.showtable = false;\r\n  }\r\n\r\n  AddNewVehicleType(){\r\n \r\n  }\r\n\r\n  getTypeDetail(selected: number){\r\n    this.changeform();\r\n  }\r\n  showTable(){\r\n    this.showtable = true;\r\n    this.showAdd = false;\r\n    this.show = false;\r\n  }\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}","export default \".mat-column-is_Active {\\n  word-wrap: break-word !important;\\n  white-space: unset !important;\\n  flex: 0 0 5% !important;\\n  width: 28% !important;\\n  overflow-wrap: break-word;\\n  word-wrap: break-word;\\n  word-break: break-word;\\n  -ms-hyphens: auto;\\n  -webkit-hyphens: auto;\\n  hyphens: auto;\\n}\\n\\nmat-header-cell {\\n  background-color: #308b30;\\n  font-size: 16px;\\n}\\n\\nmat-card {\\n  width: 70%;\\n  align-items: center;\\n  margin-left: 15%;\\n}\\n\\n.m-1 {\\n  color: green;\\n  background-color: #333131;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZXF1aXBtZW50L0Q6XFwzNzBcXEZpbmFsRnJvbnRlbmQvc3JjXFxhcHBcXGVxdWlwbWVudFxcZXF1aXBtZW50LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9lcXVpcG1lbnQvZXF1aXBtZW50LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZ0NBQUE7RUFDQSw2QkFBQTtFQUNBLHVCQUFBO0VBQ0EscUJBQUE7RUFDQSx5QkFBQTtFQUNBLHFCQUFBO0VBRUEsc0JBQUE7RUFFQSxpQkFBQTtFQUVBLHFCQUFBO0VBQ0EsYUFBQTtBQ0RKOztBRElFO0VBQ0UseUJBQUE7RUFDQSxlQUFBO0FDREo7O0FESUE7RUFDSSxVQUFBO0VBQ0EsbUJBQUE7RUFDQSxnQkFBQTtBQ0RKOztBRElBO0VBQ0MsWUFBQTtFQUNDLHlCQUFBO0FDREYiLCJmaWxlIjoic3JjL2FwcC9lcXVpcG1lbnQvZXF1aXBtZW50LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1jb2x1bW4taXNfQWN0aXZlIHtcclxuICAgIHdvcmQtd3JhcDogYnJlYWstd29yZCAhaW1wb3J0YW50O1xyXG4gICAgd2hpdGUtc3BhY2U6IHVuc2V0ICFpbXBvcnRhbnQ7XHJcbiAgICBmbGV4OiAwIDAgNSUgIWltcG9ydGFudDtcclxuICAgIHdpZHRoOiAyOCUgIWltcG9ydGFudDtcclxuICAgIG92ZXJmbG93LXdyYXA6IGJyZWFrLXdvcmQ7XHJcbiAgICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XHJcbiAgXHJcbiAgICB3b3JkLWJyZWFrOiBicmVhay13b3JkO1xyXG4gIFxyXG4gICAgLW1zLWh5cGhlbnM6IGF1dG87XHJcbiAgICAtbW96LWh5cGhlbnM6IGF1dG87XHJcbiAgICAtd2Via2l0LWh5cGhlbnM6IGF1dG87XHJcbiAgICBoeXBoZW5zOiBhdXRvO1xyXG4gIH1cclxuXHJcbiAgbWF0LWhlYWRlci1jZWxse1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDQ4LCAxMzksIDQ4KTtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxufVxyXG5cclxubWF0LWNhcmR7XHJcbiAgICB3aWR0aDogNzAlO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIG1hcmdpbi1sZWZ0OiAxNSU7XHJcbn1cclxuXHJcbi5tLTF7XHJcbiBjb2xvcjogZ3JlZW47XHJcbiAgYmFja2dyb3VuZC1jb2xvcjpyZ2IoNTEsIDQ5LCA0OSk7XHJcbn0iLCIubWF0LWNvbHVtbi1pc19BY3RpdmUge1xuICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQgIWltcG9ydGFudDtcbiAgd2hpdGUtc3BhY2U6IHVuc2V0ICFpbXBvcnRhbnQ7XG4gIGZsZXg6IDAgMCA1JSAhaW1wb3J0YW50O1xuICB3aWR0aDogMjglICFpbXBvcnRhbnQ7XG4gIG92ZXJmbG93LXdyYXA6IGJyZWFrLXdvcmQ7XG4gIHdvcmQtd3JhcDogYnJlYWstd29yZDtcbiAgd29yZC1icmVhazogYnJlYWstd29yZDtcbiAgLW1zLWh5cGhlbnM6IGF1dG87XG4gIC1tb3otaHlwaGVuczogYXV0bztcbiAgLXdlYmtpdC1oeXBoZW5zOiBhdXRvO1xuICBoeXBoZW5zOiBhdXRvO1xufVxuXG5tYXQtaGVhZGVyLWNlbGwge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzA4YjMwO1xuICBmb250LXNpemU6IDE2cHg7XG59XG5cbm1hdC1jYXJkIHtcbiAgd2lkdGg6IDcwJTtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgbWFyZ2luLWxlZnQ6IDE1JTtcbn1cblxuLm0tMSB7XG4gIGNvbG9yOiBncmVlbjtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzMzMzEzMTtcbn0iXX0= */\";","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Settings } from '../app.settings.model';\r\nimport { AppSettings } from '../app.settings';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport {  ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { Vehicles } from '../Models/Vehicles'\r\nimport { Equipment } from '../Models/equipment';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DialogOverviewExampleDialog } from '../pages/ui/dialog/dialog.component';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-equipment',\r\n  templateUrl: './equipment.component.html',\r\n  styleUrls: ['./equipment.component.scss']\r\n})\r\n\r\n\r\n\r\nexport class EquipmentComponent implements OnInit {\r\n\r\npublic displayedColumns = ['Equipment_ID', 'Equipment_type_Description', 'Equipment_Description', 'Infrastructure_Name','Equipment_Condition','Equipment_Cost','Is_Active','Actions'];\r\n  public dataSource: any;\r\n  public settings: Settings;\r\n  show: boolean = false;\r\n  showAdd: boolean = false;\r\n  showtable: boolean = true;\r\n  form: FormGroup;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n data: Equipment[] = [\r\n    {Equipment_ID: \"12321\", Equipment_Condition:\"Fair\", Infrastructure_Name:\"Building 2\", Equipment_type_Description:\"Tools\",Is_Active: \"True\", Equipment_Cost: 1000, Equipment_Description: \"Clamp\"},\r\n    {Equipment_ID: \"12321\", Equipment_Condition:\"Fair\", Infrastructure_Name:\"Building 2\", Equipment_type_Description:\"Tools\",Is_Active: \"True\", Equipment_Cost: 1000, Equipment_Description: \"Sker\"},\r\n    {Equipment_ID: \"12321\", Equipment_Condition:\"Fair\", Infrastructure_Name:\"Building 2\", Equipment_type_Description:\"Tools\",Is_Active: \"True\", Equipment_Cost: 1000, Equipment_Description: \"Sker\"},\r\n    {Equipment_ID: \"12321\", Equipment_Condition:\"Fair\", Infrastructure_Name:\"Building 2\", Equipment_type_Description:\"Tools\",Is_Active: \"True\", Equipment_Cost: 1000, Equipment_Description: \"Sker\"},\r\n    {Equipment_ID: \"12321\", Equipment_Condition:\"Fair\", Infrastructure_Name:\"Building 2\", Equipment_type_Description:\"Tools\",Is_Active: \"True\", Equipment_Cost: 1000, Equipment_Description: \"Sker\"},\r\n\r\n\r\n  ];\r\n  \r\n types: string[] = [\r\n   \"Tools\",\"Planting tools\",\"Car tools\"\r\n ]\r\n\r\n condition: string[] = [\r\n  \"Poor\",\"Fair\",\"Good\"\r\n]\r\n\r\ninfrastructures: string[] = [\r\n  \"Building 1\", \"Building 2\"\r\n]\r\nactive: string[] = [\r\n  \"True\", \"False\"\r\n]\r\n\r\n\r\nequipmentEdit: Equipment;\r\nequipmentAdd: Equipment;\r\nAdminPriv: string;\r\nselectedValue: string;\r\nconditionSelect: string;\r\nselectedActive: string;\r\ntypeSelect: String;\r\nInfrastructureSelect: string;\r\n  constructor(public appSettings:AppSettings,public router: Router, private formbuilder: FormBuilder, public dialog: MatDialog) {\r\n    this.settings = this.appSettings.settings; \r\n    this.dataSource = new MatTableDataSource<Equipment>(this.data);\r\n\r\n    this.form = this.formbuilder.group({\r\n      'Description':['', Validators.compose([Validators.required,Validators.maxLength(50)])],\r\n      'Cost':['', Validators.compose([Validators.required,Validators.maxLength(10)])],\r\n   \r\n\r\n      Type : new FormControl,\r\n      Condition : new FormControl,\r\n      Infras : new FormControl,\r\n\r\n\r\n\r\n    })\r\n  }\r\n  ngOnInit(): void {\r\n     this.AdminPriv = localStorage.getItem(\"PrivelageLevel\");\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  changeform(){\r\n    if(this.show == false){\r\n      this.show =true;\r\n      this.showAdd = false;\r\n      this.showtable = false;\r\n    }\r\n  }\r\n\r\n  getEquipmentDetail(Id: number){\r\n\r\n    this.equipmentEdit = new Equipment;\r\n    this.equipmentEdit.Equipment_type_Description = \"Tools\";\r\n    this.equipmentEdit.Equipment_Condition = \"Good\";\r\n    this.equipmentEdit.Equipment_Cost = 1000;\r\n \r\n    this.equipmentEdit.Infrastructure_Name = \"Building 1\";\r\n    this.equipmentEdit.Equipment_Description = \"Sker\";\r\n    this.equipmentEdit.Is_Active = \"False\";\r\n  \r\n    this.selectedValue = this.equipmentEdit.Equipment_type_Description;\r\n    this.InfrastructureSelect = this.equipmentEdit.Infrastructure_Name;\r\n    this.conditionSelect = this.equipmentEdit.Equipment_Condition;\r\n    this.selectedActive = this.equipmentEdit.Is_Active;\r\n\r\n    this.changeform();\r\n  }\r\n\r\n  AddEquipment(){\r\n    if(this.show == true){\r\n         this.show = false;\r\n    }\r\n    this.equipmentAdd = new Equipment;\r\n    this.showAdd = true;\r\n    this.showtable = false;\r\n  }\r\n\r\n  PutEquipment(){\r\n    alert(\"Done\");\r\n  }\r\n  addNewEquipment(){\r\n    const dialogref = this.dialog.open(DialogOverviewExampleDialog);\r\n  }\r\n\r\n  deleteEquipment(){\r\n    if(confirm(\"Are you sure to delete \"+name)) {\r\n      console.log(\"Implement delete functionality here\");\r\n    }\r\n  }\r\n\r\n  showTable(){\r\n    this.showtable = true;\r\n    this.showAdd = false;\r\n    this.show = false;\r\n  }\r\n  Download(){\r\n  alert(\"Download started\");\r\n  }\r\n  LoadTypes(){\r\n    this.router.navigateByUrl(\"eqTypes\");\r\n  }\r\n  random(){\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","export default \"mat-card {\\n  line-height: 1;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZmFybS1oZWFsdGgvRDpcXDM3MFxcRmluYWxGcm9udGVuZC9zcmNcXGFwcFxcZmFybS1oZWFsdGhcXGZhcm0taGVhbHRoLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9mYXJtLWhlYWx0aC9mYXJtLWhlYWx0aC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGNBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL2Zhcm0taGVhbHRoL2Zhcm0taGVhbHRoLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWNhcmR7XHJcbiAgICBsaW5lLWhlaWdodDogMTtcclxufSIsIm1hdC1jYXJkIHtcbiAgbGluZS1oZWlnaHQ6IDE7XG59Il19 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { Settings } from '../app.settings.model';\r\nimport { AppSettings } from '../app.settings';\r\n\r\n\r\n\r\n\r\nexport const multi = [\r\n  {\r\n    name: 'Total score',\r\n    series: [\r\n      {\r\n        name: 'January',\r\n        value: 60\r\n      },\r\n      {\r\n        name: 'February',\r\n        value: 40\r\n      },\r\n      {\r\n        name: 'March',\r\n        value: 30\r\n      },\r\n      {\r\n        name: 'April',\r\n        value: 54\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    name: 'Vehicle score',\r\n    series: [\r\n      {\r\n        name: 'January',\r\n        value: 52\r\n      },\r\n      {\r\n        name: 'February',\r\n        value: 30\r\n      },\r\n      {\r\n        name: 'March',\r\n        value: 41\r\n      },\r\n      {\r\n        name: 'April',\r\n        value: 30\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    name: 'Fault score',\r\n    series: [\r\n      {\r\n        name: 'January',\r\n        value: 30\r\n      },\r\n      {\r\n        name: 'February',\r\n        value: 45\r\n      },\r\n      {\r\n        name: 'March',\r\n        value: 35\r\n      },\r\n      {\r\n        name: 'April',\r\n        value: 80\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    name: 'Maintenance score',\r\n    series: [\r\n      {\r\n        name: 'January',\r\n        value: 10\r\n      },\r\n      {\r\n        name: 'February',\r\n        value: 20\r\n      },\r\n      {\r\n        name: 'March',\r\n        value: 28\r\n      },\r\n      {\r\n        name: 'April',\r\n        value: 40\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    name: 'Vehicle score',\r\n    series: [\r\n      {\r\n        name: 'January',\r\n        value: 42\r\n      },\r\n      {\r\n        name: 'February',\r\n        value: 50\r\n      },\r\n      {\r\n        name: 'March',\r\n        value: 51\r\n      },\r\n      {\r\n        name: 'April',\r\n        value: 60\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@Component({\r\n  selector: 'app-farm-health',\r\n  templateUrl: './farm-health.component.html',\r\n  styleUrls: ['./farm-health.component.scss']\r\n})\r\n\r\nexport class FarmHealthComponent implements OnInit {\r\n  gaugeType = \"arch\";\r\n  gaugeValue = 28.3;\r\n  gaugeLabel = \"Overall Health\";\r\n  gaugeAppendText = \"/100\";\r\n\r\n  customColors = (value) => {\r\n    console.log(value);\r\n    return \"#ff0000\";\r\n  }\r\n  vehicleLabel = \"Vehicle Score\";\r\n  taskLabel = \"Task Score\";\r\n  maintLabel = \"Maintenance Score\";\r\n  vehicleValue = 50;\r\n  VehicleColor: any;\r\n  faultLabel = \"Fault Score\";\r\n  public single: any[];\r\n  public multi: any[];\r\n  public showXAxis = true;\r\n  public showYAxis = true;\r\n  public gradient = false;\r\n  public showLegend = false;\r\n  public showXAxisLabel = true;\r\n  public xAxisLabel = 'Last 4 months';\r\n  public showYAxisLabel = true;\r\n  public yAxisLabel = 'Scores';\r\n  public colorScheme = {\r\n    domain: ['#7CFC00', '#D22E2E', '#378D3B', '#0096A6', '#F47B00', '#606060']\r\n  }; \r\n  public autoScale = true;\r\n  public settings: Settings;\r\n\r\n  constructor(public appSettings:AppSettings) {\r\n    this.settings = this.appSettings.settings; \r\n    Object.assign(this, {multi})   \r\n  }\r\n\r\n  ngOnInit(): void {\r\n \r\n  }\r\n\r\n  Download(selected: number){\r\n    alert(\"Download started\");\r\n  }\r\n\r\n}\r\n","export default \"mat-header-cell {\\n  background-color: #308b30;\\n  font-size: 16px;\\n}\\n\\nmat-card {\\n  width: 70%;\\n  align-items: center;\\n  margin-left: 15%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZmFybS9EOlxcMzcwXFxGaW5hbEZyb250ZW5kL3NyY1xcYXBwXFxmYXJtXFxmYXJtLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9mYXJtL2Zhcm0uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSx5QkFBQTtFQUNBLGVBQUE7QUNDSjs7QURDQTtFQUNJLFVBQUE7RUFDQSxtQkFBQTtFQUNBLGdCQUFBO0FDRUoiLCJmaWxlIjoic3JjL2FwcC9mYXJtL2Zhcm0uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtaGVhZGVyLWNlbGx7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoNDgsIDEzOSwgNDgpO1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG59XHJcbm1hdC1jYXJke1xyXG4gICAgd2lkdGg6IDcwJTtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBtYXJnaW4tbGVmdDogMTUlO1xyXG59IiwibWF0LWhlYWRlci1jZWxsIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzMwOGIzMDtcbiAgZm9udC1zaXplOiAxNnB4O1xufVxuXG5tYXQtY2FyZCB7XG4gIHdpZHRoOiA3MCU7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG1hcmdpbi1sZWZ0OiAxNSU7XG59Il19 */\";","import { Component, OnInit, ViewChild} from '@angular/core';\r\nimport { Settings } from '../app.settings.model';\r\nimport { AppSettings } from '../app.settings';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport {Farm} from '../Models/Farm'\r\n\r\nexport interface Element {\r\n  Farm_ID:string;\r\n  Farm_Type:string;\r\n  Farm_Size:number;\r\n  Farm_Email:string;\r\n  Farm_Address:string;\r\n  Farm_Name:string;\r\n  Province:string;\r\n  Farm_Number:string;\r\n  is_Active: string;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-farm',\r\n  templateUrl: './farm.component.html',\r\n  styleUrls: ['./farm.component.scss']\r\n})\r\nexport class FarmComponent implements OnInit {\r\n\r\n  public displayedColumns =['Farm ID','Farm Type','Farm Name','Farm Size','Farm Address','Province','Farm Email','Farm Number','Active','Actions'];\r\n  public dataSource: any;\r\n  public settings: Settings;\r\n  show: boolean = false;\r\n  showAdd: boolean = false;\r\n  showF: boolean = false;\r\n  showFAdd: boolean = false;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  data: Element[]=[\r\n    {Farm_ID:\"1\",Farm_Type:\"Cattle-Beef\",Farm_Name:\"Blue Oak\",Farm_Address:\"ewwefw\",Province:\"Gauteng\",Farm_Size:20000,Farm_Email:\"erihbfeh\",Farm_Number:\"099\",is_Active:\"Yes\"},\r\n    {Farm_ID:\"2\",Farm_Type:\"Field Crops\",Farm_Name:\"Ridgeback\",Farm_Address:\"wefwefwe\",Province:\"KwaZulu Natal\",Farm_Size:20000,Farm_Email:\"erihbfeh\",Farm_Number:\"099\",is_Active:\"Yes\"},\r\n    {Farm_ID:\"3\",Farm_Type:\"Fruit\",Farm_Name:\"Vrede En Rust\",Farm_Address:\"weqweefc\",Province:\"Eastern Cape\",Farm_Size:20000,Farm_Email:\"erihbfeh\",Farm_Number:\"099\",is_Active:\"Yes\"},\r\n    {Farm_ID:\"4\",Farm_Type:\"Game\",Farm_Name:\"Mooi Rivier\",Farm_Address:\"dsfgc\",Province:\"Free State\",Farm_Size:20000,Farm_Email:\"erihbfeh\",Farm_Number:\"099\",is_Active:\"Yes\"},\r\n    {Farm_ID:\"5\",Farm_Type:\"Gardening\",Farm_Name:\"Tafelburg\",Farm_Address:\"sfwef\",Province:\"Western Cape\",Farm_Size:20000,Farm_Email:\"erihbfeh\",Farm_Number:\"099\",is_Active:\"Yes\"},\r\n    {Farm_ID:\"6\",Farm_Type:\"Poultry\",Farm_Name:\"Red Mountain\",Farm_Address:\"wewer\",Province:\"North West\",Farm_Size:20000,Farm_Email:\"erihbfeh\",Farm_Number:\"099\",is_Active:\"Yes\"}\r\n  ];\r\n\r\n  farmTypes:string[]=[\r\n    'Cattle-Beef', 'Cattle-Diary', 'Field Crops', 'Forage and Grazing Crops', 'Fruit', 'Game','Gardening', 'Goats', 'Poultry',\r\n    'Sheep', 'Swine', 'Tree Crops', 'Vegetables'\r\n  ]\r\n\r\n  provinces:string[]=[\r\n    'Gauteng','KwaZulu Natal', 'Free State', 'North West','Limpopo','Eastern Cape','Western Cape', 'Northern Cape','Mpumalanga'\r\n  ];\r\n\r\n  FarmAdd:Farm;\r\n  FarmEdit:Farm;\r\n  AdminPriv: string;\r\n  selectedValue: string;\r\n  provinceSelect: string;\r\n  showtable: boolean = true;\r\n  constructor(public appSettings:AppSettings) { \r\n    this.settings = this.appSettings.settings; \r\n    this.dataSource = new MatTableDataSource<Element>(this.data);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.AdminPriv = localStorage.getItem(\"PrivelageLevel\");\r\n  }\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  changeform(){\r\n    if(this.show == false){\r\n      this.show =true;\r\n      this.showAdd = false;\r\n      this.showtable = false;\r\n    }\r\n  }\r\n\r\n  getFarmInfo(Id:number){\r\n    this.FarmEdit= new Farm;\r\n    this.FarmEdit.Active = \"True\";\r\n    this.FarmEdit.Farm_Type = \"Cattle-Beef\";\r\n    this.FarmEdit.Farm_Address= \"asdas\";\r\n    this.FarmEdit.Farm_Number= \"869876785\";\r\n    this.FarmEdit.Farm_Email= \"Hilux@gmail.com\";\r\n    this.FarmEdit.Farm_Name= \"Hentie\";\r\n    this.FarmEdit.Farm_Size= 4456789;\r\n    this.FarmEdit.Active= \"True\";\r\n    this.FarmEdit.Province=\"Gauteng\";\r\n    this.FarmEdit.Farm_Address=\"1123 Swart Road, Stellenbosch\";\r\n\r\n    this.FarmEdit.Foreman_Email=\"foreman@gmail.com\";\r\n    this.FarmEdit.Foreman_Name=\"Fore Man\";\r\n    \r\n    \r\n    this.selectedValue = this.FarmEdit.Farm_Type;\r\n    this.provinceSelect=this.FarmEdit.Province;\r\n\r\n    this.changeform();\r\n  }\r\n\r\n  addFarm(){\r\n    if(this.show == true){\r\n      this.show = false;\r\n    }\r\n    this.FarmAdd = new Farm;\r\n    this.showAdd = true;\r\n    this.showtable = false;\r\n    this.showF = false;\r\n    this.showFAdd = false;\r\n  }\r\n\r\n  putFarm(){\r\n    alert(\"Done\");\r\n  }\r\n\r\n  deleteFarm(){\r\n    if(confirm(\"Are you sure to delete \"+name)) {\r\n      console.log(\"Implement delete functionality here\");\r\n    }\r\n  }\r\n\r\n  showTable(){\r\n    this.showtable = true;\r\n    this.showAdd = false;\r\n    this.show = false;\r\n    this.showF = false;    \r\n    this.showFAdd = false;  \r\n  }\r\n  // Download(){\r\n\r\n  // }\r\n\r\n  Foreman(selected: number){\r\n    if(selected == 1){\r\n      this.showtable = false;\r\n      this.showAdd = false;\r\n      this.show = false;\r\n      this.showF = true;\r\n      this.showFAdd = false;\r\n    }\r\n    \r\n    if(selected == 2){\r\n      this.showtable = false;\r\n      this.showAdd = false;\r\n      this.show = false;\r\n      this.showF = false;\r\n      this.showFAdd =true;\r\n    }\r\n\r\n    if(selected == 3){\r\n      this.showtable = false;\r\n      this.showAdd = false;\r\n      this.show = false;\r\n      this.showF = true;\r\n      this.showFAdd = false;\r\n    }\r\n  }\r\n\r\n  addForeman(){\r\n\r\n  }\r\n\r\n\r\n  putForeman(){\r\n\r\n  }\r\n\r\n  deleteForeman(){\r\n    \r\n  }\r\n\r\n  form(){\r\n    \r\n  }\r\n}","export default \".mat-column-is_Active {\\n  word-wrap: break-word !important;\\n  white-space: unset !important;\\n  flex: 0 0 5% !important;\\n  width: 28% !important;\\n  overflow-wrap: break-word;\\n  word-wrap: break-word;\\n  word-break: break-word;\\n  -ms-hyphens: auto;\\n  -webkit-hyphens: auto;\\n  hyphens: auto;\\n}\\n\\nmat-header-cell {\\n  background-color: #308b30;\\n  font-size: 16px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZmF1bHQtbG9nL0Q6XFwzNzBcXEZpbmFsRnJvbnRlbmQvc3JjXFxhcHBcXGZhdWx0LWxvZ1xcZmF1bHQtbG9nLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9mYXVsdC1sb2cvZmF1bHQtbG9nLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZ0NBQUE7RUFDQSw2QkFBQTtFQUNBLHVCQUFBO0VBQ0EscUJBQUE7RUFDQSx5QkFBQTtFQUNBLHFCQUFBO0VBRUEsc0JBQUE7RUFFQSxpQkFBQTtFQUVBLHFCQUFBO0VBQ0EsYUFBQTtBQ0RKOztBRElFO0VBQ0UseUJBQUE7RUFDQSxlQUFBO0FDREoiLCJmaWxlIjoic3JjL2FwcC9mYXVsdC1sb2cvZmF1bHQtbG9nLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1jb2x1bW4taXNfQWN0aXZlIHtcclxuICAgIHdvcmQtd3JhcDogYnJlYWstd29yZCAhaW1wb3J0YW50O1xyXG4gICAgd2hpdGUtc3BhY2U6IHVuc2V0ICFpbXBvcnRhbnQ7XHJcbiAgICBmbGV4OiAwIDAgNSUgIWltcG9ydGFudDtcclxuICAgIHdpZHRoOiAyOCUgIWltcG9ydGFudDtcclxuICAgIG92ZXJmbG93LXdyYXA6IGJyZWFrLXdvcmQ7XHJcbiAgICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XHJcbiAgXHJcbiAgICB3b3JkLWJyZWFrOiBicmVhay13b3JkO1xyXG4gIFxyXG4gICAgLW1zLWh5cGhlbnM6IGF1dG87XHJcbiAgICAtbW96LWh5cGhlbnM6IGF1dG87XHJcbiAgICAtd2Via2l0LWh5cGhlbnM6IGF1dG87XHJcbiAgICBoeXBoZW5zOiBhdXRvO1xyXG4gIH1cclxuXHJcbiAgbWF0LWhlYWRlci1jZWxse1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDQ4LDEzOSw0OCk7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbn0iLCIubWF0LWNvbHVtbi1pc19BY3RpdmUge1xuICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQgIWltcG9ydGFudDtcbiAgd2hpdGUtc3BhY2U6IHVuc2V0ICFpbXBvcnRhbnQ7XG4gIGZsZXg6IDAgMCA1JSAhaW1wb3J0YW50O1xuICB3aWR0aDogMjglICFpbXBvcnRhbnQ7XG4gIG92ZXJmbG93LXdyYXA6IGJyZWFrLXdvcmQ7XG4gIHdvcmQtd3JhcDogYnJlYWstd29yZDtcbiAgd29yZC1icmVhazogYnJlYWstd29yZDtcbiAgLW1zLWh5cGhlbnM6IGF1dG87XG4gIC1tb3otaHlwaGVuczogYXV0bztcbiAgLXdlYmtpdC1oeXBoZW5zOiBhdXRvO1xuICBoeXBoZW5zOiBhdXRvO1xufVxuXG5tYXQtaGVhZGVyLWNlbGwge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzA4YjMwO1xuICBmb250LXNpemU6IDE2cHg7XG59Il19 */\";","import {  OnInit } from '@angular/core';\r\nimport { Settings } from 'src/app/app.settings.model';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Component, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { Faults } from 'src/app/Models/Fault';\r\n\r\nexport interface Element {\r\n    Fault_ID: string;\r\n    Fault_Description: string;\r\n    Fault_Start_Date: string;\r\n    Fault_End_Date: string;\r\n    Fault_Type_Description: string;\r\n    Status_Description: string;\r\n    Importance_Description: string;\r\n  }\r\n\r\n@Component({\r\n  selector: 'app-Fault-log',\r\n  templateUrl: './fault-log.component.html',\r\n  styleUrls: ['./fault-log.component.scss']\r\n})\r\nexport class FaultLogComponent implements OnInit {\r\n\r\n  public displayedColumns = ['Fault_ID', 'Fault_Type_Description', 'Fault_Description', 'Fault_Start_Date','Fault_End_Date','Status_Description','Importance_Description','Actions'];\r\n  public dataSource: any;\r\n  public settings: Settings;\r\n  show: boolean = false;\r\n  showAdd: boolean = false;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n data: Element[] = [\r\n    {Fault_ID: \"1\",Fault_Type_Description: \"Infrastructure\", Fault_Description: 'Check Barn wiring', Fault_Start_Date: \"05/07/2020\" , Fault_End_Date: \"05/07/2020\", Status_Description: 'In Progress', Importance_Description: 'Medium'},\r\n    {Fault_ID: \"2\",Fault_Type_Description: \"Equipment\", Fault_Description: 'Clean Ploughs', Fault_Start_Date: \"02/01/2020\" , Fault_End_Date: \"05/01/2020\", Status_Description: 'Completed', Importance_Description: 'High'},\r\n    {Fault_ID: \"3\",Fault_Type_Description: \"Other\", Fault_Description: 'Sweep Barn', Fault_Start_Date: \"22/05/2020\" , Fault_End_Date: \"22/05/2020\", Status_Description: 'Incomplete', Importance_Description: 'Low'},\r\n  ];\r\n  \r\n types: string[] = [\r\n  \"Wiring\",\"Structural\",\"Security\"\r\n ]\r\n\r\n infrastructures: string[] = [\r\n   \"Building1\",\"Building2\"\r\n ]\r\n\r\n staff: string[] = [\r\n   \"John\", \"Petrus\"\r\n ]\r\n\r\n equipment: string[] =[\r\n   \"Trailer\", \"Plow\"\r\n ]\r\n\r\n status: string[] =[\r\n  \"In Progress\", \"Completed\", \"Pending\"\r\n]\r\n\r\nimportance: string[] =[\r\n  \"High\", \"Low\", \"Medium\"\r\n]\r\n\r\nFaultEdit: Faults;\r\nFaultAdd: Faults;\r\nAdminPriv: string;\r\nselectedValue: string;\r\nEquipmentSelect: string;\r\nStatusSelect: String;\r\nImportanceSelect: string;\r\nInfrastructureSelect: string;\r\nStaffSelect: string;\r\n  constructor(public appSettings:AppSettings) {\r\n    this.settings = this.appSettings.settings; \r\n    this.dataSource = new MatTableDataSource<Element>(this.data);\r\n  }\r\n  ngOnInit(): void {\r\n     this.AdminPriv = localStorage.getItem(\"PrivelageLevel\");\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  changeform(){\r\n    if(this.show == false){\r\n      this.show =true;\r\n      this.showAdd = false;\r\n    }\r\n  }\r\n\r\n  getFaultDetail(Id: number){\r\n    //Implement function to pupulate edit field and populate vehicle edit\\\r\n    this.FaultEdit = new Faults;\r\n    this.FaultEdit.Fault_Description = \"Clean Ploughs\";\r\n    this.FaultEdit.Fault_Type_Description = \"Equipment\";\r\n    this.FaultEdit.Infrastructure_Description= \"Barn\";\r\n    this.FaultEdit.Equipment_Description= \"Plough\";\r\n    this.FaultEdit.Status_Description= \"Active\";\r\n    this.FaultEdit.Importance_Description= \"High\";\r\n    this.FaultEdit.Staff_Name= \"John\";\r\n    this.FaultEdit.Fault_Start_Date= \"22/07/2020\";\r\n    this.FaultEdit.Fault_End_Date= \"25/07/2020\";\r\n  \r\n    this.selectedValue = this.FaultEdit.Fault_Type_Description;\r\n    this.EquipmentSelect = this.FaultEdit.Equipment_Description;\r\n    this.InfrastructureSelect = this.FaultEdit.Infrastructure_Description;\r\n    this.StatusSelect = this.FaultEdit.Status_Description;\r\n    this.ImportanceSelect = this.FaultEdit.Importance_Description;\r\n    this.StaffSelect = this.FaultEdit.Staff_Name;\r\n\r\n\r\n    this.changeform();\r\n  }\r\n\r\n  AddFault(){\r\n    if(this.show == true){\r\n         this.show = false;\r\n    }\r\n    this.FaultAdd = new Faults;\r\n    this.showAdd = true;\r\n  }\r\n\r\n  PutFault(){\r\n    alert(\"Done\");\r\n  }\r\n\r\n  deleteFault(){\r\n    alert(\"Are you sure\");\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZhdWx0cmVwb3J0L2ZhdWx0cmVwb3J0LmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-faultreport',\r\n  templateUrl: './faultreport.component.html',\r\n  styleUrls: ['./faultreport.component.scss']\r\n})\r\nexport class FaultreportComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZtLW1haW4vZm0tbWFpbi5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-fm-main',\r\n  templateUrl: './fm-main.component.html',\r\n  styleUrls: ['./fm-main.component.scss']\r\n})\r\nexport class FmMainComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  FMReport()\r\n  {\r\n\r\n  }\r\n\r\n  ActiveList()\r\n  {\r\n    \r\n  }\r\n\r\n\r\n}\r\n","export default \".block {\\n  width: 45%;\\n  margin-bottom: 50px;\\n  float: left;\\n}\\n\\nmat-card {\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9EOlxcMzcwXFxGaW5hbEZyb250ZW5kL3NyY1xcYXBwXFxob21lXFxob21lLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9ob21lL2hvbWUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxVQUFBO0VBQ0EsbUJBQUE7RUFDQSxXQUFBO0FDQ0o7O0FERUE7RUFBVSxrQkFBQTtBQ0VWIiwiZmlsZSI6InNyYy9hcHAvaG9tZS9ob21lLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJsb2Nre1xyXG4gICAgd2lkdGg6IDQ1JTtcclxuICAgIG1hcmdpbi1ib3R0b206IDUwcHg7XHJcbiAgICBmbG9hdDogbGVmdDtcclxufVxyXG5cclxubWF0LWNhcmQge3RleHQtYWxpZ246IGNlbnRlcn0iLCIuYmxvY2sge1xuICB3aWR0aDogNDUlO1xuICBtYXJnaW4tYm90dG9tOiA1MHB4O1xuICBmbG9hdDogbGVmdDtcbn1cblxubWF0LWNhcmQge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59Il19 */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","export default \".mat-column-is_Active {\\n  word-wrap: break-word !important;\\n  white-space: unset !important;\\n  flex: 0 0 5% !important;\\n  width: 28% !important;\\n  overflow-wrap: break-word;\\n  word-wrap: break-word;\\n  word-break: break-word;\\n  -ms-hyphens: auto;\\n  -webkit-hyphens: auto;\\n  hyphens: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaW5mcmFzdHJ1Y3R1cmUvRDpcXDM3MFxcRmluYWxGcm9udGVuZC9zcmNcXGFwcFxcaW5mcmFzdHJ1Y3R1cmVcXGluZnJhc3RydWN0dXJlLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9pbmZyYXN0cnVjdHVyZS9pbmZyYXN0cnVjdHVyZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdDQUFBO0VBQ0EsNkJBQUE7RUFDQSx1QkFBQTtFQUNBLHFCQUFBO0VBQ0EseUJBQUE7RUFDQSxxQkFBQTtFQUVBLHNCQUFBO0VBRUEsaUJBQUE7RUFFQSxxQkFBQTtFQUNBLGFBQUE7QUNESiIsImZpbGUiOiJzcmMvYXBwL2luZnJhc3RydWN0dXJlL2luZnJhc3RydWN0dXJlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1jb2x1bW4taXNfQWN0aXZlIHtcclxuICAgIHdvcmQtd3JhcDogYnJlYWstd29yZCAhaW1wb3J0YW50O1xyXG4gICAgd2hpdGUtc3BhY2U6IHVuc2V0ICFpbXBvcnRhbnQ7XHJcbiAgICBmbGV4OiAwIDAgNSUgIWltcG9ydGFudDtcclxuICAgIHdpZHRoOiAyOCUgIWltcG9ydGFudDtcclxuICAgIG92ZXJmbG93LXdyYXA6IGJyZWFrLXdvcmQ7XHJcbiAgICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XHJcbiAgXHJcbiAgICB3b3JkLWJyZWFrOiBicmVhay13b3JkO1xyXG4gIFxyXG4gICAgLW1zLWh5cGhlbnM6IGF1dG87XHJcbiAgICAtbW96LWh5cGhlbnM6IGF1dG87XHJcbiAgICAtd2Via2l0LWh5cGhlbnM6IGF1dG87XHJcbiAgICBoeXBoZW5zOiBhdXRvO1xyXG4gIH0iLCIubWF0LWNvbHVtbi1pc19BY3RpdmUge1xuICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQgIWltcG9ydGFudDtcbiAgd2hpdGUtc3BhY2U6IHVuc2V0ICFpbXBvcnRhbnQ7XG4gIGZsZXg6IDAgMCA1JSAhaW1wb3J0YW50O1xuICB3aWR0aDogMjglICFpbXBvcnRhbnQ7XG4gIG92ZXJmbG93LXdyYXA6IGJyZWFrLXdvcmQ7XG4gIHdvcmQtd3JhcDogYnJlYWstd29yZDtcbiAgd29yZC1icmVhazogYnJlYWstd29yZDtcbiAgLW1zLWh5cGhlbnM6IGF1dG87XG4gIC1tb3otaHlwaGVuczogYXV0bztcbiAgLXdlYmtpdC1oeXBoZW5zOiBhdXRvO1xuICBoeXBoZW5zOiBhdXRvO1xufSJdfQ== */\";","import {  OnInit } from '@angular/core';\r\nimport { Settings } from '../app.settings.model';\r\nimport { AppSettings } from '../app.settings';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Component, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { Infrastructures } from '../Models/Infrastructures'\r\n\r\nexport interface Element {\r\nInfrastructure_ID: string;\r\nInfrastructure_Type_Description: string;\r\nInfrastructure_Name: string;\r\nInfrastructure_Location: string;\r\nSection_Name: string;\r\nInfrastructure_Size: string;\r\nis_Active: boolean;\r\n}\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-infrastructure',\r\n  templateUrl: './infrastructure.component.html',\r\n  styleUrls: ['./infrastructure.component.scss']\r\n})\r\nexport class InfrastructureComponent implements OnInit {\r\n  public displayedColumns = ['Infrastructure_ID', 'Infrastructure_Name', 'Infrastructure_Location','Infrastructure_Size', 'Section_Name', 'Infrastructure_Type_Description', 'is_Active','Actions'];\r\n  public dataSource: any;\r\n  public settings: Settings;\r\n  show: boolean = false;\r\n  showAdd: boolean = false;\r\n  hideTable: boolean = true;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n data: Element[] = [\r\n    {Infrastructure_ID: \"1\",Infrastructure_Name: \"South Coop\", Infrastructure_Location: 'Next to Brown Barn',Infrastructure_Size: \"30\" ,Section_Name: \"Veld 2\", Infrastructure_Type_Description: 'Coop', is_Active: true},\r\n    {Infrastructure_ID: \"2\",Infrastructure_Name: \"Brown Barn\", Infrastructure_Location: 'Next to Red Barn',Infrastructure_Size: \"100\" ,Section_Name: \"Veld 1\", Infrastructure_Type_Description: 'Barn', is_Active: true},\r\n    {Infrastructure_ID: \"3\",Infrastructure_Name: \"North Coop\", Infrastructure_Location: 'Next to Red Barn',Infrastructure_Size: \"30\" ,Section_Name: \"Veld 2\", Infrastructure_Type_Description: 'Coop', is_Active: true},\r\n    {Infrastructure_ID: \"4\",Infrastructure_Name: \"Main House\", Infrastructure_Location: 'Next to Shed',Infrastructure_Size: \"120\" ,Section_Name: \"Veld 1\", Infrastructure_Type_Description: 'House', is_Active: true},   \r\n    {Infrastructure_ID: \"5\",Infrastructure_Name: \"Staff House\", Infrastructure_Location: 'Next to Shed',Infrastructure_Size: \"300\" ,Section_Name: \"Veld 1\", Infrastructure_Type_Description: 'House', is_Active: true},\r\n    {Infrastructure_ID: \"6\",Infrastructure_Name: \"Red Barn\", Infrastructure_Location: 'Next to Red Barn',Infrastructure_Size: \"100\" ,Section_Name: \"Veld 2\", Infrastructure_Type_Description: 'Barn', is_Active: true},   \r\n    {Infrastructure_ID: \"7\",Infrastructure_Name: \"Shed\", Infrastructure_Location: 'Next to Main House',Infrastructure_Size: \"10\" ,Section_Name: \"Veld 2\", Infrastructure_Type_Description: 'Barn', is_Active: true}\r\n\r\n  ];\r\n  \r\n types: string[] = [\r\n   \"Barn\",\"House\",\"Coop\"\r\n ]\r\n\r\n sections: string[] = [\r\n   \"Veld 1\", \"Veld 2\"\r\n ]\r\n\r\nInfrastructureEdit: Infrastructures;\r\nInfrastructureAdd: Infrastructures;\r\nAdminPriv: string;\r\nselectedValue: string;\r\nSectionSelect: string;\r\n\r\nconstructor(public appSettings:AppSettings) {\r\n  this.settings = this.appSettings.settings; \r\n  this.dataSource = new MatTableDataSource<Element>(this.data);\r\n}\r\n  ngOnInit(): void {\r\n     this.AdminPriv = localStorage.getItem(\"PrivelageLevel\");\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  changeform(){\r\n    if(this.show == false){\r\n      this.show =true;\r\n      this.showAdd = false;\r\n      this.hideTable = false;\r\n    }\r\n  }\r\n\r\n  getInfrastructureDetail(Id: number){\r\n    //Implement function to pupulate edit field and populate vehicle edit\\\r\n    this.InfrastructureEdit = new Infrastructures;\r\n    this.InfrastructureEdit.Active = true;\r\n    this.InfrastructureEdit.Infrastructure_Type = \"Coop\";\r\n    this.InfrastructureEdit.Infrastructure_Name = \"South Coop\";\r\n    this.InfrastructureEdit.Infrastructure_Location = \"Next to Red Barn\";\r\n    this.InfrastructureEdit.Infrastructure_Size= \"30\";\r\n    this.InfrastructureEdit.Section= \"Veld 2\";\r\n    this.InfrastructureEdit.Active = true;\r\n  \r\n    this.selectedValue = this.InfrastructureEdit.Infrastructure_Type;\r\n    this.SectionSelect = this.InfrastructureEdit.Section;\r\n\r\n\r\n    this.changeform();\r\n  }\r\n\r\n  GenerateReport(){\r\n    alert(\"Report generated successfully!\")\r\n  }\r\n\r\n  AddInfrastructure(){\r\n    if(this.show == true){\r\n         this.show = false;\r\n    }\r\n    this.InfrastructureAdd = new Infrastructures;\r\n    this.showAdd = true;\r\n    this.hideTable = false;\r\n  }\r\n\r\n  PutInfrastructure(){\r\n    alert(\"Done\");\r\n  }\r\n\r\n  deleteInfrastructure(){\r\n    alert(\"Are you sure\");\r\n  }\r\n\r\n  back(){\r\n    this.show = false;\r\n    this.hideTable = true;\r\n    this.showAdd = false;\r\n  }\r\n\r\n  NewTestFunction() {\r\n    \r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2luc3VybmFjZS1wcm92aWRlci9pbnN1cm5hY2UtcHJvdmlkZXIuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit, ViewChild} from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { Settings } from '../app.settings.model';\r\nimport { AppSettings } from '../app.settings';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport {Insurance} from '../Models/InsuranceProvider';\r\n\r\n\r\nexport interface Element{\r\n  IP_ID:string;\r\n  IP_Name:string;\r\n  IP_Reg_Number:string;\r\n  IP_VAT_Number:number;\r\n  IP_Phone_Number:number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-insurnace-provider',\r\n  templateUrl: './insurnace-provider.component.html',\r\n  styleUrls: ['./insurnace-provider.component.scss']\r\n})\r\nexport class InsurnaceProviderComponent implements OnInit {\r\n  showtable: boolean = true;\r\n  public displayedColumns = ['IP_ID', 'IP_Name', 'IP_Reg_Number', 'IP_VAT_Number','IP_Phone_Number','Actions'];\r\n  public dataSource: any;\r\n  public settings: Settings;\r\n  show: boolean = false;\r\n  showAdd: boolean = false;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  data:Element[]=[\r\n    {IP_ID:\"1\",IP_Name:\"Outsurance\",IP_Reg_Number:\"djfbowero431234\",IP_VAT_Number:32938243984239,IP_Phone_Number:943234343},\r\n    {IP_ID:\"2\",IP_Name:\"King Price\",IP_Reg_Number:\"sdkfjbsdfje23e2\",IP_VAT_Number:14234234234231,IP_Phone_Number:845678382},\r\n    {IP_ID:\"3\",IP_Name:\"Discovery\",IP_Reg_Number:\"sascdsfjkndskjfs\",IP_VAT_Number:9876543456754,IP_Phone_Number:823234322},\r\n    {IP_ID:\"4\",IP_Name:\"Momentum\",IP_Reg_Number:\"4383y4hrhuudwjadd\",IP_VAT_Number:9878463784631,IP_Phone_Number:882342353},\r\n  ];\r\n\r\n  InsuranceaAdd:Insurance;\r\n  InsuranceEdit: Insurance;\r\n  AdminPriv: string;\r\n\r\n  constructor(public appSettings:AppSettings) { \r\n    this.settings = this.appSettings.settings; \r\n    this.dataSource = new MatTableDataSource<Element>(this.data);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.AdminPriv = localStorage.getItem(\"PrivelageLevel\");\r\n    this.InsuranceEdit.IP_ID = \"1\";\r\n    this.InsuranceEdit.IP_Name = \"Outsurance\";\r\n    this.InsuranceEdit.IP_Phone_Number = 5555555;\r\n    this.InsuranceEdit.IP_Reg_Number = \"2131233\";\r\n    this.InsuranceEdit.IP_VAT_Number = 32123312;\r\n    this.InsuranceEdit.User_ID = \"213123\"\r\n;  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  changeform(){\r\n    if(this.show == false){\r\n      this.show =true;\r\n      this.showAdd = false;\r\n      this.showtable = false;\r\n    }\r\n  }\r\n\r\n  getInsuranceInfo(Id:number){\r\n\r\n\r\n    this.changeform();\r\n  }\r\n\r\n  addInsurance(){\r\n    if(this.show == true){\r\n         this.show = false;\r\n    }\r\n    this.InsuranceaAdd = new Insurance;\r\n    this.showAdd = true;\r\n    this.showtable = false;\r\n  }\r\n\r\n  putInsurance(){\r\n    alert(\"Done\");\r\n  }\r\n\r\n  deleteInsurance(){\r\n    alert(\"Are you sure\");\r\n    if(confirm(\"Are you sure to delete \"+name)) {\r\n      console.log(\"Implement delete functionality here\");\r\n    }\r\n  }\r\n  showTable(){\r\n    this.showtable = true;\r\n    this.showAdd = false;\r\n    this.show = false;\r\n  }\r\n}\r\n","export default \".mat-column-is_Active {\\n  word-wrap: break-word !important;\\n  white-space: unset !important;\\n  flex: 0 0 5% !important;\\n  width: 28% !important;\\n  overflow-wrap: break-word;\\n  word-wrap: break-word;\\n  word-break: break-word;\\n  -ms-hyphens: auto;\\n  -webkit-hyphens: auto;\\n  hyphens: auto;\\n}\\n\\nmat-header-cell {\\n  background-color: #308b30;\\n  font-size: 16px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbnRlbmFuY2UtbG9nL0Q6XFwzNzBcXEZpbmFsRnJvbnRlbmQvc3JjXFxhcHBcXG1haW50ZW5hbmNlLWxvZ1xcbWFpbnRlbmFuY2UtbG9nLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9tYWludGVuYW5jZS1sb2cvbWFpbnRlbmFuY2UtbG9nLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZ0NBQUE7RUFDQSw2QkFBQTtFQUNBLHVCQUFBO0VBQ0EscUJBQUE7RUFDQSx5QkFBQTtFQUNBLHFCQUFBO0VBRUEsc0JBQUE7RUFFQSxpQkFBQTtFQUVBLHFCQUFBO0VBQ0EsYUFBQTtBQ0RKOztBRElFO0VBQ0UseUJBQUE7RUFDQSxlQUFBO0FDREoiLCJmaWxlIjoic3JjL2FwcC9tYWludGVuYW5jZS1sb2cvbWFpbnRlbmFuY2UtbG9nLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1jb2x1bW4taXNfQWN0aXZlIHtcclxuICAgIHdvcmQtd3JhcDogYnJlYWstd29yZCAhaW1wb3J0YW50O1xyXG4gICAgd2hpdGUtc3BhY2U6IHVuc2V0ICFpbXBvcnRhbnQ7XHJcbiAgICBmbGV4OiAwIDAgNSUgIWltcG9ydGFudDtcclxuICAgIHdpZHRoOiAyOCUgIWltcG9ydGFudDtcclxuICAgIG92ZXJmbG93LXdyYXA6IGJyZWFrLXdvcmQ7XHJcbiAgICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XHJcbiAgXHJcbiAgICB3b3JkLWJyZWFrOiBicmVhay13b3JkO1xyXG4gIFxyXG4gICAgLW1zLWh5cGhlbnM6IGF1dG87XHJcbiAgICAtbW96LWh5cGhlbnM6IGF1dG87XHJcbiAgICAtd2Via2l0LWh5cGhlbnM6IGF1dG87XHJcbiAgICBoeXBoZW5zOiBhdXRvO1xyXG4gIH1cclxuXHJcbiAgbWF0LWhlYWRlci1jZWxse1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDQ4LDEzOSw0OCk7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbn0iLCIubWF0LWNvbHVtbi1pc19BY3RpdmUge1xuICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQgIWltcG9ydGFudDtcbiAgd2hpdGUtc3BhY2U6IHVuc2V0ICFpbXBvcnRhbnQ7XG4gIGZsZXg6IDAgMCA1JSAhaW1wb3J0YW50O1xuICB3aWR0aDogMjglICFpbXBvcnRhbnQ7XG4gIG92ZXJmbG93LXdyYXA6IGJyZWFrLXdvcmQ7XG4gIHdvcmQtd3JhcDogYnJlYWstd29yZDtcbiAgd29yZC1icmVhazogYnJlYWstd29yZDtcbiAgLW1zLWh5cGhlbnM6IGF1dG87XG4gIC1tb3otaHlwaGVuczogYXV0bztcbiAgLXdlYmtpdC1oeXBoZW5zOiBhdXRvO1xuICBoeXBoZW5zOiBhdXRvO1xufVxuXG5tYXQtaGVhZGVyLWNlbGwge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzA4YjMwO1xuICBmb250LXNpemU6IDE2cHg7XG59Il19 */\";","import {  OnInit } from '@angular/core';\r\nimport { Settings } from 'src/app/app.settings.model';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Component, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { Maintenance } from 'src/app/Models/Maintenance';\r\n\r\nexport interface Element {\r\n    Maintenance_ID: string;\r\n    Maintenance_Description: string;\r\n    Maintenance_Start_Date: string;\r\n    Maintenance_End_Date: string;\r\n    Maintenance_Type_Description: string;\r\n    Status_Description: string;\r\n    Importance_Description: string;\r\n  }\r\n\r\n@Component({\r\n  selector: 'app-maintenance-log',\r\n  templateUrl: './maintenance-log.component.html',\r\n  styleUrls: ['./maintenance-log.component.scss']\r\n})\r\nexport class MaintenanceLogComponent implements OnInit {\r\n\r\n  public displayedColumns = ['Maintenance_ID', 'Maintenance_Type_Description', 'Maintenance_Description', 'Maintenance_Start_Date','Maintenance_End_Date','Status_Description','Importance_Description','Actions'];\r\n  public dataSource: any;\r\n  public settings: Settings;\r\n  show: boolean = false;\r\n  showAdd: boolean = false;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n data: Element[] = [\r\n    {Maintenance_ID: \"1\",Maintenance_Type_Description: \"Infrastructure\", Maintenance_Description: 'Check Barn wiring', Maintenance_Start_Date: \"05/07/2020\" , Maintenance_End_Date: \"05/07/2020\", Status_Description: 'In Progress', Importance_Description: 'Medium'},\r\n    {Maintenance_ID: \"2\",Maintenance_Type_Description: \"Equipment\", Maintenance_Description: 'Clean Ploughs', Maintenance_Start_Date: \"02/01/2020\" , Maintenance_End_Date: \"05/01/2020\", Status_Description: 'Completed', Importance_Description: 'High'},\r\n    {Maintenance_ID: \"3\",Maintenance_Type_Description: \"Other\", Maintenance_Description: 'Sweep Barn', Maintenance_Start_Date: \"22/05/2020\" , Maintenance_End_Date: \"22/05/2020\", Status_Description: 'Incomplete', Importance_Description: 'Low'},\r\n  ];\r\n  \r\n types: string[] = [\r\n  \"Wiring\",\"Structural\",\"Security\"\r\n ]\r\n\r\n infrastructures: string[] = [\r\n   \"Building1\",\"Building2\"\r\n ]\r\n\r\n staff: string[] = [\r\n   \"John\", \"Petrus\"\r\n ]\r\n\r\n equipment: string[] =[\r\n   \"Trailer\", \"Plow\"\r\n ]\r\n\r\n status: string[] =[\r\n  \"In Progress\", \"Completed\", \"Pending\"\r\n]\r\n\r\nimportance: string[] =[\r\n  \"High\", \"Low\", \"Medium\"\r\n]\r\n\r\nMaintenanceEdit: Maintenance;\r\nMaintenanceAdd: Maintenance;\r\nAdminPriv: string;\r\nselectedValue: string;\r\nEquipmentSelect: string;\r\nStatusSelect: String;\r\nImportanceSelect: string;\r\nInfrastructureSelect: string;\r\nStaffSelect: string;\r\nshowtable = true;\r\n  constructor(public appSettings:AppSettings) {\r\n    this.settings = this.appSettings.settings; \r\n    this.dataSource = new MatTableDataSource<Element>(this.data);\r\n  }\r\n  ngOnInit(): void {\r\n     this.AdminPriv = localStorage.getItem(\"PrivelageLevel\");\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  changeform(){\r\n    if(this.show == false){\r\n      this.show =true;\r\n      this.showAdd = false;\r\n      this.showtable = false;\r\n    }\r\n  }\r\n\r\n  getMaintenanceDetail(Id: number){\r\n    //Implement function to pupulate edit field and populate vehicle edit\\\r\n    this.MaintenanceEdit = new Maintenance;\r\n    this.MaintenanceEdit.Maintenance_Description = \"Clean Ploughs\";\r\n    this.MaintenanceEdit.Maintenance_Type_Description = \"Equipment\";\r\n    this.MaintenanceEdit.Infrastructure_Description= \"Barn\";\r\n    this.MaintenanceEdit.Equipment_Description= \"Plough\";\r\n    this.MaintenanceEdit.Status_Description= \"Active\";\r\n    this.MaintenanceEdit.Importance_Description= \"High\";\r\n    this.MaintenanceEdit.Staff_Name= \"John\";\r\n    this.MaintenanceEdit.Maintenance_Start_Date= \"22/07/2020\";\r\n    this.MaintenanceEdit.Maintenance_End_Date= \"25/07/2020\";\r\n  \r\n    this.selectedValue = this.MaintenanceEdit.Maintenance_Type_Description;\r\n    this.EquipmentSelect = this.MaintenanceEdit.Equipment_Description;\r\n    this.InfrastructureSelect = this.MaintenanceEdit.Infrastructure_Description;\r\n    this.StatusSelect = this.MaintenanceEdit.Status_Description;\r\n    this.ImportanceSelect = this.MaintenanceEdit.Importance_Description;\r\n    this.StaffSelect = this.MaintenanceEdit.Staff_Name;\r\n\r\n\r\n    this.changeform();\r\n  }\r\n\r\n  AddMaintenance(){\r\n    if(this.show == true){\r\n         this.show = false;\r\n    }\r\n    this.MaintenanceAdd = new Maintenance;\r\n    this.showAdd = true;\r\n    this.showtable = false;\r\n  }\r\n\r\n  PutMaintenance(){\r\n    alert(\"Done\");\r\n  }\r\n\r\n  deleteMaintenance(){\r\n    alert(\"Are you sure\");\r\n  }\r\n\r\n  back(){\r\n    this.showtable = true;\r\n    this.show = false;\r\n    this.showAdd = false;\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW50ZW5hbmNlLXJlcG9ydC9tYWludGVuYW5jZS1yZXBvcnQuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-maintenance-report',\r\n  templateUrl: './maintenance-report.component.html',\r\n  styleUrls: ['./maintenance-report.component.scss']\r\n})\r\nexport class MaintenanceReportComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25ldy1wYXNzd29yZC9uZXctcGFzc3dvcmQuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-new-password',\r\n  templateUrl: './new-password.component.html',\r\n  styleUrls: ['./new-password.component.scss']\r\n})\r\nexport class NewPasswordComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  back(){\r\n    \r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2JsYW5rL2JsYW5rLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-blank',\r\n  templateUrl: './blank.component.html',\r\n  styleUrls: ['./blank.component.css']\r\n})\r\nexport class BlankComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AppSettings } from '../../../app.settings';\r\nimport { Settings } from '../../../app.settings.model';\r\n\r\n@Component({\r\n  selector: 'app-error',\r\n  templateUrl: './error.component.html'\r\n})\r\nexport class ErrorComponent {\r\n  public settings: Settings;\r\n  constructor(public appSettings:AppSettings, public router:Router) {\r\n    this.settings = this.appSettings.settings; \r\n  }\r\n\r\n  goHome(): void {\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  ngAfterViewInit(){\r\n    this.settings.loadingSpinner = false;  \r\n  } \r\n\r\n}","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AppSettings } from '../../../app.settings';\r\nimport { Settings } from '../../../app.settings.model';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html'\r\n})\r\nexport class NotFoundComponent{\r\n  public settings: Settings;\r\n  constructor(public appSettings:AppSettings, public router:Router) {\r\n    this.settings = this.appSettings.settings; \r\n  }\r\n\r\n  searchResult(): void {\r\n    this.router.navigate(['/search']);\r\n  }\r\n\r\n  ngAfterViewInit(){\r\n    this.settings.loadingSpinner = false; \r\n  }\r\n\r\n}","export default \".sidenav {\\n  width: 250px;\\n  overflow: hidden;\\n  border: none !important;\\n}\\n\\n.horizontal-menu {\\n  padding: 0;\\n  position: relative;\\n  z-index: 9;\\n  height: 0;\\n}\\n\\n.horizontal-menu.sticky {\\n  height: 0;\\n  min-height: 0;\\n  overflow: hidden;\\n}\\n\\n.horizontal-menu.sticky.fixed-top {\\n  position: fixed;\\n  top: 0;\\n  height: 56px;\\n  overflow: visible;\\n}\\n\\n.inner-sidenav-content {\\n  position: absolute;\\n  top: 56px;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  padding: 8px;\\n  min-height: calc(100% - (56px + 8px*2));\\n}\\n\\n.inner-sidenav-content .has-footer {\\n  min-height: calc(100% - (45px + 56px));\\n}\\n\\n.inner-sidenav-content .footer {\\n  height: 56px;\\n  margin: 0 -8px -8px -8px;\\n  padding: 0 16px;\\n}\\n\\n.options {\\n  position: fixed;\\n  width: 250px;\\n  overflow: hidden;\\n}\\n\\n.options .control {\\n  padding: 6px 14px;\\n}\\n\\n.options .control div {\\n  padding: 6px 0;\\n}\\n\\n.options .control h4 {\\n  border-bottom: 1px solid #ccc;\\n  margin: 12px 0 6px 0;\\n}\\n\\n.options .control .skin-primary {\\n  width: 32px;\\n  height: 32px;\\n  padding: 0;\\n  overflow: hidden;\\n  cursor: pointer;\\n}\\n\\n.options .control .skin-primary .skin-secondary {\\n  width: 0;\\n  height: 0;\\n  padding: 0;\\n  border-bottom: 32px solid;\\n  border-left: 32px solid transparent;\\n}\\n\\n.options .control .skin-primary.indigo-light {\\n  background-color: #3F51B5;\\n  border: 1px solid #3F51B5;\\n}\\n\\n.options .control .skin-primary.indigo-light .skin-secondary {\\n  border-bottom-color: #ececec;\\n}\\n\\n.options .control .skin-primary.teal-light {\\n  background-color: #009688;\\n  border: 1px solid #009688;\\n}\\n\\n.options .control .skin-primary.teal-light .skin-secondary {\\n  border-bottom-color: #ececec;\\n}\\n\\n.options .control .skin-primary.red-light {\\n  background-color: #F44336;\\n  border: 1px solid #F44336;\\n}\\n\\n.options .control .skin-primary.red-light .skin-secondary {\\n  border-bottom-color: #ececec;\\n}\\n\\n.options .control .skin-primary.blue-dark {\\n  background-color: #0277bd;\\n  border: 1px solid #0277bd;\\n}\\n\\n.options .control .skin-primary.blue-dark .skin-secondary {\\n  border-bottom-color: #262626;\\n}\\n\\n.options .control .skin-primary.green-dark {\\n  background-color: #388E3C;\\n  border: 1px solid #388E3C;\\n}\\n\\n.options .control .skin-primary.green-dark .skin-secondary {\\n  border-bottom-color: #262626;\\n}\\n\\n.options .control .skin-primary.pink-dark {\\n  background-color: #D81B60;\\n  border: 1px solid #D81B60;\\n}\\n\\n.options .control .skin-primary.pink-dark .skin-secondary {\\n  border-bottom-color: #262626;\\n}\\n\\n.options .mat-radio-group {\\n  display: inline-flex;\\n  flex-direction: column;\\n}\\n\\n.options .mat-radio-group .mat-radio-button {\\n  margin: 2px 0;\\n}\\n\\n.options .mat-slide-toggle {\\n  height: auto;\\n}\\n\\n.options .ps {\\n  height: calc(100% - 48px);\\n}\\n\\n.op-image {\\n  box-shadow: 0 0 2px #ccc;\\n  border: 2px solid;\\n  border-color: transparent;\\n  cursor: pointer;\\n  transition: 0.2s;\\n}\\n\\n.options-icon {\\n  position: fixed;\\n  top: 110px;\\n  right: 0;\\n  width: 40px;\\n  height: 40px;\\n  background: rgba(0, 0, 0, 0.7);\\n  color: #fff;\\n  cursor: pointer;\\n  z-index: 999999;\\n}\\n\\n.options-icon .mat-icon {\\n  -webkit-animation: spin 8s linear infinite;\\n  animation: spin 8s linear infinite;\\n}\\n\\n@-webkit-keyframes spin {\\n  100% {\\n    -webkit-transform: rotate(360deg);\\n  }\\n}\\n\\n@keyframes spin {\\n  100% {\\n    transform: rotate(360deg);\\n  }\\n}\\n\\n.back-to-top {\\n  position: fixed;\\n  width: 40px;\\n  height: 40px;\\n  cursor: pointer;\\n  z-index: 999999;\\n  right: 20px;\\n  bottom: 20px;\\n  opacity: 0.5;\\n  color: #fff;\\n  background-color: rgba(0, 0, 0, 0.75);\\n  border-radius: 4px;\\n}\\n\\n.back-to-top:hover {\\n  opacity: 0.9;\\n}\\n\\n.search-bar form input {\\n  height: 28px;\\n  border: none;\\n  padding: 0;\\n  border-radius: 15px;\\n  outline: none;\\n  color: #444;\\n  width: 0;\\n  overflow: hidden;\\n  transition: 0.3s;\\n}\\n\\n.search-bar form input.show {\\n  padding: 0 8px;\\n  width: 250px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvRDpcXDM3MFxcRmluYWxGcm9udGVuZC9zcmNcXGFwcFxccGFnZXNcXHBhZ2VzLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9wYWdlcy9EOlxcMzcwXFxGaW5hbEZyb250ZW5kL3NyY1xcYXBwXFx0aGVtZVxcc3R5bGVzXFxfdmFyaWFibGVzLnNjc3MiLCJzcmMvYXBwL3BhZ2VzL3BhZ2VzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQ0ksWUNFWTtFRERaLGdCQUFBO0VBQ0EsdUJBQUE7QUVESjs7QUZHQTtFQUNJLFVBQUE7RUFDQSxrQkFBQTtFQUNBLFVBQUE7RUFDQSxTQUFBO0FFQUo7O0FGQ0k7RUFDSSxTQUFBO0VBQ0EsYUFBQTtFQUNBLGdCQUFBO0FFQ1I7O0FGQVE7RUFDSSxlQUFBO0VBQ0EsTUFBQTtFQUNBLFlDakJLO0VEa0JMLGlCQUFBO0FFRVo7O0FGR0E7RUFDRSxrQkFBQTtFQUNBLFNDekJlO0VEMEJmLFNBQUE7RUFDQSxPQUFBO0VBQ0EsUUFBQTtFQUNBLFlDdEJjO0VEdUJkLHVDQUFBO0FFQUY7O0FGQ0U7RUFDRSxzQ0FBQTtBRUNKOztBRkNFO0VBQ0UsWUNwQlk7RURxQlosd0JBQUE7RUFDQSxlQUFBO0FFQ0o7O0FGR0E7RUFDSSxlQUFBO0VBQ0EsWUN4Q1k7RUR5Q1osZ0JBQUE7QUVBSjs7QUZDSTtFQUNJLGlCQUFBO0FFQ1I7O0FGQVE7RUFDSSxjQUFBO0FFRVo7O0FGQVE7RUFDSSw2QkFBQTtFQUNBLG9CQUFBO0FFRVo7O0FGQVE7RUFDSSxXQUFBO0VBQ0EsWUFBQTtFQUNBLFVBQUE7RUFDQSxnQkFBQTtFQUNBLGVBQUE7QUVFWjs7QUZEWTtFQUNJLFFBQUE7RUFDQSxTQUFBO0VBQ0EsVUFBQTtFQUNBLHlCQUFBO0VBQ0EsbUNBQUE7QUVHaEI7O0FGRFk7RUFDSSx5QkFBQTtFQUNBLHlCQUFBO0FFR2hCOztBRkZnQjtFQUNJLDRCQUFBO0FFSXBCOztBRkRZO0VBQ0kseUJBQUE7RUFDQSx5QkFBQTtBRUdoQjs7QUZGZ0I7RUFDSSw0QkFBQTtBRUlwQjs7QUZEWTtFQUNJLHlCQUFBO0VBQ0EseUJBQUE7QUVHaEI7O0FGRmdCO0VBQ0ksNEJBQUE7QUVJcEI7O0FGRFk7RUFDSSx5QkFBQTtFQUNBLHlCQUFBO0FFR2hCOztBRkZnQjtFQUNJLDRCQUFBO0FFSXBCOztBRkRZO0VBQ0kseUJBQUE7RUFDQSx5QkFBQTtBRUdoQjs7QUZGZ0I7RUFDSSw0QkFBQTtBRUlwQjs7QUZEWTtFQUNJLHlCQUFBO0VBQ0EseUJBQUE7QUVHaEI7O0FGRmdCO0VBQ0ksNEJBQUE7QUVJcEI7O0FGQ0k7RUFDSSxvQkFBQTtFQUNBLHNCQUFBO0FFQ1I7O0FGQVE7RUFDSSxhQUFBO0FFRVo7O0FGQ0k7RUFDSSxZQUFBO0FFQ1I7O0FGQ0k7RUFDSSx5QkFBQTtBRUNSOztBRkVBO0VBQ0ksd0JBQUE7RUFDQSxpQkFBQTtFQUNBLHlCQUFBO0VBQ0EsZUFBQTtFQUNBLGdCQUFBO0FFQ0o7O0FGQ0E7RUFDSSxlQUFBO0VBQ0EsVUFBQTtFQUNBLFFBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLDhCQUFBO0VBQ0EsV0FBQTtFQUNBLGVBQUE7RUFDQSxlQUFBO0FFRUo7O0FGREk7RUFDSSwwQ0FBQTtFQUVBLGtDQUFBO0FFR1I7O0FGTUE7RUFDSTtJQUNJLGlDQUFBO0VFRU47QUFDRjs7QUZBQTtFQUNJO0lBQ0kseUJBQUE7RUVFTjtBQUNGOztBRkNBO0VBQ0ksZUFBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0EsZUFBQTtFQUNBLGVBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLFlBQUE7RUFDQSxXQUFBO0VBQ0EscUNBQUE7RUFDQSxrQkFBQTtBRUNKOztBRkFJO0VBQ0ksWUFBQTtBRUVSOztBRktRO0VBQ0ksWUFBQTtFQUNBLFlBQUE7RUFDQSxVQUFBO0VBQ0EsbUJBQUE7RUFDQSxhQUFBO0VBQ0EsV0FBQTtFQUNBLFFBQUE7RUFDQSxnQkFBQTtFQUNBLGdCQUFBO0FFRlo7O0FGR1k7RUFDRyxjQUFBO0VBQ0EsWUFBQTtBRURmIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvcGFnZXMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwiLi4vdGhlbWUvc3R5bGVzL3ZhcmlhYmxlc1wiO1xyXG5cclxuLnNpZGVuYXZ7XHJcbiAgICB3aWR0aDogJHNpZGVuYXYtd2lkdGg7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuOyBcclxuICAgIGJvcmRlcjogbm9uZSAhaW1wb3J0YW50OyAgXHJcbn1cclxuLmhvcml6b250YWwtbWVudXtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICB6LWluZGV4OiA5OyAgICBcclxuICAgIGhlaWdodDogMDtcclxuICAgICYuc3RpY2t5e1xyXG4gICAgICAgIGhlaWdodDogMDtcclxuICAgICAgICBtaW4taGVpZ2h0OiAwO1xyXG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAgICAgJi5maXhlZC10b3B7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgICAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgICAgICBoZWlnaHQ6ICRob3Jpem9udGFsLW1lbnUtaGVpZ2h0O1xyXG4gICAgICAgICAgICBvdmVyZmxvdzogdmlzaWJsZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbi5pbm5lci1zaWRlbmF2LWNvbnRlbnQge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0b3A6JHRvb2xiYXItaGVpZ2h0O1xyXG4gIGJvdHRvbTowO1xyXG4gIGxlZnQ6MDtcclxuICByaWdodDowOyAgXHJcbiAgcGFkZGluZzogJGlubmVyLXNpZGVuYXYtY29udGVudC1wYWRkaW5nO1xyXG4gIG1pbi1oZWlnaHQ6IGNhbGMoMTAwJSAtICgjeyR0b29sYmFyLWhlaWdodH0gKyAjeyRpbm5lci1zaWRlbmF2LWNvbnRlbnQtcGFkZGluZ30qMikpO1xyXG4gIC5oYXMtZm9vdGVyeyAgXHJcbiAgICBtaW4taGVpZ2h0OiBjYWxjKDEwMCUgLSAoNDVweCArICN7JGZvb3Rlci1oZWlnaHR9KSk7XHJcbiAgfVxyXG4gIC5mb290ZXJ7XHJcbiAgICBoZWlnaHQ6ICRmb290ZXItaGVpZ2h0O1xyXG4gICAgbWFyZ2luOiAwIC04cHggLThweCAtOHB4OyBcclxuICAgIHBhZGRpbmc6IDAgMTZweDtcclxuICB9XHJcbn1cclxuXHJcbi5vcHRpb25ze1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgd2lkdGg6ICRzaWRlbmF2LXdpZHRoO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIC5jb250cm9se1xyXG4gICAgICAgIHBhZGRpbmc6IDZweCAxNHB4O1xyXG4gICAgICAgIGRpdntcclxuICAgICAgICAgICAgcGFkZGluZzogNnB4IDA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGg0e1xyXG4gICAgICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2NjYztcclxuICAgICAgICAgICAgbWFyZ2luOiAxMnB4IDAgNnB4IDA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC5za2luLXByaW1hcnl7XHJcbiAgICAgICAgICAgIHdpZHRoOiAzMnB4O1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDMycHg7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDA7XHJcbiAgICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47ICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjsgIFxyXG4gICAgICAgICAgICAuc2tpbi1zZWNvbmRhcnl7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMDsgXHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDA7IFxyXG4gICAgICAgICAgICAgICAgcGFkZGluZzogMDtcclxuICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDMycHggc29saWQ7IFxyXG4gICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQ6IDMycHggc29saWQgdHJhbnNwYXJlbnQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgJi5pbmRpZ28tbGlnaHR7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjM0Y1MUI1O1xyXG4gICAgICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgIzNGNTFCNTtcclxuICAgICAgICAgICAgICAgIC5za2luLXNlY29uZGFyeXtcclxuICAgICAgICAgICAgICAgICAgICBib3JkZXItYm90dG9tLWNvbG9yOiAjZWNlY2VjO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICYudGVhbC1saWdodHtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDk2ODg7XHJcbiAgICAgICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjMDA5Njg4O1xyXG4gICAgICAgICAgICAgICAgLnNraW4tc2Vjb25kYXJ5e1xyXG4gICAgICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6ICNlY2VjZWM7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgJi5yZWQtbGlnaHR7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjQ0MzM2O1xyXG4gICAgICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI0Y0NDMzNjtcclxuICAgICAgICAgICAgICAgIC5za2luLXNlY29uZGFyeXtcclxuICAgICAgICAgICAgICAgICAgICBib3JkZXItYm90dG9tLWNvbG9yOiAjZWNlY2VjO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICYuYmx1ZS1kYXJre1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzAyNzdiZDtcclxuICAgICAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICMwMjc3YmQ7XHJcbiAgICAgICAgICAgICAgICAuc2tpbi1zZWNvbmRhcnl7XHJcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogIzI2MjYyNjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAmLmdyZWVuLWRhcmt7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzg4RTNDO1xyXG4gICAgICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgIzM4OEUzQztcclxuICAgICAgICAgICAgICAgIC5za2luLXNlY29uZGFyeXtcclxuICAgICAgICAgICAgICAgICAgICBib3JkZXItYm90dG9tLWNvbG9yOiAjMjYyNjI2O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICYucGluay1kYXJre1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI0Q4MUI2MDtcclxuICAgICAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNEODFCNjA7XHJcbiAgICAgICAgICAgICAgICAuc2tpbi1zZWNvbmRhcnl7XHJcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogIzI2MjYyNjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC5tYXQtcmFkaW8tZ3JvdXB7XHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWZsZXg7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAubWF0LXJhZGlvLWJ1dHRvbntcclxuICAgICAgICAgICAgbWFyZ2luOiAycHggMDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAubWF0LXNsaWRlLXRvZ2dsZXtcclxuICAgICAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICB9XHJcbiAgICAucHN7XHJcbiAgICAgICAgaGVpZ2h0OiBjYWxjKDEwMCUgLSA0OHB4KTtcclxuICAgIH1cclxufVxyXG4ub3AtaW1hZ2V7XHJcbiAgICBib3gtc2hhZG93OiAwIDAgMnB4ICNjY2M7XHJcbiAgICBib3JkZXI6IDJweCBzb2xpZDtcclxuICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICB0cmFuc2l0aW9uOiAwLjJzO1xyXG59XHJcbi5vcHRpb25zLWljb257XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICB0b3A6IDExMHB4O1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICB3aWR0aDogNDBweDtcclxuICAgIGhlaWdodDogNDBweDtcclxuICAgIGJhY2tncm91bmQ6IHJnYmEoMCwwLDAsLjcpO1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICB6LWluZGV4OiA5OTk5OTk7XHJcbiAgICAubWF0LWljb257XHJcbiAgICAgICAgLXdlYmtpdC1hbmltYXRpb246IHNwaW4gOHMgbGluZWFyIGluZmluaXRlO1xyXG4gICAgICAgIC1tb3otYW5pbWF0aW9uOiBzcGluIDhzIGxpbmVhciBpbmZpbml0ZTtcclxuICAgICAgICBhbmltYXRpb246IHNwaW4gOHMgbGluZWFyIGluZmluaXRlO1xyXG4gICAgfVxyXG59XHJcblxyXG5ALW1vei1rZXlmcmFtZXMgc3BpbiB7IFxyXG4gICAgMTAwJSB7IFxyXG4gICAgICAgIC1tb3otdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgXHJcbiAgICB9IFxyXG59XHJcbkAtd2Via2l0LWtleWZyYW1lcyBzcGluIHsgXHJcbiAgICAxMDAlIHsgXHJcbiAgICAgICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyBcclxuICAgIH0gXHJcbn1cclxuQGtleWZyYW1lcyBzcGluIHsgXHJcbiAgICAxMDAlIHsgXHJcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcclxuICAgIH1cclxufVxyXG5cclxuLmJhY2stdG8tdG9we1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgd2lkdGg6IDQwcHg7XHJcbiAgICBoZWlnaHQ6IDQwcHg7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICB6LWluZGV4OiA5OTk5OTk7XHJcbiAgICByaWdodDogMjBweDtcclxuICAgIGJvdHRvbTogMjBweDtcclxuICAgIG9wYWNpdHk6IC41O1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsMCwwLC43NSk7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7ICAgIFxyXG4gICAgJjpob3ZlcntcclxuICAgICAgICBvcGFjaXR5OiAwLjk7XHJcbiAgICB9ICAgIFxyXG59XHJcblxyXG5cclxuLnNlYXJjaC1iYXJ7XHJcbiAgICBmb3Jte1xyXG4gICAgICAgIGlucHV0e1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDI4cHg7XHJcbiAgICAgICAgICAgIGJvcmRlcjogbm9uZTtcclxuICAgICAgICAgICAgcGFkZGluZzogMDtcclxuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTVweDtcclxuICAgICAgICAgICAgb3V0bGluZTogbm9uZTtcclxuICAgICAgICAgICAgY29sb3I6ICM0NDQ7XHJcbiAgICAgICAgICAgIHdpZHRoOiAwO1xyXG4gICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgICAgICB0cmFuc2l0aW9uOiAwLjNzO1xyXG4gICAgICAgICAgICAmLnNob3d7XHJcbiAgICAgICAgICAgICAgIHBhZGRpbmc6IDAgOHB4O1xyXG4gICAgICAgICAgICAgICB3aWR0aDogMjUwcHg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9ICAgICAgIFxyXG4gICAgfVxyXG59XHJcblxyXG5cclxuXHJcbiIsIiRmb250LWZhbWlseTogJ1JvYm90bycsIHNhbnMtc2VyaWY7XHJcblxyXG4kdG9vbGJhci1oZWlnaHQ6IDU2cHg7IFxyXG4kaG9yaXpvbnRhbC1tZW51LWhlaWdodDogJHRvb2xiYXItaGVpZ2h0O1xyXG5cclxuJHNpZGVuYXYtd2lkdGg6IDI1MHB4O1xyXG4kc2lkZW5hdi11c2VyLWJsb2NrLWhlaWdodDogMTU2cHg7XHJcbiRtaW5pLXNpZGVuYXYtdXNlci1ibG9jay1oZWlnaHQ6IDcwcHg7XHJcblxyXG4kZmxleC1kaXN0YW5jZTogOHB4O1xyXG4kaW5uZXItc2lkZW5hdi1jb250ZW50LXBhZGRpbmc6ICRmbGV4LWRpc3RhbmNlO1xyXG5cclxuLy9Mb2dpbiwgUmVnaXN0ZXIsIEVycm9ycyBib3hcclxuJGJveC1oZWlnaHQ6IDE4NnB4O1xyXG4kYm94LXBvc2l0aW9uOiAzNHB4O1xyXG4kcmVnaXN0ZXItYm94LWhlaWdodDogMzAwcHg7XHJcblxyXG4kZm9vdGVyLWhlaWdodDogNTZweDsgIiwiLnNpZGVuYXYge1xuICB3aWR0aDogMjUwcHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGJvcmRlcjogbm9uZSAhaW1wb3J0YW50O1xufVxuXG4uaG9yaXpvbnRhbC1tZW51IHtcbiAgcGFkZGluZzogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiA5O1xuICBoZWlnaHQ6IDA7XG59XG4uaG9yaXpvbnRhbC1tZW51LnN0aWNreSB7XG4gIGhlaWdodDogMDtcbiAgbWluLWhlaWdodDogMDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cbi5ob3Jpem9udGFsLW1lbnUuc3RpY2t5LmZpeGVkLXRvcCB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICBoZWlnaHQ6IDU2cHg7XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4uaW5uZXItc2lkZW5hdi1jb250ZW50IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDU2cHg7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDtcbiAgcmlnaHQ6IDA7XG4gIHBhZGRpbmc6IDhweDtcbiAgbWluLWhlaWdodDogY2FsYygxMDAlIC0gKDU2cHggKyA4cHgqMikpO1xufVxuLmlubmVyLXNpZGVuYXYtY29udGVudCAuaGFzLWZvb3RlciB7XG4gIG1pbi1oZWlnaHQ6IGNhbGMoMTAwJSAtICg0NXB4ICsgNTZweCkpO1xufVxuLmlubmVyLXNpZGVuYXYtY29udGVudCAuZm9vdGVyIHtcbiAgaGVpZ2h0OiA1NnB4O1xuICBtYXJnaW46IDAgLThweCAtOHB4IC04cHg7XG4gIHBhZGRpbmc6IDAgMTZweDtcbn1cblxuLm9wdGlvbnMge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHdpZHRoOiAyNTBweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cbi5vcHRpb25zIC5jb250cm9sIHtcbiAgcGFkZGluZzogNnB4IDE0cHg7XG59XG4ub3B0aW9ucyAuY29udHJvbCBkaXYge1xuICBwYWRkaW5nOiA2cHggMDtcbn1cbi5vcHRpb25zIC5jb250cm9sIGg0IHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNjY2M7XG4gIG1hcmdpbjogMTJweCAwIDZweCAwO1xufVxuLm9wdGlvbnMgLmNvbnRyb2wgLnNraW4tcHJpbWFyeSB7XG4gIHdpZHRoOiAzMnB4O1xuICBoZWlnaHQ6IDMycHg7XG4gIHBhZGRpbmc6IDA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbi5vcHRpb25zIC5jb250cm9sIC5za2luLXByaW1hcnkgLnNraW4tc2Vjb25kYXJ5IHtcbiAgd2lkdGg6IDA7XG4gIGhlaWdodDogMDtcbiAgcGFkZGluZzogMDtcbiAgYm9yZGVyLWJvdHRvbTogMzJweCBzb2xpZDtcbiAgYm9yZGVyLWxlZnQ6IDMycHggc29saWQgdHJhbnNwYXJlbnQ7XG59XG4ub3B0aW9ucyAuY29udHJvbCAuc2tpbi1wcmltYXJ5LmluZGlnby1saWdodCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzRjUxQjU7XG4gIGJvcmRlcjogMXB4IHNvbGlkICMzRjUxQjU7XG59XG4ub3B0aW9ucyAuY29udHJvbCAuc2tpbi1wcmltYXJ5LmluZGlnby1saWdodCAuc2tpbi1zZWNvbmRhcnkge1xuICBib3JkZXItYm90dG9tLWNvbG9yOiAjZWNlY2VjO1xufVxuLm9wdGlvbnMgLmNvbnRyb2wgLnNraW4tcHJpbWFyeS50ZWFsLWxpZ2h0IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwOTY4ODtcbiAgYm9yZGVyOiAxcHggc29saWQgIzAwOTY4ODtcbn1cbi5vcHRpb25zIC5jb250cm9sIC5za2luLXByaW1hcnkudGVhbC1saWdodCAuc2tpbi1zZWNvbmRhcnkge1xuICBib3JkZXItYm90dG9tLWNvbG9yOiAjZWNlY2VjO1xufVxuLm9wdGlvbnMgLmNvbnRyb2wgLnNraW4tcHJpbWFyeS5yZWQtbGlnaHQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjQ0MzM2O1xuICBib3JkZXI6IDFweCBzb2xpZCAjRjQ0MzM2O1xufVxuLm9wdGlvbnMgLmNvbnRyb2wgLnNraW4tcHJpbWFyeS5yZWQtbGlnaHQgLnNraW4tc2Vjb25kYXJ5IHtcbiAgYm9yZGVyLWJvdHRvbS1jb2xvcjogI2VjZWNlYztcbn1cbi5vcHRpb25zIC5jb250cm9sIC5za2luLXByaW1hcnkuYmx1ZS1kYXJrIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAyNzdiZDtcbiAgYm9yZGVyOiAxcHggc29saWQgIzAyNzdiZDtcbn1cbi5vcHRpb25zIC5jb250cm9sIC5za2luLXByaW1hcnkuYmx1ZS1kYXJrIC5za2luLXNlY29uZGFyeSB7XG4gIGJvcmRlci1ib3R0b20tY29sb3I6ICMyNjI2MjY7XG59XG4ub3B0aW9ucyAuY29udHJvbCAuc2tpbi1wcmltYXJ5LmdyZWVuLWRhcmsge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzg4RTNDO1xuICBib3JkZXI6IDFweCBzb2xpZCAjMzg4RTNDO1xufVxuLm9wdGlvbnMgLmNvbnRyb2wgLnNraW4tcHJpbWFyeS5ncmVlbi1kYXJrIC5za2luLXNlY29uZGFyeSB7XG4gIGJvcmRlci1ib3R0b20tY29sb3I6ICMyNjI2MjY7XG59XG4ub3B0aW9ucyAuY29udHJvbCAuc2tpbi1wcmltYXJ5LnBpbmstZGFyayB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNEODFCNjA7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNEODFCNjA7XG59XG4ub3B0aW9ucyAuY29udHJvbCAuc2tpbi1wcmltYXJ5LnBpbmstZGFyayAuc2tpbi1zZWNvbmRhcnkge1xuICBib3JkZXItYm90dG9tLWNvbG9yOiAjMjYyNjI2O1xufVxuLm9wdGlvbnMgLm1hdC1yYWRpby1ncm91cCB7XG4gIGRpc3BsYXk6IGlubGluZS1mbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuLm9wdGlvbnMgLm1hdC1yYWRpby1ncm91cCAubWF0LXJhZGlvLWJ1dHRvbiB7XG4gIG1hcmdpbjogMnB4IDA7XG59XG4ub3B0aW9ucyAubWF0LXNsaWRlLXRvZ2dsZSB7XG4gIGhlaWdodDogYXV0bztcbn1cbi5vcHRpb25zIC5wcyB7XG4gIGhlaWdodDogY2FsYygxMDAlIC0gNDhweCk7XG59XG5cbi5vcC1pbWFnZSB7XG4gIGJveC1zaGFkb3c6IDAgMCAycHggI2NjYztcbiAgYm9yZGVyOiAycHggc29saWQ7XG4gIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgdHJhbnNpdGlvbjogMC4ycztcbn1cblxuLm9wdGlvbnMtaWNvbiB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAxMTBweDtcbiAgcmlnaHQ6IDA7XG4gIHdpZHRoOiA0MHB4O1xuICBoZWlnaHQ6IDQwcHg7XG4gIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC43KTtcbiAgY29sb3I6ICNmZmY7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgei1pbmRleDogOTk5OTk5O1xufVxuLm9wdGlvbnMtaWNvbiAubWF0LWljb24ge1xuICAtd2Via2l0LWFuaW1hdGlvbjogc3BpbiA4cyBsaW5lYXIgaW5maW5pdGU7XG4gIC1tb3otYW5pbWF0aW9uOiBzcGluIDhzIGxpbmVhciBpbmZpbml0ZTtcbiAgYW5pbWF0aW9uOiBzcGluIDhzIGxpbmVhciBpbmZpbml0ZTtcbn1cblxuQC1tb3ota2V5ZnJhbWVzIHNwaW4ge1xuICAxMDAlIHtcbiAgICAtbW96LXRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7XG4gIH1cbn1cbkAtd2Via2l0LWtleWZyYW1lcyBzcGluIHtcbiAgMTAwJSB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpO1xuICB9XG59XG5Aa2V5ZnJhbWVzIHNwaW4ge1xuICAxMDAlIHtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpO1xuICB9XG59XG4uYmFjay10by10b3Age1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHdpZHRoOiA0MHB4O1xuICBoZWlnaHQ6IDQwcHg7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgei1pbmRleDogOTk5OTk5O1xuICByaWdodDogMjBweDtcbiAgYm90dG9tOiAyMHB4O1xuICBvcGFjaXR5OiAwLjU7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNzUpO1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG59XG4uYmFjay10by10b3A6aG92ZXIge1xuICBvcGFjaXR5OiAwLjk7XG59XG5cbi5zZWFyY2gtYmFyIGZvcm0gaW5wdXQge1xuICBoZWlnaHQ6IDI4cHg7XG4gIGJvcmRlcjogbm9uZTtcbiAgcGFkZGluZzogMDtcbiAgYm9yZGVyLXJhZGl1czogMTVweDtcbiAgb3V0bGluZTogbm9uZTtcbiAgY29sb3I6ICM0NDQ7XG4gIHdpZHRoOiAwO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB0cmFuc2l0aW9uOiAwLjNzO1xufVxuLnNlYXJjaC1iYXIgZm9ybSBpbnB1dC5zaG93IHtcbiAgcGFkZGluZzogMCA4cHg7XG4gIHdpZHRoOiAyNTBweDtcbn0iXX0= */\";","import { Component, OnInit, ViewChild, HostListener, ViewChildren, QueryList } from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { PerfectScrollbarDirective } from 'ngx-perfect-scrollbar';\r\nimport { AppSettings } from '../app.settings';\r\nimport { Settings } from '../app.settings.model';\r\nimport { MenuService } from '../theme/components/menu/menu.service';\r\nimport { JsonPipe } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-pages',\r\n  templateUrl: './pages.component.html',\r\n  styleUrls: ['./pages.component.scss'],\r\n  providers: [ MenuService ]\r\n})\r\nexport class PagesComponent implements OnInit { \r\n  @ViewChild('sidenav') sidenav:any;\r\n  @ViewChild('backToTop') backToTop:any;  \r\n  @ViewChildren(PerfectScrollbarDirective) pss: QueryList<PerfectScrollbarDirective>;\r\n  public settings:Settings;\r\n  public menus = ['vertical', 'horizontal'];\r\n  public menuOption:string;\r\n  public menuTypes = ['default', 'compact', 'mini'];\r\n  public menuTypeOption:string;\r\n  public lastScrollTop:number = 0;\r\n  public showBackToTop:boolean = false;\r\n  public toggleSearchBar:boolean = false;\r\n  private defaultMenu:string; //declared for return default menu when window resized \r\n\r\n  constructor(public appSettings:AppSettings, public router:Router, private menuService: MenuService){        \r\n    this.settings = this.appSettings.settings;\r\n  }\r\n  //===================================================================\r\n    selectedValue: string;\r\n  foods = JSON.parse(localStorage.getItem(\"Farms\"));\r\n  //====================================================================\r\n  ngOnInit() {\r\n    if(window.innerWidth <= 768){\r\n      this.settings.menu = 'vertical';\r\n      this.settings.sidenavIsOpened = false;\r\n      this.settings.sidenavIsPinned = false;\r\n    }\r\n    this.menuOption = this.settings.menu; \r\n    this.menuTypeOption = this.settings.menuType; \r\n    this.defaultMenu = this.settings.menu;\r\n  }\r\n\r\n  ngAfterViewInit(){\r\n    setTimeout(() => { this.settings.loadingSpinner = false }, 300);\r\n    this.backToTop.nativeElement.style.display = 'none';  \r\n    this.router.events.subscribe(event => {\r\n      if (event instanceof NavigationEnd) { \r\n        if(!this.settings.sidenavIsPinned){\r\n          this.sidenav.close(); \r\n        }      \r\n        if(window.innerWidth <= 768){\r\n          this.sidenav.close(); \r\n        } \r\n      }                \r\n    });\r\n    if(this.settings.menu == \"vertical\")\r\n      this.menuService.expandActiveSubMenu(this.menuService.getVerticalMenuItems());\r\n  }\r\n\r\n  public chooseMenu(){\r\n    this.settings.menu = this.menuOption; \r\n    this.defaultMenu = this.menuOption;\r\n    this.router.navigate(['/']); \r\n  }\r\n\r\n  public chooseMenuType(){\r\n    this.settings.menuType = this.menuTypeOption;\r\n  }\r\n\r\n  public changeTheme(theme){\r\n    this.settings.theme = theme;       \r\n  }\r\n   \r\n  public toggleSidenav(){\r\n    this.sidenav.toggle();\r\n  }\r\n\r\n  public onPsScrollY(event){   \r\n    (event.target.scrollTop > 300) ? this.backToTop.nativeElement.style.display = 'flex' : this.backToTop.nativeElement.style.display = 'none';\r\n    if(this.settings.menu == 'horizontal'){\r\n      if(this.settings.fixedHeader){\r\n        var currentScrollTop = (event.target.scrollTop > 56) ? event.target.scrollTop : 0; \r\n        if(currentScrollTop > this.lastScrollTop){\r\n          document.querySelector('#horizontal-menu').classList.add('sticky');\r\n          event.target.classList.add('horizontal-menu-hidden');\r\n        }\r\n        else{\r\n          document.querySelector('#horizontal-menu').classList.remove('sticky');\r\n          event.target.classList.remove('horizontal-menu-hidden');\r\n        } \r\n        this.lastScrollTop = currentScrollTop; \r\n      } \r\n      else{\r\n        if(event.target.scrollTop > 56){\r\n          document.querySelector('#horizontal-menu').classList.add('sticky');\r\n          event.target.classList.add('horizontal-menu-hidden');\r\n        }\r\n        else{\r\n          document.querySelector('#horizontal-menu').classList.remove('sticky');\r\n          event.target.classList.remove('horizontal-menu-hidden');\r\n        }  \r\n      }\r\n    }\r\n  }\r\n\r\n  public scrollToTop() {\r\n    this.pss.forEach(ps => {\r\n      if(ps.elementRef.nativeElement.id == 'main' || ps.elementRef.nativeElement.id == 'main-content'){\r\n        ps.scrollToTop(0,250);\r\n      }\r\n    });\r\n  }\r\n\r\n  farmChange(){\r\n    localStorage.setItem(\"currentFarmID\", this.selectedValue);\r\n    alert(\"Done\");\r\n  }\r\n  \r\n\r\n  @HostListener('window:resize')\r\n  public onWindowResize():void {\r\n    if(window.innerWidth <= 768){\r\n      this.settings.sidenavIsOpened = false;\r\n      this.settings.sidenavIsPinned = false;\r\n      this.settings.menu = 'vertical'\r\n    }\r\n    else{\r\n      (this.defaultMenu == 'horizontal') ? this.settings.menu = 'horizontal' : this.settings.menu = 'vertical'\r\n      this.settings.sidenavIsOpened = true;\r\n      this.settings.sidenavIsPinned = true;\r\n    }\r\n  }\r\n\r\n  public closeSubMenus(){\r\n    let menu = document.querySelector(\".sidenav-menu-outer\");\r\n    if(menu){\r\n      for (let i = 0; i < menu.children[0].children.length; i++) {\r\n        let child = menu.children[0].children[i];\r\n        if(child){\r\n          if(child.children[0].classList.contains('expanded')){\r\n              child.children[0].classList.remove('expanded');\r\n              child.children[1].classList.remove('show');\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html'\r\n})\r\nexport class SearchComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { AppSettings } from '../../../app.settings';\r\nimport { Settings } from '../../../app.settings.model';\r\n\r\n@Component({\r\n  selector: 'app-dialog',\r\n  templateUrl: './dialog.component.html'\r\n})\r\nexport class DialogComponent {\r\n  public animal: string;\r\n  public name: string;\r\n  public settings: Settings;\r\n  constructor(public appSettings:AppSettings, public dialog: MatDialog) {\r\n    this.settings = this.appSettings.settings; \r\n  }\r\n\r\n  openDialog(): void {\r\n    let dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\r\n      data: { name: this.name, animal: this.animal }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      this.animal = result;\r\n    });\r\n  }\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'dialog-overview-example-dialog',\r\n  templateUrl: 'dialog-overview-example-dialog.html',\r\n})\r\nexport class DialogOverviewExampleDialog {\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","export default \".mat-column-is_Active {\\n  word-wrap: break-word !important;\\n  white-space: unset !important;\\n  flex: 0 0 5% !important;\\n  width: 28% !important;\\n  overflow-wrap: break-word;\\n  word-wrap: break-word;\\n  word-break: break-word;\\n  -ms-hyphens: auto;\\n  -webkit-hyphens: auto;\\n  hyphens: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVwYWlyLWxvZy9EOlxcMzcwXFxGaW5hbEZyb250ZW5kL3NyY1xcYXBwXFxyZXBhaXItbG9nXFxyZXBhaXItbG9nLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9yZXBhaXItbG9nL3JlcGFpci1sb2cuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxnQ0FBQTtFQUNBLDZCQUFBO0VBQ0EsdUJBQUE7RUFDQSxxQkFBQTtFQUNBLHlCQUFBO0VBQ0EscUJBQUE7RUFFQSxzQkFBQTtFQUVBLGlCQUFBO0VBRUEscUJBQUE7RUFDQSxhQUFBO0FDREoiLCJmaWxlIjoic3JjL2FwcC9yZXBhaXItbG9nL3JlcGFpci1sb2cuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWNvbHVtbi1pc19BY3RpdmUge1xyXG4gICAgd29yZC13cmFwOiBicmVhay13b3JkICFpbXBvcnRhbnQ7XHJcbiAgICB3aGl0ZS1zcGFjZTogdW5zZXQgIWltcG9ydGFudDtcclxuICAgIGZsZXg6IDAgMCA1JSAhaW1wb3J0YW50O1xyXG4gICAgd2lkdGg6IDI4JSAhaW1wb3J0YW50O1xyXG4gICAgb3ZlcmZsb3ctd3JhcDogYnJlYWstd29yZDtcclxuICAgIHdvcmQtd3JhcDogYnJlYWstd29yZDtcclxuICBcclxuICAgIHdvcmQtYnJlYWs6IGJyZWFrLXdvcmQ7XHJcbiAgXHJcbiAgICAtbXMtaHlwaGVuczogYXV0bztcclxuICAgIC1tb3otaHlwaGVuczogYXV0bztcclxuICAgIC13ZWJraXQtaHlwaGVuczogYXV0bztcclxuICAgIGh5cGhlbnM6IGF1dG87XHJcbiAgfSIsIi5tYXQtY29sdW1uLWlzX0FjdGl2ZSB7XG4gIHdvcmQtd3JhcDogYnJlYWstd29yZCAhaW1wb3J0YW50O1xuICB3aGl0ZS1zcGFjZTogdW5zZXQgIWltcG9ydGFudDtcbiAgZmxleDogMCAwIDUlICFpbXBvcnRhbnQ7XG4gIHdpZHRoOiAyOCUgIWltcG9ydGFudDtcbiAgb3ZlcmZsb3ctd3JhcDogYnJlYWstd29yZDtcbiAgd29yZC13cmFwOiBicmVhay13b3JkO1xuICB3b3JkLWJyZWFrOiBicmVhay13b3JkO1xuICAtbXMtaHlwaGVuczogYXV0bztcbiAgLW1vei1oeXBoZW5zOiBhdXRvO1xuICAtd2Via2l0LWh5cGhlbnM6IGF1dG87XG4gIGh5cGhlbnM6IGF1dG87XG59Il19 */\";","import {  OnInit } from '@angular/core';\r\nimport { Settings } from '../app.settings.model';\r\nimport { AppSettings } from '../app.settings';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Component, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { RepairLogs } from '../Models/RepairLogs';\r\nimport { RepairRequests } from '../Models/RepairRequests';\r\nimport { pathToFileURL, fileURLToPath } from 'url';\r\n\r\nexport interface Element {\r\nVehicleRepair_ID: string;\r\nVRD_Invoice: String;\r\nVehicle_Registration_Number: string;\r\nVehicle_Repair_Date_Ended: Date;\r\nVehicle_Repair_Date_Started: Date;\r\nProvider_Name: string;\r\nVehicle_Repair_Cost: string;\r\nStatus_Description: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-repair-log',\r\n  templateUrl: './repair-log.component.html',\r\n  styleUrls: ['./repair-log.component.scss']\r\n})\r\nexport class RepairLogComponent implements OnInit {\r\n  public displayedColumns = ['VehicleRepair_ID', 'VRD_Invoice','Vehicle_Registration_Number', 'Provider_Name','Vehicle_Repair_Cost', 'Vehicle_Repair_Date_Started', 'Vehicle_Repair_Date_Ended', 'Status_Description','Actions'];\r\n  public dataSource: any;\r\n  StartDateDef = new Date('1970-01-01');\r\n  EndDateDef = new Date(2020, 11, 10);\r\n  public settings: Settings;\r\n  show: boolean = false;\r\n  showAdd: boolean = false;\r\n  showRequest: boolean = false;\r\n  hideTable: boolean = true;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n data: Element[] = [\r\n    {VehicleRepair_ID: \"1\",VRD_Invoice: \"Toyota-Menlyn-Agrilog-Invoice.pdf\",Vehicle_Registration_Number: \"TSK766GP\", Provider_Name: 'Toyota-Menlyn',Vehicle_Repair_Cost: \"2000\" ,Vehicle_Repair_Date_Started: this.StartDateDef, Vehicle_Repair_Date_Ended: new Date(2020, 10, 1), Status_Description: 'Completed'},\r\n    {VehicleRepair_ID: \"2\",VRD_Invoice: \"All Auto Repair-Agrilog-Invoice.pdf\",Vehicle_Registration_Number: \"TRE555GP\", Provider_Name: 'All Auto Repair',Vehicle_Repair_Cost: \"1547.55\" ,Vehicle_Repair_Date_Started: new Date(2020, 1, 1), Vehicle_Repair_Date_Ended: new Date(2020, 10, 1), Status_Description: 'In Progress'},\r\n    {VehicleRepair_ID: \"3\",VRD_Invoice: \"Toyota-Menlyn-Agrilog-Invoice.pdf\",Vehicle_Registration_Number: \"TRE555GP\", Provider_Name: 'Toyota-Menlyn',Vehicle_Repair_Cost: \"84555\" ,Vehicle_Repair_Date_Started: new Date(2020, 1, 1), Vehicle_Repair_Date_Ended: new Date(2020, 10, 1), Status_Description: 'Completed'},\r\n    {VehicleRepair_ID: \"4\",VRD_Invoice: \"Toyota-Menlyn-Agrilog-Invoice.pdf\",Vehicle_Registration_Number: \"TSK766GP\", Provider_Name: 'Toyota-Menlyn',Vehicle_Repair_Cost: \"65000\" ,Vehicle_Repair_Date_Started: new Date(2020, 1, 1), Vehicle_Repair_Date_Ended: new Date(2020, 10, 1), Status_Description: 'Completed'},   \r\n    {VehicleRepair_ID: \"5\",VRD_Invoice: \"All Auto Repair-Agrilog-Invoice.pdf\",Vehicle_Registration_Number: \"TSK766GP\", Provider_Name: 'All Auto Repair',Vehicle_Repair_Cost: \"55000\" ,Vehicle_Repair_Date_Started: new Date(2020, 1, 1), Vehicle_Repair_Date_Ended: new Date(2020, 10, 1), Status_Description: 'Completed'},\r\n    {VehicleRepair_ID: \"6\",VRD_Invoice: \"Toyota-Menlyn-Agrilog-Invoice.pdf\",Vehicle_Registration_Number: \"SMK420GP\", Provider_Name: 'Toyota-Menlyn',Vehicle_Repair_Cost: \"15000\" ,Vehicle_Repair_Date_Started: new Date(2020, 1, 1), Vehicle_Repair_Date_Ended: new Date(2020, 10, 1), Status_Description: 'In Progress'},   \r\n    {VehicleRepair_ID: \"7\",VRD_Invoice: \"Johns Auto Repair-Agrilog-Invoice.pdf\",Vehicle_Registration_Number: \"TSK766GP\", Provider_Name: 'Johns Auto Repair',Vehicle_Repair_Cost: \"1000\" ,Vehicle_Repair_Date_Started: new Date(2020, 1, 1), Vehicle_Repair_Date_Ended: new Date(2020, 10, 1), Status_Description: 'In Progress'}\r\n\r\n  ];\r\n  \r\nvehicles: string[] = [\r\n   \"TSK766GP\",\"TRE555GP\",\"SMK420GP\"\r\n ]\r\n\r\n providers: string[] = [\r\n   \"Toyota-Menlyn\", \"John's Auto Repair\", \"All Auto Repair\"\r\n ]\r\n\r\n statusses: string[] = [\r\n   \"In Progress\", \"Completed\"\r\n ]\r\n\r\n RepairLogEdit: RepairLogs;\r\n RepairLogAdd: RepairLogs;\r\n RepairRequestAdd: RepairRequests;\r\nAdminPriv: string;\r\nselectedValue: string;\r\nProviderSelect: string;\r\nStartDateSelected: Date;\r\nEndDateSelected: Date;\r\nStatusSelect: string;\r\n\r\nconstructor(public appSettings:AppSettings) {\r\n  this.settings = this.appSettings.settings; \r\n  this.dataSource = new MatTableDataSource<Element>(this.data);\r\n}\r\n  ngOnInit(): void {\r\n     this.AdminPriv = localStorage.getItem(\"PrivelageLevel\");\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  changeform(){\r\n    if(this.show == false){\r\n      this.show =true;\r\n      this.showAdd = false;\r\n      this.hideTable = false;\r\n      this.showRequest = false;\r\n    }\r\n  }\r\n\r\n  getRepairLogDetail(Id: number){\r\n    //Implement function to pupulate edit field and populate vehicle edit\\\r\n\r\n    this.RepairLogEdit = new RepairLogs;\r\n    this.RepairLogEdit.Vehicle_Repair_Date_Ended = this.EndDateDef;\r\n    this.RepairLogEdit.Vehicle_Repair_Date_Started = this.StartDateDef;\r\n    this.RepairLogEdit.Provider = \"Toyota-Menlyn\";\r\n    this.RepairLogEdit.Vehicle_Repair_Cost= \"1500\";\r\n    this.RepairLogEdit.Vehicle = \"TSK766GP\";\r\n    this.RepairLogEdit.VRD_Invoice = \"TSK766GP\";\r\n    this.RepairLogEdit.Status = \"In Progress\";\r\n  \r\n    this.selectedValue = this.RepairLogEdit.Vehicle;\r\n    this.ProviderSelect = this.RepairLogEdit.Provider;\r\n    this.StartDateSelected = this.RepairLogEdit.Vehicle_Repair_Date_Started;\r\n    this.EndDateSelected = this.RepairLogEdit.Vehicle_Repair_Date_Ended;\r\n    this.StatusSelect = this.RepairLogEdit.Status;\r\n\r\n\r\n    this.changeform();\r\n  }\r\n\r\n  AddRepairLog(){\r\n    if(this.show == true){\r\n         this.show = false;\r\n    }\r\n    this.RepairLogAdd = new RepairLogs;\r\n    this.showAdd = true;\r\n    this.hideTable = false;\r\n    this.showRequest = false;\r\n  }\r\n\r\n  SendNotification(){\r\n    if(this.show == true){\r\n         this.show = false;\r\n    }\r\n    this.RepairRequestAdd = new RepairRequests;\r\n    this.showAdd = false;\r\n    this.showRequest = true;\r\n    this.hideTable = false;\r\n  }\r\n\r\n  GenerateReport(){\r\n    alert(\"Report generated successfully!\")\r\n  }\r\n\r\n  PutRepairLog(){\r\n    if(this.RepairLogAdd.Vehicle_Repair_Date_Started > this.RepairLogAdd.Vehicle_Repair_Date_Ended){\r\n\r\n      alert(\"Please check that the start date provided preceeds the end date provided!\");\r\n\r\n    }else{\r\n      alert(\"Done\");\r\n    }\r\n  }\r\n\r\n  PutRepairRequest(){\r\n      alert(\"Done\");\r\n  }\r\n\r\n  deleteRepairLog(){\r\n    alert(\"Are you sure\");\r\n  }\r\n\r\n  back(){\r\n    this.show = false;\r\n    this.hideTable = true;\r\n    this.showAdd = false;\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlcXVlc3QtZW1haWwvcmVxdWVzdC1lbWFpbC5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-request-email',\r\n  templateUrl: './request-email.component.html',\r\n  styleUrls: ['./request-email.component.scss']\r\n})\r\nexport class RequestEmailComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  back(){\r\n    \r\n  }\r\n\r\n}\r\n","export default \".mat-column-is_Active {\\n  word-wrap: break-word !important;\\n  white-space: unset !important;\\n  flex: 0 0 5% !important;\\n  width: 28% !important;\\n  overflow-wrap: break-word;\\n  word-wrap: break-word;\\n  word-break: break-word;\\n  -ms-hyphens: auto;\\n  -webkit-hyphens: auto;\\n  hyphens: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2NoZWR1bGVkdGFza3MvRDpcXDM3MFxcRmluYWxGcm9udGVuZC9zcmNcXGFwcFxcc2NoZWR1bGVkdGFza3NcXHNjaGVkdWxlZHRhc2tzLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9zY2hlZHVsZWR0YXNrcy9zY2hlZHVsZWR0YXNrcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdDQUFBO0VBQ0EsNkJBQUE7RUFDQSx1QkFBQTtFQUNBLHFCQUFBO0VBQ0EseUJBQUE7RUFDQSxxQkFBQTtFQUVBLHNCQUFBO0VBRUEsaUJBQUE7RUFFQSxxQkFBQTtFQUNBLGFBQUE7QUNESiIsImZpbGUiOiJzcmMvYXBwL3NjaGVkdWxlZHRhc2tzL3NjaGVkdWxlZHRhc2tzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1jb2x1bW4taXNfQWN0aXZlIHtcclxuICAgIHdvcmQtd3JhcDogYnJlYWstd29yZCAhaW1wb3J0YW50O1xyXG4gICAgd2hpdGUtc3BhY2U6IHVuc2V0ICFpbXBvcnRhbnQ7XHJcbiAgICBmbGV4OiAwIDAgNSUgIWltcG9ydGFudDtcclxuICAgIHdpZHRoOiAyOCUgIWltcG9ydGFudDtcclxuICAgIG92ZXJmbG93LXdyYXA6IGJyZWFrLXdvcmQ7XHJcbiAgICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XHJcbiAgXHJcbiAgICB3b3JkLWJyZWFrOiBicmVhay13b3JkO1xyXG4gIFxyXG4gICAgLW1zLWh5cGhlbnM6IGF1dG87XHJcbiAgICAtbW96LWh5cGhlbnM6IGF1dG87XHJcbiAgICAtd2Via2l0LWh5cGhlbnM6IGF1dG87XHJcbiAgICBoeXBoZW5zOiBhdXRvO1xyXG4gIH0iLCIubWF0LWNvbHVtbi1pc19BY3RpdmUge1xuICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQgIWltcG9ydGFudDtcbiAgd2hpdGUtc3BhY2U6IHVuc2V0ICFpbXBvcnRhbnQ7XG4gIGZsZXg6IDAgMCA1JSAhaW1wb3J0YW50O1xuICB3aWR0aDogMjglICFpbXBvcnRhbnQ7XG4gIG92ZXJmbG93LXdyYXA6IGJyZWFrLXdvcmQ7XG4gIHdvcmQtd3JhcDogYnJlYWstd29yZDtcbiAgd29yZC1icmVhazogYnJlYWstd29yZDtcbiAgLW1zLWh5cGhlbnM6IGF1dG87XG4gIC1tb3otaHlwaGVuczogYXV0bztcbiAgLXdlYmtpdC1oeXBoZW5zOiBhdXRvO1xuICBoeXBoZW5zOiBhdXRvO1xufSJdfQ== */\";","import {  OnInit } from '@angular/core';\r\nimport { Settings } from '../app.settings.model';\r\nimport { AppSettings } from '../app.settings';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Component, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { ScheduledTasks } from '../Models/ScheduledTasks';\r\nimport { FormControl } from '@angular/forms';\r\n\r\nexport interface Element {\r\nSchedule_ID: string;\r\nDay_Description: string;\r\nSchedule_Start_Date: Date;\r\nSchedule_End_Date: Date;\r\nTask_Description: string;\r\nStaff_Name: string;\r\nStatus_Description: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-scheduledtasks',\r\n  templateUrl: './scheduledtasks.component.html',\r\n  styleUrls: ['./scheduledtasks.component.scss']\r\n})\r\nexport class ScheduledtasksComponent implements OnInit {\r\n  public displayedColumns = ['Schedule_ID', 'Day_Description', 'Task_Description','Staff_Name', 'Schedule_Start_Date', 'Schedule_End_Date', 'Status_Description','Actions'];\r\n  public dataSource: any;\r\n\r\n  months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n  disableTask: boolean;\r\n  disableStaff: boolean;\r\n\r\n  recurring: boolean;\r\n  once: boolean = false;\r\n\r\n  DateDifference: number;\r\n  Start_Date: Date;\r\n  StartString: string;\r\n  StartSelected: boolean = false;\r\n  EndSelected: boolean = false;\r\n  DaySelected: boolean = false;\r\n\r\n  StartDateDef = new Date('1970-01-01');\r\n  EndDateDef = new Date(2020, 11, 10);\r\n  public settings: Settings;\r\n\r\n  show: boolean = false;\r\n  showAdd: boolean = false;\r\n  hideTable: boolean = true;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  //StartDateDef\r\n\r\n data: Element[] = [\r\n    {Schedule_ID: \"1\",Day_Description: \"Monday\", Task_Description: 'Feed Chickens',Staff_Name: \"John\" ,Schedule_Start_Date: new Date(2020, 1, 1), Schedule_End_Date: new Date(2020, 10, 1), Status_Description: 'Completed'},\r\n    {Schedule_ID: \"2\",Day_Description: \"Monday\", Task_Description: 'Fix Fence',Staff_Name: \"Jack\" ,Schedule_Start_Date: new Date(2020, 1, 1), Schedule_End_Date: new Date(2020, 10, 1), Status_Description: 'In Progress'},\r\n    {Schedule_ID: \"3\",Day_Description: \"Tuesday\", Task_Description: 'Feed Chickens',Staff_Name: \"Janice\" ,Schedule_Start_Date: new Date(2020, 1, 1), Schedule_End_Date: new Date(2020, 10, 1), Status_Description: 'Completed'},\r\n    {Schedule_ID: \"4\",Day_Description: \"Wednesday\", Task_Description: 'Mow Lawn',Staff_Name: \"John\" ,Schedule_Start_Date: new Date(2020, 1, 1), Schedule_End_Date: new Date(2020, 10, 1), Status_Description: 'Completed'},   \r\n    {Schedule_ID: \"5\",Day_Description: \"Monday\", Task_Description: 'Fix Fence',Staff_Name: \"Janice\" ,Schedule_Start_Date: new Date(2020, 1, 1), Schedule_End_Date: new Date(2020, 10, 1), Status_Description: 'In Progress'},\r\n    {Schedule_ID: \"6\",Day_Description: \"Saturday\", Task_Description: 'Mow Lawn',Staff_Name: \"Jack\" ,Schedule_Start_Date: new Date(2020, 1, 1), Schedule_End_Date: new Date(2020, 10, 1), Status_Description: 'In Progress'},   \r\n    {Schedule_ID: \"7\",Day_Description: \"Wednesday\", Task_Description: 'Fix Fence',Staff_Name: \"Jack\" ,Schedule_Start_Date: new Date(2020, 1, 1), Schedule_End_Date: new Date(2020, 10, 1), Status_Description: 'Completed'}\r\n\r\n  ];\r\n  \r\n  \r\ndays: string[] = [\r\n   \"Monday\",\"Tuesday\",\"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"\r\n ]\r\n\r\ntasks: string[] = [\r\n   \"Fix Fence\", \"Mow Lawn\", \"Feed Chickens\"\r\n ]\r\n\r\n staff: string[] = [\r\n   \"John\", \"Jack\", \"Janice\"\r\n ]\r\n\r\n statusses: string[] = [\r\n  \"In Progress\", \"Completed\"\r\n]\r\n\r\n ScheduledTaskEdit: ScheduledTasks;\r\n ScheduledTaskAdd: ScheduledTasks;\r\nAdminPriv: string;\r\nDaySelect: string;\r\nTaskSelect: string;\r\nStaffSelect: string;\r\nStatusSelect: string;\r\nStartDateSelected: Date;\r\nEndDateSelected: Date;\r\n\r\nconstructor(public appSettings:AppSettings) {\r\n  this.settings = this.appSettings.settings; \r\n  this.dataSource = new MatTableDataSource<Element>(this.data);\r\n}\r\n  ngOnInit(): void {\r\n     this.AdminPriv = localStorage.getItem(\"PrivelageLevel\");\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  changeform(){\r\n    if(this.show == false){\r\n      this.show =true;\r\n      this.showAdd = false;\r\n      this.hideTable = false;\r\n    }\r\n  }\r\n\r\n  getScheduledTaskDetail(Id: number){\r\n    //Implement function to pupulate edit field and populate vehicle edit\\\r\n    this.ScheduledTaskEdit = new ScheduledTasks;\r\n    this.ScheduledTaskEdit.Schedule_End_Date = this.EndDateDef;\r\n    this.ScheduledTaskEdit.Schedule_Start_Date = this.StartDateDef;\r\n    this.ScheduledTaskEdit.Day = \"Monday\";\r\n    this.ScheduledTaskEdit.Task= \"Mow Lawn\";\r\n    this.ScheduledTaskEdit.Staff = \"John\";\r\n    this.ScheduledTaskEdit.Status = \"In Progress\";\r\n  \r\n    this.TaskSelect = this.ScheduledTaskEdit.Task;\r\n    this.DaySelect = this.ScheduledTaskEdit.Day;\r\n    this.StaffSelect = this.ScheduledTaskEdit.Staff;\r\n    this.StartDateSelected = this.ScheduledTaskEdit.Schedule_Start_Date;\r\n    this.EndDateSelected = this.ScheduledTaskEdit.Schedule_End_Date;\r\n    this.StatusSelect = this.ScheduledTaskEdit.Status;\r\n\r\n    this.changeform();\r\n    this.recurring = true;\r\n    this.once = false;\r\n  }\r\n\r\n  AddScheduledTask(){\r\n    if(this.show == true){\r\n         this.show = false;\r\n    }\r\n    this.ScheduledTaskAdd = new ScheduledTasks;\r\n    this.showAdd = true;\r\n    this.hideTable = false;\r\n    this.recurring = true;\r\n    this.once = false;\r\n  }\r\n\r\n  onChangeRecurring(){\r\n    this.once = !this.once;\r\n    this.recurring != this.recurring;\r\n  }\r\n\r\n  onChangeStartDate(event){\r\n    this.StartSelected = true;\r\n    if(this.StartSelected = true && this.EndSelected == true && this.DaySelected == true || this.once == true && this.StartSelected == true){\r\n      this.disableTask = true;\r\n    } \r\n  }\r\n\r\n  onChangeEndDate(event){\r\n    this.EndSelected = true;\r\n    if(this.StartSelected = true && this.EndSelected == true && this.DaySelected == true){\r\n      this.disableTask = true;\r\n    } \r\n  }\r\n\r\n   onChangeDay(event){\r\n    this.DaySelected = true;\r\n    if(this.StartSelected = true && this.EndSelected == true && this.DaySelected == true){\r\n      this.disableTask = true;\r\n    } \r\n  }\r\n\r\n  onChangeTask(){\r\n    this.disableStaff = true;\r\n  }\r\n\r\n  PutScheduledTask(){\r\n    if(this.recurring = true && this.once == false){\r\n      this.DateDifference = Math.floor((Date.UTC(this.ScheduledTaskAdd.Schedule_End_Date.getFullYear(), this.ScheduledTaskAdd.Schedule_End_Date.getMonth(), this.ScheduledTaskAdd.Schedule_End_Date.getDate()) - Date.UTC(this.ScheduledTaskAdd.Schedule_Start_Date.getFullYear(), this.ScheduledTaskAdd.Schedule_Start_Date.getMonth(), this.ScheduledTaskAdd.Schedule_Start_Date.getDate()) ) /(1000 * 60 * 60 * 24));\r\n      if(this.ScheduledTaskAdd.Schedule_Start_Date > this.ScheduledTaskAdd.Schedule_End_Date){\r\n\r\n        alert(\"Please check that the start date provided preceds the end date provided!\");\r\n  \r\n      }else if(this.DateDifference > 183){\r\n  \r\n        alert(\"The time period may not exceed 6 months, please review your selection!\")\r\n  \r\n      }else {\r\n  \r\n        alert(\"Done!\")\r\n  \r\n      }\r\n      //this.StartString = this.DateDifference.toString();\r\n    }else if(this.once = true && this.recurring == false) {\r\n\r\n      alert(\"Done!\")\r\n      \r\n    }\r\n\r\n  }\r\n\r\n  deleteScheduledTask(){\r\n    alert(\"Are you sure\");\r\n  }\r\n\r\n  GenerateSchedules(){\r\n    alert(\"Daily Schedules have been generated successfully!\");\r\n  }\r\n\r\n  SendSchedules(){\r\n    alert(\"Daily Schedules have been sent successfully!\");\r\n  }\r\n\r\n  back(){\r\n    this.show = false;\r\n    this.hideTable = true;\r\n    this.showAdd = false;\r\n  }\r\n\r\n}\r\n\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlY3Rpb24tcmVwb3J0L3NlY3Rpb24tcmVwb3J0LmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-section-report',\r\n  templateUrl: './section-report.component.html',\r\n  styleUrls: ['./section-report.component.scss']\r\n})\r\nexport class SectionReportComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  generateReport(){\r\n\r\n  }\r\n\r\n  Cancel(){\r\n\r\n  }\r\n}\r\n","export default \".mat-column-is_Active {\\n  word-wrap: break-word !important;\\n  white-space: unset !important;\\n  flex: 0 0 5% !important;\\n  width: 28% !important;\\n  overflow-wrap: break-word;\\n  word-wrap: break-word;\\n  word-break: break-word;\\n  -ms-hyphens: auto;\\n  -webkit-hyphens: auto;\\n  hyphens: auto;\\n}\\n\\nmat-header-cell {\\n  background-color: #308b30;\\n  font-size: 16px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2VjdGlvbi10eXBlL0Q6XFwzNzBcXEZpbmFsRnJvbnRlbmQvc3JjXFxhcHBcXHNlY3Rpb24tdHlwZVxcc2VjdGlvbi10eXBlLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9zZWN0aW9uLXR5cGUvc2VjdGlvbi10eXBlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZ0NBQUE7RUFDQSw2QkFBQTtFQUNBLHVCQUFBO0VBQ0EscUJBQUE7RUFDQSx5QkFBQTtFQUNBLHFCQUFBO0VBRUEsc0JBQUE7RUFFQSxpQkFBQTtFQUVBLHFCQUFBO0VBQ0EsYUFBQTtBQ0RKOztBRElFO0VBQ0UseUJBQUE7RUFDQSxlQUFBO0FDREoiLCJmaWxlIjoic3JjL2FwcC9zZWN0aW9uLXR5cGUvc2VjdGlvbi10eXBlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1jb2x1bW4taXNfQWN0aXZlIHtcclxuICAgIHdvcmQtd3JhcDogYnJlYWstd29yZCAhaW1wb3J0YW50O1xyXG4gICAgd2hpdGUtc3BhY2U6IHVuc2V0ICFpbXBvcnRhbnQ7XHJcbiAgICBmbGV4OiAwIDAgNSUgIWltcG9ydGFudDtcclxuICAgIHdpZHRoOiAyOCUgIWltcG9ydGFudDtcclxuICAgIG92ZXJmbG93LXdyYXA6IGJyZWFrLXdvcmQ7XHJcbiAgICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XHJcbiAgXHJcbiAgICB3b3JkLWJyZWFrOiBicmVhay13b3JkO1xyXG4gIFxyXG4gICAgLW1zLWh5cGhlbnM6IGF1dG87XHJcbiAgICAtbW96LWh5cGhlbnM6IGF1dG87XHJcbiAgICAtd2Via2l0LWh5cGhlbnM6IGF1dG87XHJcbiAgICBoeXBoZW5zOiBhdXRvO1xyXG4gIH1cclxuXHJcbiAgbWF0LWhlYWRlci1jZWxse1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDQ4LDEzOSw0OCk7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbn0iLCIubWF0LWNvbHVtbi1pc19BY3RpdmUge1xuICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQgIWltcG9ydGFudDtcbiAgd2hpdGUtc3BhY2U6IHVuc2V0ICFpbXBvcnRhbnQ7XG4gIGZsZXg6IDAgMCA1JSAhaW1wb3J0YW50O1xuICB3aWR0aDogMjglICFpbXBvcnRhbnQ7XG4gIG92ZXJmbG93LXdyYXA6IGJyZWFrLXdvcmQ7XG4gIHdvcmQtd3JhcDogYnJlYWstd29yZDtcbiAgd29yZC1icmVhazogYnJlYWstd29yZDtcbiAgLW1zLWh5cGhlbnM6IGF1dG87XG4gIC1tb3otaHlwaGVuczogYXV0bztcbiAgLXdlYmtpdC1oeXBoZW5zOiBhdXRvO1xuICBoeXBoZW5zOiBhdXRvO1xufVxuXG5tYXQtaGVhZGVyLWNlbGwge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzA4YjMwO1xuICBmb250LXNpemU6IDE2cHg7XG59Il19 */\";","import {  OnInit } from '@angular/core';\r\nimport { Settings } from 'src/app/app.settings.model';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Component, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { SectionTypes } from 'src/app/Models/SectionType';\r\n\r\nexport interface Element {\r\n  Section_Type_ID: string;\r\n  Section_Type_Description: string;\r\n  }\r\n\r\n@Component({\r\n  selector: 'app-section-type',\r\n  templateUrl: './section-type.component.html',\r\n  styleUrls: ['./section-type.component.scss']\r\n})\r\nexport class SectionTypeComponent implements OnInit {\r\n\r\n  public displayedColumns = ['Section_Type_ID', 'Section_Type_Description',\"Actions\"];\r\n  public dataSource: any;\r\n  public settings: Settings;\r\n  show: boolean = false;\r\n  showAdd: boolean = false;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n data: Element[] = [\r\n    {Section_Type_ID: \"1\",Section_Type_Description: \"Field\"},\r\n    {Section_Type_ID: \"2\",Section_Type_Description: \"Livestock\"},\r\n    {Section_Type_ID: \"3\",Section_Type_Description: \"Land\"},\r\n  ];\r\n  \r\n types: string[] = [\r\n   \"Field\",\"Livestock\",\"Land\"\r\n ]\r\n\r\nSectionTypeEdit: SectionTypes;\r\nSectionTypeAdd: SectionTypes;\r\nAdminPriv: string;\r\nselectedValue: string;\r\nSectionSelect: string;\r\n  constructor(public appSettings:AppSettings) {\r\n    this.settings = this.appSettings.settings; \r\n    this.dataSource = new MatTableDataSource<Element>(this.data);\r\n  }\r\n  ngOnInit(): void {\r\n     this.AdminPriv = localStorage.getItem(\"PrivelageLevel\");\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  changeform(){\r\n    if(this.show == false){\r\n      this.show =true;\r\n      this.showAdd = false;\r\n    }\r\n  }\r\n\r\n  getSectionTypeDetail(Id: number){\r\n    //Implement function to pupulate edit field and populate vehicle edit\\\r\n    this.SectionTypeEdit = new SectionTypes;\r\n    this.SectionTypeEdit.Section_Type_Description = \"New Type\";\r\n    this.changeform();\r\n  }\r\n\r\n  AddSectionType(){\r\n    if(this.show == true){\r\n         this.show = false;\r\n    }\r\n    this.SectionTypeAdd = new SectionTypes;\r\n    this.showAdd = true;\r\n  }\r\n\r\n  PutSectionType(){\r\n    alert(\"Done\");\r\n  }\r\n\r\n  deleteSectionType(){\r\n    alert(\"Are you sure\");\r\n  }\r\n\r\n}\r\n","export default \".mat-column-is_Active {\\n  word-wrap: break-word !important;\\n  white-space: unset !important;\\n  flex: 0 0 5% !important;\\n  width: 28% !important;\\n  overflow-wrap: break-word;\\n  word-wrap: break-word;\\n  word-break: break-word;\\n  -ms-hyphens: auto;\\n  -webkit-hyphens: auto;\\n  hyphens: auto;\\n}\\n\\nmat-header-cell {\\n  background-color: #308b30;\\n  font-size: 16px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2VjdGlvbi9EOlxcMzcwXFxGaW5hbEZyb250ZW5kL3NyY1xcYXBwXFxzZWN0aW9uXFxzZWN0aW9uLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9zZWN0aW9uL3NlY3Rpb24uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxnQ0FBQTtFQUNBLDZCQUFBO0VBQ0EsdUJBQUE7RUFDQSxxQkFBQTtFQUNBLHlCQUFBO0VBQ0EscUJBQUE7RUFFQSxzQkFBQTtFQUVBLGlCQUFBO0VBRUEscUJBQUE7RUFDQSxhQUFBO0FDREo7O0FESUU7RUFDRSx5QkFBQTtFQUNBLGVBQUE7QUNESiIsImZpbGUiOiJzcmMvYXBwL3NlY3Rpb24vc2VjdGlvbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtY29sdW1uLWlzX0FjdGl2ZSB7XHJcbiAgICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQgIWltcG9ydGFudDtcclxuICAgIHdoaXRlLXNwYWNlOiB1bnNldCAhaW1wb3J0YW50O1xyXG4gICAgZmxleDogMCAwIDUlICFpbXBvcnRhbnQ7XHJcbiAgICB3aWR0aDogMjglICFpbXBvcnRhbnQ7XHJcbiAgICBvdmVyZmxvdy13cmFwOiBicmVhay13b3JkO1xyXG4gICAgd29yZC13cmFwOiBicmVhay13b3JkO1xyXG4gIFxyXG4gICAgd29yZC1icmVhazogYnJlYWstd29yZDtcclxuICBcclxuICAgIC1tcy1oeXBoZW5zOiBhdXRvO1xyXG4gICAgLW1vei1oeXBoZW5zOiBhdXRvO1xyXG4gICAgLXdlYmtpdC1oeXBoZW5zOiBhdXRvO1xyXG4gICAgaHlwaGVuczogYXV0bztcclxuICB9XHJcblxyXG4gIG1hdC1oZWFkZXItY2VsbHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYig0OCwxMzksNDgpO1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG59IiwiLm1hdC1jb2x1bW4taXNfQWN0aXZlIHtcbiAgd29yZC13cmFwOiBicmVhay13b3JkICFpbXBvcnRhbnQ7XG4gIHdoaXRlLXNwYWNlOiB1bnNldCAhaW1wb3J0YW50O1xuICBmbGV4OiAwIDAgNSUgIWltcG9ydGFudDtcbiAgd2lkdGg6IDI4JSAhaW1wb3J0YW50O1xuICBvdmVyZmxvdy13cmFwOiBicmVhay13b3JkO1xuICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XG4gIHdvcmQtYnJlYWs6IGJyZWFrLXdvcmQ7XG4gIC1tcy1oeXBoZW5zOiBhdXRvO1xuICAtbW96LWh5cGhlbnM6IGF1dG87XG4gIC13ZWJraXQtaHlwaGVuczogYXV0bztcbiAgaHlwaGVuczogYXV0bztcbn1cblxubWF0LWhlYWRlci1jZWxsIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzMwOGIzMDtcbiAgZm9udC1zaXplOiAxNnB4O1xufSJdfQ== */\";","import {  OnInit } from '@angular/core';\r\nimport { Settings } from 'src/app/app.settings.model';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Component, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { Sections } from 'src/app/Models/Section';\r\n\r\nexport interface Element {\r\n  Section_Type_Description: string;\r\n  Section_ID: string;\r\n  Section_Name: string;\r\n  Section_Location: string;\r\n  Section_Size: string;\r\n  }\r\n\r\n@Component({\r\n  selector: 'app-section',\r\n  templateUrl: './section.component.html',\r\n  styleUrls: ['./section.component.scss']\r\n})\r\nexport class SectionComponent implements OnInit {\r\n\r\n  public displayedColumns = ['Section_ID', 'Section_Type_Description','Section_Location','Section_Size','Actions'];\r\n  public dataSource: any;\r\n  public settings: Settings;\r\n  show: boolean = false;\r\n  showAdd: boolean = false;\r\n  hideTable: boolean = true;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n data: Element[] = [\r\n    {Section_ID: \"1\", Section_Name:\"Oop grond\", Section_Type_Description: \"Field\", Section_Location: \"Noord van huis\", Section_Size: \"2 km²\"},\r\n    {Section_ID: \"2\", Section_Name:\"Bees Kraal\", Section_Type_Description: \"Livestock\", Section_Location: \"Langs Stoor\", Section_Size: \"5 km²\"},\r\n    {Section_ID: \"3\", Section_Name:\"Mielies 1\", Section_Type_Description: \"Land\", Section_Location: \"Wes van stoor\", Section_Size: \"1 km²\"},\r\n  ];\r\n  \r\n types: string[] = [\r\n   \"Field\",\"Land\",\"Livestock\"\r\n ]\r\n\r\nSectionEdit: Sections;\r\nSectionAdd: Sections;\r\nAdminPriv: string;\r\nselectedValue: string;\r\nSectionTypeSelect: string;\r\nInfrastructureSelect: string;\r\n  constructor(public appSettings:AppSettings) {\r\n    this.settings = this.appSettings.settings; \r\n    this.dataSource = new MatTableDataSource<Element>(this.data);\r\n  }\r\n  ngOnInit(): void {\r\n     this.AdminPriv = localStorage.getItem(\"PrivelageLevel\");\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  changeform(){\r\n    if(this.show == false){\r\n      this.show =true;\r\n      this.showAdd = false;\r\n      this.hideTable = false;\r\n    }\r\n  }\r\n\r\n  getSectionDetail(Id: number){\r\n    //Implement function to pupulate edit field and populate vehicle edit\\\r\n    this.SectionEdit = new Sections;\r\n    this.SectionEdit.Section_Type_Description = \"New Type\";\r\n    this.changeform();\r\n  }\r\n\r\n  AddSection(){\r\n    if(this.show == true){\r\n         this.show = false;\r\n    }\r\n    this.SectionAdd = new Sections;\r\n    this.showAdd = true;\r\n    this.hideTable = false;\r\n  }\r\n\r\n  PutSection(){\r\n    alert(\"Done\");\r\n  }\r\n\r\n  deleteSection(){\r\n    alert(\"Are you sure\");\r\n  }\r\n\r\n  back(){\r\n    this.show = false;\r\n    this.hideTable = true;\r\n    this.showAdd = false\r\n  }\r\n\r\n  SectionTypes(){\r\n    \r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FlexLayoutModule,\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatStepperModule\r\n  ],\r\n  exports: [\r\n    FlexLayoutModule,\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatStepperModule\r\n  ],\r\n  declarations: []\r\n})\r\nexport class SharedModule { }\r\n","export default \".mat-column-is_Active {\\n  word-wrap: break-word !important;\\n  white-space: unset !important;\\n  flex: 0 0 5% !important;\\n  width: 28% !important;\\n  overflow-wrap: break-word;\\n  word-wrap: break-word;\\n  word-break: break-word;\\n  -ms-hyphens: auto;\\n  -webkit-hyphens: auto;\\n  hyphens: auto;\\n}\\n\\nh1 {\\n  text-align: center;\\n}\\n\\nmat-header-cell {\\n  background-color: #308b30;\\n  font-size: 16px;\\n}\\n\\n#provideLabel {\\n  text-align: center;\\n  font-size: 14px;\\n  margin-left: 43%;\\n}\\n\\nmat-card {\\n  width: 70%;\\n  align-items: center;\\n  margin-left: 15%;\\n}\\n\\n#endButton {\\n  width: 15%;\\n  margin: 0%;\\n  align-items: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2tpbGwvRDpcXDM3MFxcRmluYWxGcm9udGVuZC9zcmNcXGFwcFxcc2tpbGxcXHNraWxsLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9za2lsbC9za2lsbC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdDQUFBO0VBQ0EsNkJBQUE7RUFDQSx1QkFBQTtFQUNBLHFCQUFBO0VBQ0EseUJBQUE7RUFDQSxxQkFBQTtFQUVBLHNCQUFBO0VBRUEsaUJBQUE7RUFFQSxxQkFBQTtFQUNBLGFBQUE7QUNESjs7QURHRTtFQUNFLGtCQUFBO0FDQUo7O0FER0E7RUFDRSx5QkFBQTtFQUNBLGVBQUE7QUNBRjs7QURFQTtFQUNFLGtCQUFBO0VBQ0EsZUFBQTtFQUNBLGdCQUFBO0FDQ0Y7O0FEQ0E7RUFDRSxVQUFBO0VBQ0EsbUJBQUE7RUFDQSxnQkFBQTtBQ0VGOztBRENBO0VBQ0UsVUFBQTtFQUNBLFVBQUE7RUFDQSxtQkFBQTtBQ0VGIiwiZmlsZSI6InNyYy9hcHAvc2tpbGwvc2tpbGwuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWNvbHVtbi1pc19BY3RpdmUge1xyXG4gICAgd29yZC13cmFwOiBicmVhay13b3JkICFpbXBvcnRhbnQ7XHJcbiAgICB3aGl0ZS1zcGFjZTogdW5zZXQgIWltcG9ydGFudDtcclxuICAgIGZsZXg6IDAgMCA1JSAhaW1wb3J0YW50O1xyXG4gICAgd2lkdGg6IDI4JSAhaW1wb3J0YW50O1xyXG4gICAgb3ZlcmZsb3ctd3JhcDogYnJlYWstd29yZDtcclxuICAgIHdvcmQtd3JhcDogYnJlYWstd29yZDtcclxuICBcclxuICAgIHdvcmQtYnJlYWs6IGJyZWFrLXdvcmQ7XHJcbiAgXHJcbiAgICAtbXMtaHlwaGVuczogYXV0bztcclxuICAgIC1tb3otaHlwaGVuczogYXV0bztcclxuICAgIC13ZWJraXQtaHlwaGVuczogYXV0bztcclxuICAgIGh5cGhlbnM6IGF1dG87XHJcbiAgfVxyXG4gIGgxe1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG5tYXQtaGVhZGVyLWNlbGx7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDQ4LCAxMzksIDQ4KTtcclxuICBmb250LXNpemU6IDE2cHg7XHJcbn1cclxuI3Byb3ZpZGVMYWJlbHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgZm9udC1zaXplOiAxNHB4O1xyXG4gIG1hcmdpbi1sZWZ0OiA0MyU7XHJcbn1cclxubWF0LWNhcmR7XHJcbiAgd2lkdGg6NzAlO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgbWFyZ2luLWxlZnQ6MTUlO1xyXG5cclxufVxyXG4jZW5kQnV0dG9ue1xyXG4gIHdpZHRoOiAxNSU7XHJcbiAgbWFyZ2luOjAlOyBcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cclxufSIsIi5tYXQtY29sdW1uLWlzX0FjdGl2ZSB7XG4gIHdvcmQtd3JhcDogYnJlYWstd29yZCAhaW1wb3J0YW50O1xuICB3aGl0ZS1zcGFjZTogdW5zZXQgIWltcG9ydGFudDtcbiAgZmxleDogMCAwIDUlICFpbXBvcnRhbnQ7XG4gIHdpZHRoOiAyOCUgIWltcG9ydGFudDtcbiAgb3ZlcmZsb3ctd3JhcDogYnJlYWstd29yZDtcbiAgd29yZC13cmFwOiBicmVhay13b3JkO1xuICB3b3JkLWJyZWFrOiBicmVhay13b3JkO1xuICAtbXMtaHlwaGVuczogYXV0bztcbiAgLW1vei1oeXBoZW5zOiBhdXRvO1xuICAtd2Via2l0LWh5cGhlbnM6IGF1dG87XG4gIGh5cGhlbnM6IGF1dG87XG59XG5cbmgxIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG5tYXQtaGVhZGVyLWNlbGwge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzA4YjMwO1xuICBmb250LXNpemU6IDE2cHg7XG59XG5cbiNwcm92aWRlTGFiZWwge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgbWFyZ2luLWxlZnQ6IDQzJTtcbn1cblxubWF0LWNhcmQge1xuICB3aWR0aDogNzAlO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBtYXJnaW4tbGVmdDogMTUlO1xufVxuXG4jZW5kQnV0dG9uIHtcbiAgd2lkdGg6IDE1JTtcbiAgbWFyZ2luOiAwJTtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn0iXX0= */\";","import {  OnInit } from '@angular/core';\r\nimport { Settings } from '../app.settings.model';\r\nimport { AppSettings } from '../app.settings';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Component, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { Skill } from '../Models/Skill'\r\nimport { RouterLink, ActivatedRoute, Router } from '@angular/router';\r\n\r\nexport interface Element {\r\n  Skill_ID:number;\r\n  Skill_Description:string;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-skill',\r\n  templateUrl: './skill.component.html',\r\n  styleUrls: ['./skill.component.scss']\r\n})\r\nexport class SkillComponent implements OnInit {\r\n\r\n  public displayedColumns = ['Skill_ID', 'Skill_Description','Actions'];\r\n  public dataSource: any;\r\n  public settings: Settings;\r\n  show: boolean = false;\r\n  showAdd: boolean = false;\r\n  hideTable:boolean=true;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n data: Element[] = [\r\n    {Skill_ID: 1,Skill_Description: \"Mechanic\"},\r\n    {Skill_ID: 2,Skill_Description: \"Plumbing\"},\r\n    {Skill_ID: 3,Skill_Description: \"Livestock skills\"},\r\n\r\n  ];\r\n  \r\n\r\nSkillEdit: Skill;\r\nSkillAdd: Skill;\r\nAdminPriv: string;\r\nselectedValue: string;\r\n\r\n  constructor(public appSettings:AppSettings, private router:Router) {\r\n    this.settings = this.appSettings.settings; \r\n    this.dataSource = new MatTableDataSource<Element>(this.data);\r\n  }\r\n  ngOnInit(): void {\r\n     this.AdminPriv = localStorage.getItem(\"PrivelageLevel\");\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  changeform(){\r\n    if(this.show == false){\r\n      this.show =true;\r\n      this.showAdd = false;\r\n      this.hideTable=false;\r\n    }\r\n  }\r\n\r\n  getSkillDetail(Id: number){\r\n    //Implement function to pupulate edit field and populate vehicle edit\\\r\n    this.SkillEdit = new Skill;\r\n    this.SkillEdit.Skill_Description = \"Crops\";\r\n    this.changeform();\r\n  }\r\n\r\n  AddSkill(){\r\n    if(this.show == true){\r\n         this.show = false;\r\n    }\r\n    this.SkillAdd = new Skill;\r\n    this.showAdd = true;\r\n    this.hideTable=false;\r\n  }\r\n\r\n  PutSkill(){\r\n    alert(\"Done\");\r\n  }\r\n\r\n  deleteSkill(){\r\n    alert(\"Are you sure\");\r\n  }\r\n\r\n  download(){\r\n    alert(\"Download successful\")\r\n  }\r\n\r\n  back()\r\n  {\r\n    this.show=false;\r\n    this.hideTable=true;\r\n    this.showAdd=false;\r\n  }\r\n}\r\n\r\n","export default \".mat-column-is_Active {\\n  word-wrap: break-word !important;\\n  white-space: unset !important;\\n  flex: 0 0 5% !important;\\n  width: 28% !important;\\n  overflow-wrap: break-word;\\n  word-wrap: break-word;\\n  word-break: break-word;\\n  -ms-hyphens: auto;\\n  -webkit-hyphens: auto;\\n  hyphens: auto;\\n}\\n\\nmat-header-cell {\\n  background-color: #308b30;\\n  font-size: 16px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc3ItcHJvdmlkZXIvRDpcXDM3MFxcRmluYWxGcm9udGVuZC9zcmNcXGFwcFxcc3ItcHJvdmlkZXJcXHNyLXByb3ZpZGVyLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9zci1wcm92aWRlci9zci1wcm92aWRlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdDQUFBO0VBQ0EsNkJBQUE7RUFDQSx1QkFBQTtFQUNBLHFCQUFBO0VBQ0EseUJBQUE7RUFDQSxxQkFBQTtFQUVBLHNCQUFBO0VBRUEsaUJBQUE7RUFFQSxxQkFBQTtFQUNBLGFBQUE7QUNESjs7QURJRTtFQUNFLHlCQUFBO0VBQ0EsZUFBQTtBQ0RKIiwiZmlsZSI6InNyYy9hcHAvc3ItcHJvdmlkZXIvc3ItcHJvdmlkZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWNvbHVtbi1pc19BY3RpdmUge1xyXG4gICAgd29yZC13cmFwOiBicmVhay13b3JkICFpbXBvcnRhbnQ7XHJcbiAgICB3aGl0ZS1zcGFjZTogdW5zZXQgIWltcG9ydGFudDtcclxuICAgIGZsZXg6IDAgMCA1JSAhaW1wb3J0YW50O1xyXG4gICAgd2lkdGg6IDI4JSAhaW1wb3J0YW50O1xyXG4gICAgb3ZlcmZsb3ctd3JhcDogYnJlYWstd29yZDtcclxuICAgIHdvcmQtd3JhcDogYnJlYWstd29yZDtcclxuICBcclxuICAgIHdvcmQtYnJlYWs6IGJyZWFrLXdvcmQ7XHJcbiAgXHJcbiAgICAtbXMtaHlwaGVuczogYXV0bztcclxuICAgIC1tb3otaHlwaGVuczogYXV0bztcclxuICAgIC13ZWJraXQtaHlwaGVuczogYXV0bztcclxuICAgIGh5cGhlbnM6IGF1dG87XHJcbiAgfVxyXG5cclxuICBtYXQtaGVhZGVyLWNlbGx7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoNDgsMTM5LDQ4KTtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxufSIsIi5tYXQtY29sdW1uLWlzX0FjdGl2ZSB7XG4gIHdvcmQtd3JhcDogYnJlYWstd29yZCAhaW1wb3J0YW50O1xuICB3aGl0ZS1zcGFjZTogdW5zZXQgIWltcG9ydGFudDtcbiAgZmxleDogMCAwIDUlICFpbXBvcnRhbnQ7XG4gIHdpZHRoOiAyOCUgIWltcG9ydGFudDtcbiAgb3ZlcmZsb3ctd3JhcDogYnJlYWstd29yZDtcbiAgd29yZC13cmFwOiBicmVhay13b3JkO1xuICB3b3JkLWJyZWFrOiBicmVhay13b3JkO1xuICAtbXMtaHlwaGVuczogYXV0bztcbiAgLW1vei1oeXBoZW5zOiBhdXRvO1xuICAtd2Via2l0LWh5cGhlbnM6IGF1dG87XG4gIGh5cGhlbnM6IGF1dG87XG59XG5cbm1hdC1oZWFkZXItY2VsbCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMDhiMzA7XG4gIGZvbnQtc2l6ZTogMTZweDtcbn0iXX0= */\";","import {  OnInit } from '@angular/core';\r\nimport { Settings } from 'src/app/app.settings.model';\r\nimport { AppSettings } from 'src/app/app.settings';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Component, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { SRProviders } from 'src/app/Models/SRProvider';\r\n\r\nexport interface Element {\r\n  Provider_ID: string;\r\n  Provider_Name: string;\r\n  Provider_Address: string;\r\n  Provider_Contact: string;\r\n  Provider_Email: string;\r\n  }\r\n\r\n@Component({\r\n  selector: 'app-srProvider',\r\n  templateUrl: './sr-provider.component.html',\r\n  styleUrls: ['./sr-provider.component.scss']\r\n})\r\nexport class SrProviderComponent implements OnInit {\r\n\r\n  public displayedColumns = ['Provider_ID', 'Provider_Name','Provider_Contact','Provider_Email','Provider_Address','Actions'];\r\n  public dataSource: any;\r\n  public settings: Settings;\r\n  show: boolean = false;\r\n  hideTable = true;\r\n  showAdd: boolean = false;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n data: Element[] = [\r\n    {Provider_ID: \"1\",Provider_Name: \"Jon Auto\", Provider_Address: \"12 Long Street Vaalpark\", Provider_Contact: \"0169761235\", Provider_Email: \"jauto@gmail.com\"},\r\n    {Provider_ID: \"2\",Provider_Name: \"Mercedes\", Provider_Address: \"13 Gutem Road Vereeniging\", Provider_Contact: \"0569667825\", Provider_Email: \"support@mercedes.com\"},\r\n    {Provider_ID: \"3\",Provider_Name: \"Piet Spares\", Provider_Address: \"8 Short Lane Sandton\", Provider_Contact: \"0139763255\", Provider_Email: \"piet@spares.com\"},\r\n  ];\r\n  \r\n types: string[] = [\r\n   \"Wiring\",\"Structural\",\"Security\", \"Miscellaneous\"\r\n ]\r\n\r\nSRProviderEdit: SRProviders;\r\nSRProviderAdd: SRProviders;\r\nAdminPriv: string;\r\nselectedValue: string;\r\nSRProviderSelect: string;\r\n\r\n  constructor(public appSettings:AppSettings) {\r\n    this.settings = this.appSettings.settings; \r\n    this.dataSource = new MatTableDataSource<Element>(this.data);\r\n  }\r\n  ngOnInit(): void {\r\n     this.AdminPriv = localStorage.getItem(\"PrivelageLevel\");\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  changeform(){\r\n    if(this.show == false){\r\n      this.show =true;\r\n      this.showAdd = false;\r\n      this.hideTable = false;\r\n    }\r\n  }\r\n\r\n  getSRProviderDetail(Id: number){\r\n    //Implement function to pupulate edit field and populate vehicle edit\\\r\n    this.SRProviderEdit = new SRProviders;\r\n    this.SRProviderEdit.Provider_Name = \"New Name\";\r\n    this.SRProviderEdit.Provider_Name = \"New Number\";\r\n    this.SRProviderEdit.Provider_Name = \"New Email\";\r\n    this.SRProviderEdit.Provider_Name = \"New Address\";\r\n    this.changeform();\r\n  }\r\n\r\n  AddSRProvider(){\r\n    if(this.show == true){\r\n         this.show = false;\r\n    }\r\n    this.SRProviderAdd = new SRProviders;\r\n    this.showAdd = true;\r\n    this.hideTable = false;\r\n  }\r\n\r\n  PutSRProvider(){\r\n    alert(\"Done\");\r\n  }\r\n\r\n  deleteSRProvider(){\r\n    alert(\"Are you sure?\");\r\n  }\r\n \r\n  back(){\r\n    this.show = false;\r\n    this.showAdd = false;\r\n    this.hideTable = true;\r\n  }\r\n}\r\n","export default \".mat-column-is_Active {\\n  word-wrap: break-word !important;\\n  white-space: unset !important;\\n  flex: 0 0 5% !important;\\n  width: 28% !important;\\n  overflow-wrap: break-word;\\n  word-wrap: break-word;\\n  word-break: break-word;\\n  -ms-hyphens: auto;\\n  -webkit-hyphens: auto;\\n  hyphens: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc3RhZmYtc2NoZWR1bGUvRDpcXDM3MFxcRmluYWxGcm9udGVuZC9zcmNcXGFwcFxcc3RhZmYtc2NoZWR1bGVcXHN0YWZmLXNjaGVkdWxlLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9zdGFmZi1zY2hlZHVsZS9zdGFmZi1zY2hlZHVsZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdDQUFBO0VBQ0EsNkJBQUE7RUFDQSx1QkFBQTtFQUNBLHFCQUFBO0VBQ0EseUJBQUE7RUFDQSxxQkFBQTtFQUVBLHNCQUFBO0VBRUEsaUJBQUE7RUFFQSxxQkFBQTtFQUNBLGFBQUE7QUNESiIsImZpbGUiOiJzcmMvYXBwL3N0YWZmLXNjaGVkdWxlL3N0YWZmLXNjaGVkdWxlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1jb2x1bW4taXNfQWN0aXZlIHtcclxuICAgIHdvcmQtd3JhcDogYnJlYWstd29yZCAhaW1wb3J0YW50O1xyXG4gICAgd2hpdGUtc3BhY2U6IHVuc2V0ICFpbXBvcnRhbnQ7XHJcbiAgICBmbGV4OiAwIDAgNSUgIWltcG9ydGFudDtcclxuICAgIHdpZHRoOiAyOCUgIWltcG9ydGFudDtcclxuICAgIG92ZXJmbG93LXdyYXA6IGJyZWFrLXdvcmQ7XHJcbiAgICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XHJcbiAgXHJcbiAgICB3b3JkLWJyZWFrOiBicmVhay13b3JkO1xyXG4gIFxyXG4gICAgLW1zLWh5cGhlbnM6IGF1dG87XHJcbiAgICAtbW96LWh5cGhlbnM6IGF1dG87XHJcbiAgICAtd2Via2l0LWh5cGhlbnM6IGF1dG87XHJcbiAgICBoeXBoZW5zOiBhdXRvO1xyXG4gIH0iLCIubWF0LWNvbHVtbi1pc19BY3RpdmUge1xuICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQgIWltcG9ydGFudDtcbiAgd2hpdGUtc3BhY2U6IHVuc2V0ICFpbXBvcnRhbnQ7XG4gIGZsZXg6IDAgMCA1JSAhaW1wb3J0YW50O1xuICB3aWR0aDogMjglICFpbXBvcnRhbnQ7XG4gIG92ZXJmbG93LXdyYXA6IGJyZWFrLXdvcmQ7XG4gIHdvcmQtd3JhcDogYnJlYWstd29yZDtcbiAgd29yZC1icmVhazogYnJlYWstd29yZDtcbiAgLW1zLWh5cGhlbnM6IGF1dG87XG4gIC1tb3otaHlwaGVuczogYXV0bztcbiAgLXdlYmtpdC1oeXBoZW5zOiBhdXRvO1xuICBoeXBoZW5zOiBhdXRvO1xufSJdfQ== */\";","import {  OnInit } from '@angular/core';\r\nimport { Settings } from '../app.settings.model';\r\nimport { AppSettings } from '../app.settings';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport { Component, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { StaffSchedules } from '../Models/StaffSchedules';\r\n\r\nexport interface Element {\r\nTask_Description: string;\r\nStatus_Description: string;\r\n}\r\n@Component({\r\n  selector: 'app-staff-schedule',\r\n  templateUrl: './staff-schedule.component.html',\r\n  styleUrls: ['./staff-schedule.component.scss']\r\n})\r\nexport class StaffScheduleComponent implements OnInit {\r\n  public displayedColumns = ['Task_Description', 'Status_Description'];\r\n  public dataSource: any;\r\n  StartDateDef = new Date('1970-01-01');\r\n  EndDateDef = new Date(2020, 11, 10);\r\n  public settings: Settings;\r\n  show: boolean = false;\r\n  showAdd: boolean = false;\r\n  hideTable: boolean = true;\r\n  Recurring: boolean = true;\r\n  weekday: boolean = false;\r\n  staffShow:boolean = false;\r\n  taskshow: boolean = false;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n data: Element[] = [\r\n    {Task_Description: 'Feed Chickens',Status_Description: 'Completed'},\r\n    {Task_Description: 'Fix Fence', Status_Description: 'In Progress'},\r\n    {Task_Description: 'Feed Chickens', Status_Description: 'Completed'},\r\n    {Task_Description: 'Mow Lawn', Status_Description: 'Completed'},   \r\n    {Task_Description: 'Fix Fence', Status_Description: 'In Progress'},\r\n    {Task_Description: 'Mow Lawn', Status_Description: 'In Progress'},   \r\n    {Task_Description: 'Fix Fence', Status_Description: 'Completed'}\r\n\r\n  ];\r\n\r\ntasks: string[] = [\r\n   \"Fix Fence\", \"Mow Lawn\", \"Feed Chickens\"\r\n ]\r\n\r\n statusses: string[] = [\r\n  \"In Progress\", \"Completed\"\r\n]\r\n\r\nAdminPriv: string;\r\nTaskSelect: string;\r\nStatusSelect: string;\r\n\r\nconstructor(public appSettings:AppSettings) {\r\n  this.settings = this.appSettings.settings; \r\n  this.dataSource = new MatTableDataSource<Element>(this.data);\r\n}\r\n  ngOnInit(): void {\r\n     this.AdminPriv = localStorage.getItem(\"PrivelageLevel\");\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n}\r\n","export default \"h1 {\\n  text-align: center;\\n}\\n\\nmat-header-cell {\\n  background-color: #308b30;\\n  font-size: 16px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc3RhZmYvRDpcXDM3MFxcRmluYWxGcm9udGVuZC9zcmNcXGFwcFxcc3RhZmZcXHN0YWZmLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9zdGFmZi9zdGFmZi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFBO0FDQ0o7O0FEQ0E7RUFDSSx5QkFBQTtFQUNBLGVBQUE7QUNFSiIsImZpbGUiOiJzcmMvYXBwL3N0YWZmL3N0YWZmLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaDF7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxubWF0LWhlYWRlci1jZWxse1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDQ4LCAxMzksIDQ4KTtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICB9IiwiaDEge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbm1hdC1oZWFkZXItY2VsbCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMDhiMzA7XG4gIGZvbnQtc2l6ZTogMTZweDtcbn0iXX0= */\";","import {  Component, OnInit } from '@angular/core';\r\nimport{Staff} from '../Models/Staff'\r\n\r\nimport { Settings } from '../app.settings.model';\r\nimport { AppSettings } from '../app.settings';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\n\r\nimport { RouterLink, ActivatedRoute, Router } from '@angular/router';\r\nexport interface Element {\r\n  Staff_ID:number;\r\n  Staff_Name:string;\r\n  Staff_Surname:string;\r\n  Staff_Phone_Number:string;\r\n  Clock_in_Time:string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-staff',\r\n  templateUrl: './staff.component.html',\r\n  styleUrls: ['./staff.component.scss']\r\n})\r\nexport class StaffComponent implements OnInit {\r\n\r\n  constructor(){}\r\n  ngOnInit(){}\r\n\r\n  public displayedColumns = ['Staff_ID', 'Staff_Name', 'Staff_Surname', 'Staff_Phone_Number','Clock_in_Time'];\r\n  public dataSource: any;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  data: Element[] = [\r\n    {Staff_ID:6902150236082, Staff_Name:\"Jack\", Staff_Surname:\"Black\", Staff_Phone_Number:\"0845648884\", Clock_in_Time:'12:00'},\r\n    {Staff_ID:9203050458083, Staff_Name:\"Solomn\", Staff_Surname:\"Mplunga\", Staff_Phone_Number:\"0832654785\",Clock_in_Time:'08:00'},\r\n    {Staff_ID:8710081256081, Staff_Name:\"Happy\", Staff_Surname:\"Hlingani\", Staff_Phone_Number:\"0784561289\",Clock_in_Time:'08:30'},\r\n    {Staff_ID:6102185621083, Staff_Name:\"Gracious\", Staff_Surname:\"Nkosi\", Staff_Phone_Number:\"0614589874\", Clock_in_Time:'09:10'},\r\n    {Staff_ID:9805201584082, Staff_Name:\"Susan\", Staff_Surname:\"Grant\", Staff_Phone_Number:\"0725698563\", Clock_in_Time:'13:10'},    \r\n  ];\r\n}\r\n\r\n","export default \".mat-column-is_Active {\\n  word-wrap: break-word !important;\\n  white-space: unset !important;\\n  flex: 0 0 5% !important;\\n  width: 28% !important;\\n  overflow-wrap: break-word;\\n  word-wrap: break-word;\\n  word-break: break-word;\\n  -ms-hyphens: auto;\\n  -webkit-hyphens: auto;\\n  hyphens: auto;\\n}\\n\\nh1 {\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGFzay10eXBlL0Q6XFwzNzBcXEZpbmFsRnJvbnRlbmQvc3JjXFxhcHBcXHRhc2stdHlwZVxcdGFzay10eXBlLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC90YXNrLXR5cGUvdGFzay10eXBlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZ0NBQUE7RUFDQSw2QkFBQTtFQUNBLHVCQUFBO0VBQ0EscUJBQUE7RUFDQSx5QkFBQTtFQUNBLHFCQUFBO0VBRUEsc0JBQUE7RUFFQSxpQkFBQTtFQUVBLHFCQUFBO0VBQ0EsYUFBQTtBQ0RKOztBREdFO0VBQ0Usa0JBQUE7QUNBSiIsImZpbGUiOiJzcmMvYXBwL3Rhc2stdHlwZS90YXNrLXR5cGUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWNvbHVtbi1pc19BY3RpdmUge1xyXG4gICAgd29yZC13cmFwOiBicmVhay13b3JkICFpbXBvcnRhbnQ7XHJcbiAgICB3aGl0ZS1zcGFjZTogdW5zZXQgIWltcG9ydGFudDtcclxuICAgIGZsZXg6IDAgMCA1JSAhaW1wb3J0YW50O1xyXG4gICAgd2lkdGg6IDI4JSAhaW1wb3J0YW50O1xyXG4gICAgb3ZlcmZsb3ctd3JhcDogYnJlYWstd29yZDtcclxuICAgIHdvcmQtd3JhcDogYnJlYWstd29yZDtcclxuICBcclxuICAgIHdvcmQtYnJlYWs6IGJyZWFrLXdvcmQ7XHJcbiAgXHJcbiAgICAtbXMtaHlwaGVuczogYXV0bztcclxuICAgIC1tb3otaHlwaGVuczogYXV0bztcclxuICAgIC13ZWJraXQtaHlwaGVuczogYXV0bztcclxuICAgIGh5cGhlbnM6IGF1dG87XHJcbiAgfVxyXG4gIGgxe1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59IiwiLm1hdC1jb2x1bW4taXNfQWN0aXZlIHtcbiAgd29yZC13cmFwOiBicmVhay13b3JkICFpbXBvcnRhbnQ7XG4gIHdoaXRlLXNwYWNlOiB1bnNldCAhaW1wb3J0YW50O1xuICBmbGV4OiAwIDAgNSUgIWltcG9ydGFudDtcbiAgd2lkdGg6IDI4JSAhaW1wb3J0YW50O1xuICBvdmVyZmxvdy13cmFwOiBicmVhay13b3JkO1xuICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XG4gIHdvcmQtYnJlYWs6IGJyZWFrLXdvcmQ7XG4gIC1tcy1oeXBoZW5zOiBhdXRvO1xuICAtbW96LWh5cGhlbnM6IGF1dG87XG4gIC13ZWJraXQtaHlwaGVuczogYXV0bztcbiAgaHlwaGVuczogYXV0bztcbn1cblxuaDEge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59Il19 */\";","import {  OnInit } from '@angular/core';\r\nimport { Settings } from '../app.settings.model';\r\nimport { AppSettings } from '../app.settings';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Component, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { Task_Type } from '../Models/Task_Type'\r\nimport { RouterLink, ActivatedRoute, Router } from '@angular/router';\r\nexport interface Element {\r\n  Task_Type_ID:number;\r\n  Task_Type_Description:string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-task-type',\r\n  templateUrl: './task-type.component.html',\r\n  styleUrls: ['./task-type.component.scss']\r\n})\r\nexport class TaskTypeComponent implements OnInit {\r\n\r\n  public displayedColumns = ['Task_Type_ID', 'Task_Type_Description','Actions'];\r\n  public dataSource: any;\r\n  public settings: Settings;\r\n  show: boolean = false;\r\n  showAdd: boolean = false;\r\n  hideTable:boolean=true;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n data: Element[] = [\r\n    {Task_Type_ID: 1,Task_Type_Description: \"Farming\"},\r\n    {Task_Type_ID: 2,Task_Type_Description: \"Plumbing\"},\r\n    {Task_Type_ID: 3,Task_Type_Description: \"Livestock\"},\r\n\r\n  ];\r\n  \r\n\r\n  Task_TypeEdit: Task_Type;\r\n  Task_TypeAdd: Task_Type;\r\nAdminPriv: string;\r\nselectedValue: string;\r\n\r\n  constructor(public appSettings:AppSettings, private router:Router) {\r\n    this.settings = this.appSettings.settings; \r\n    this.dataSource = new MatTableDataSource<Element>(this.data);\r\n  }\r\n  ngOnInit(): void {\r\n     this.AdminPriv = localStorage.getItem(\"PrivelageLevel\");\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  changeform(){\r\n    if(this.show == false){\r\n      this.show =true;\r\n      this.showAdd = false;\r\n    }\r\n  }\r\n\r\n  getTaskTypeDetail(Id: number){\r\n    //Implement function to pupulate edit field and populate vehicle edit\\\r\n    this.Task_TypeEdit = new Task_Type;\r\n    this.Task_TypeEdit.Task_Type_Description = \"Crops\";\r\n    this.changeform();\r\n  }\r\n\r\n  AddTaskType(){\r\n    if(this.show == true){\r\n         this.show = false;\r\n    }\r\n    this.Task_TypeAdd = new Task_Type;\r\n    this.showAdd = true;\r\n  }\r\n\r\n  PutTaskType(){\r\n    alert(\"Done\");\r\n  }\r\n\r\n  deleteTaskType(){\r\n    alert(\"Are you sure\");\r\n  }\r\n\r\n  back()\r\n  {\r\n    this.show=false;\r\n    this.hideTable=true;\r\n    this.showAdd=false;\r\n  }\r\n}\r\n\r\n\r\n","export default \".mat-column-is_Active {\\n  word-wrap: break-word !important;\\n  white-space: unset !important;\\n  flex: 0 0 5% !important;\\n  width: 28% !important;\\n  overflow-wrap: break-word;\\n  word-wrap: break-word;\\n  word-break: break-word;\\n  -ms-hyphens: auto;\\n  -webkit-hyphens: auto;\\n  hyphens: auto;\\n}\\n\\nh1 {\\n  text-align: center;\\n}\\n\\n.endButton {\\n  width: 75%;\\n  margin-left: 15%;\\n  text-align: center;\\n}\\n\\n#provideLabel {\\n  text-align: center;\\n  font-size: 14px;\\n  margin-left: 43%;\\n}\\n\\nmat-card {\\n  width: 70%;\\n  margin-left: 15%;\\n}\\n\\n.skillLabel {\\n  font-size: 14px;\\n}\\n\\nmat-header-cell {\\n  background-color: #308b30;\\n  font-size: 16px;\\n}\\n\\nmat-card-header {\\n  text-align: left;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGFzay9EOlxcMzcwXFxGaW5hbEZyb250ZW5kL3NyY1xcYXBwXFx0YXNrXFx0YXNrLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC90YXNrL3Rhc2suY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxnQ0FBQTtFQUNBLDZCQUFBO0VBQ0EsdUJBQUE7RUFDQSxxQkFBQTtFQUNBLHlCQUFBO0VBQ0EscUJBQUE7RUFFQSxzQkFBQTtFQUVBLGlCQUFBO0VBRUEscUJBQUE7RUFDQSxhQUFBO0FDREo7O0FER0U7RUFDSSxrQkFBQTtBQ0FOOztBREdFO0VBQ0UsVUFBQTtFQUNBLGdCQUFBO0VBQ0Esa0JBQUE7QUNBSjs7QURJRTtFQUNJLGtCQUFBO0VBQ0EsZUFBQTtFQUNBLGdCQUFBO0FDRE47O0FER0U7RUFDSSxVQUFBO0VBQ0EsZ0JBQUE7QUNBTjs7QURHRTtFQUNFLGVBQUE7QUNBSjs7QURFRTtFQUNJLHlCQUFBO0VBQ0EsZUFBQTtBQ0NOOztBRENFO0VBQ0ksZ0JBQUE7QUNFTiIsImZpbGUiOiJzcmMvYXBwL3Rhc2svdGFzay5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtY29sdW1uLWlzX0FjdGl2ZSB7XHJcbiAgICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQgIWltcG9ydGFudDtcclxuICAgIHdoaXRlLXNwYWNlOiB1bnNldCAhaW1wb3J0YW50O1xyXG4gICAgZmxleDogMCAwIDUlICFpbXBvcnRhbnQ7XHJcbiAgICB3aWR0aDogMjglICFpbXBvcnRhbnQ7XHJcbiAgICBvdmVyZmxvdy13cmFwOiBicmVhay13b3JkO1xyXG4gICAgd29yZC13cmFwOiBicmVhay13b3JkO1xyXG4gIFxyXG4gICAgd29yZC1icmVhazogYnJlYWstd29yZDtcclxuICBcclxuICAgIC1tcy1oeXBoZW5zOiBhdXRvO1xyXG4gICAgLW1vei1oeXBoZW5zOiBhdXRvO1xyXG4gICAgLXdlYmtpdC1oeXBoZW5zOiBhdXRvO1xyXG4gICAgaHlwaGVuczogYXV0bztcclxuICB9XHJcbiAgaDF7XHJcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB9XHJcblxyXG4gIC5lbmRCdXR0b257XHJcbiAgICB3aWR0aDo3NSU7XHJcbiAgICBtYXJnaW4tbGVmdDoxNSU7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgfVxyXG4gXHJcblxyXG4gICNwcm92aWRlTGFiZWx7XHJcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgICBtYXJnaW4tbGVmdDogNDMlO1xyXG4gIH1cclxuICBtYXQtY2FyZHtcclxuICAgICAgd2lkdGg6NzAlO1xyXG4gICAgICBtYXJnaW4tbGVmdDoxNSU7XHJcblxyXG4gIH1cclxuICAuc2tpbGxMYWJlbHtcclxuICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICB9XHJcbiAgbWF0LWhlYWRlci1jZWxse1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoNDgsIDEzOSwgNDgpO1xyXG4gICAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgfVxyXG4gIG1hdC1jYXJkLWhlYWRlcntcclxuICAgICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICB9IiwiLm1hdC1jb2x1bW4taXNfQWN0aXZlIHtcbiAgd29yZC13cmFwOiBicmVhay13b3JkICFpbXBvcnRhbnQ7XG4gIHdoaXRlLXNwYWNlOiB1bnNldCAhaW1wb3J0YW50O1xuICBmbGV4OiAwIDAgNSUgIWltcG9ydGFudDtcbiAgd2lkdGg6IDI4JSAhaW1wb3J0YW50O1xuICBvdmVyZmxvdy13cmFwOiBicmVhay13b3JkO1xuICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XG4gIHdvcmQtYnJlYWs6IGJyZWFrLXdvcmQ7XG4gIC1tcy1oeXBoZW5zOiBhdXRvO1xuICAtbW96LWh5cGhlbnM6IGF1dG87XG4gIC13ZWJraXQtaHlwaGVuczogYXV0bztcbiAgaHlwaGVuczogYXV0bztcbn1cblxuaDEge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5lbmRCdXR0b24ge1xuICB3aWR0aDogNzUlO1xuICBtYXJnaW4tbGVmdDogMTUlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbiNwcm92aWRlTGFiZWwge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgbWFyZ2luLWxlZnQ6IDQzJTtcbn1cblxubWF0LWNhcmQge1xuICB3aWR0aDogNzAlO1xuICBtYXJnaW4tbGVmdDogMTUlO1xufVxuXG4uc2tpbGxMYWJlbCB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbn1cblxubWF0LWhlYWRlci1jZWxsIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzMwOGIzMDtcbiAgZm9udC1zaXplOiAxNnB4O1xufVxuXG5tYXQtY2FyZC1oZWFkZXIge1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xufSJdfQ== */\";","import {  OnInit } from '@angular/core';\r\nimport { Settings } from '../app.settings.model';\r\nimport { AppSettings } from '../app.settings';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Component, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { Task } from '../Models/Task'\r\nimport { RouterLink, ActivatedRoute, Router } from '@angular/router';\r\n\r\n\r\nexport interface Element {\r\n  Task_ID:number;\r\n  Task_Type_Description:string;\r\n  Importance_Description:string;\r\n  Section_Name:string;\r\n  Infrastructure_Name:string;\r\n  Equipment_Description:string;\r\n  Task_Description:string;\r\n  Task_Duration:number;\r\n  Skill_Description:string;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-task',\r\n  templateUrl: './task.component.html',\r\n  styleUrls: ['./task.component.scss']\r\n})\r\nexport class TaskComponent implements OnInit {\r\n  public displayedColumns = ['Task_ID', 'Section_Name', 'Infrastructure_Name','Equipment_Description','Task_Type_Description','Task_Description','Task_Duration','Importance_Description','Actions'];\r\n  public dataSource: any;\r\n  public settings: Settings;\r\n  show: boolean = false;\r\n  showAdd: boolean = false;\r\n  hideTable:boolean=true;\r\n\r\n  section:boolean =true;\r\n  infrastructure:boolean =false;\r\n  equipment:boolean=false;\r\n  add:boolean=false;\r\n  notEquipment:boolean=false;\r\n  equipmentSelected:boolean=true;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n data: Element[] = [\r\n    {Task_ID:1, Task_Type_Description:\"Cleaning\", Importance_Description:\"Medium\", Section_Name:\"Section2\", Infrastructure_Name:\"N/A\",Equipment_Description:\"N/A\", Task_Description:\"Clean Pig Cage\", Task_Duration:30, Skill_Description:\"Cleaner\"},\r\n    {Task_ID:2, Task_Type_Description:\"Plant\", Importance_Description:\"High\", Section_Name:\"Section1\", Infrastructure_Name:\"N/A\",Equipment_Description:\"N/A\", Task_Description:\"Plant crops\", Task_Duration:120, Skill_Description:\"Farming\"},\r\n    {Task_ID:3, Task_Type_Description:\"Storage\", Importance_Description:\"Low\", Section_Name:\"Section 2\", Infrastructure_Name:\"Building1\",Equipment_Description:\"Cutters\", Task_Description:\"Check equipment\", Task_Duration:15,Skill_Description:\"Stock Take\"}\r\n\r\n  ];\r\n  \r\n types: string[] = [\r\n   \"Cleaning floor\",\"Planting\",\"Storage\"\r\n ]\r\n\r\n infrastructures: string[] = [\r\n   \"N/A\",\"Building1\",\"Building2\"\r\n ]\r\n\r\n sections: string[] = [\r\n   \"Section1\", \"Section2\"\r\n ]\r\n\r\n equipments: string[] =[\r\n   \"N/A\",\"Cutters\", \"Saw\"\r\n ]\r\n\r\n importances: string[] =[\r\n  \"High\", \"Medium\", \"Low\"\r\n]\r\nskills: string[] =[\r\n  \"Cleaner\", \"Farming\", \"Plumber\",\"Mechanic\",\"Metal Work\", \"Wood Work\"\r\n]\r\n\r\nTaskEdit: Task;\r\nTaskAdd: Task;\r\nAdminPriv: string;\r\nselectedValue: string;\r\nEquipmentSelect: string;\r\nTypeSelect: String;\r\nSectionSelect: string;\r\nInfrastructureSelect: string;\r\nSkillSelect:string;\r\nImportanceSelect:string;\r\n  constructor(public appSettings:AppSettings, private router:Router) {\r\n    this.settings = this.appSettings.settings; \r\n    this.dataSource = new MatTableDataSource<Element>(this.data);\r\n  }\r\n  ngOnInit(): void {\r\n     this.AdminPriv = localStorage.getItem(\"PrivelageLevel\");\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  changeform(){\r\n    if(this.show == false){\r\n      this.show =true;\r\n      this.showAdd = false;\r\n      this.hideTable=false;\r\n    }\r\n  }\r\n\r\n  getTaskDetail(Id: number){\r\n    //Implement function to populate edit field and populate task edit\\\r\n    this.TaskEdit = new Task;\r\n    this.TaskEdit.Task_Type_Description = \"Cleaning floor\";\r\n    this.TaskEdit.Importance_Description = \"Medium\";\r\n    this.TaskEdit.Section_Name= \"Section2\";\r\n    this.TaskEdit.Infrastructure_Name= \"N/A\";\r\n    this.TaskEdit.Equipment_Description= \"N/A\";\r\n    this.TaskEdit.Task_Description= \"Clean Pig Cage\";\r\n    this.TaskEdit.Task_Duration= 30;\r\n    this.TaskEdit.Skill_Description= \"Cleaner\";\r\n  \r\n    this.selectedValue = this.TaskEdit.Task_Type_Description;\r\n    this.SectionSelect = this.TaskEdit.Section_Name;\r\n    this.InfrastructureSelect = this.TaskEdit.Infrastructure_Name;\r\n    this.EquipmentSelect = this.TaskEdit.Equipment_Description;\r\n    this.SkillSelect = this.TaskEdit.Skill_Description;\r\n    this.ImportanceSelect=this.TaskEdit.Importance_Description;\r\n\r\n\r\n    this.changeform();\r\n  }\r\n\r\n  AddTask(){\r\n    if(this.show == true){\r\n         this.show = false;\r\n    }\r\n    this.TaskAdd = new Task;\r\n    this.showAdd = true;\r\n    this.hideTable=false;\r\n\r\n \r\n  }\r\n\r\n  PutTask(){\r\n    alert(\"Done\");\r\n  }\r\n\r\n  deleteTask(){\r\n    alert(\"Are you sure\");\r\n  }\r\n\r\n  download(){\r\n    alert(\"Download successful\")\r\n  }\r\n  back()\r\n  {\r\n    this.show=false;\r\n    this.hideTable=true;\r\n    this.showAdd=false;\r\n\r\n  }\r\n\r\n\r\n  continueToSection(){\r\n    this.section=true;\r\n    this.infrastructure=false;\r\n    this.equipment=false;\r\n    this.add=false;\r\n  }\r\n\r\n  continueToInfrastructure(){\r\n    this.section=false;\r\n    this.infrastructure=true;\r\n    this.equipment=false;\r\n    this.add=false;\r\n  }\r\n//if infrastructure is N/A continue to adding the rest of the task and skip equipment\r\n  continueToEquipment(){\r\n    this.section=false;\r\n    this.infrastructure=false;\r\n    this.equipment=true;\r\n    this.add=false;\r\n  }\r\n\r\n  continueToAdd(){\r\n    this.section=false;\r\n    this.infrastructure=false;\r\n    this.equipment=false;\r\n    this.add=true;\r\n  }\r\n\r\n  test(){\r\n   \r\n  }\r\n}\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3QvdGVzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-test',\r\n  templateUrl: './test.component.html',\r\n  styleUrls: ['./test.component.scss']\r\n})\r\nexport class TestComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","export default \".applications .mat-toolbar, .applications .mat-toolbar-row {\\n  height: 40px !important;\\n  min-height: 40px !important;\\n}\\n.applications .header {\\n  width: 250px;\\n  font-size: 16px;\\n}\\n.applications .mat-card {\\n  padding: 0;\\n}\\n.applications .mat-card .mat-button {\\n  height: 100%;\\n}\\n.applications .mat-card .mat-button .mat-button-wrapper {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGhlbWUvY29tcG9uZW50cy9hcHBsaWNhdGlvbnMvRDpcXDM3MFxcRmluYWxGcm9udGVuZC9zcmNcXGFwcFxcdGhlbWVcXGNvbXBvbmVudHNcXGFwcGxpY2F0aW9uc1xcYXBwbGljYXRpb25zLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC90aGVtZS9jb21wb25lbnRzL2FwcGxpY2F0aW9ucy9hcHBsaWNhdGlvbnMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0k7RUFDSSx1QkFBQTtFQUNBLDJCQUFBO0FDQVI7QURFSTtFQUNJLFlBQUE7RUFDQSxlQUFBO0FDQVI7QURFSTtFQUNJLFVBQUE7QUNBUjtBRENRO0VBQ0ksWUFBQTtBQ0NaO0FEQVk7RUFDSSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxtQkFBQTtBQ0VoQiIsImZpbGUiOiJzcmMvYXBwL3RoZW1lL2NvbXBvbmVudHMvYXBwbGljYXRpb25zL2FwcGxpY2F0aW9ucy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hcHBsaWNhdGlvbnN7XHJcbiAgICAubWF0LXRvb2xiYXIsIC5tYXQtdG9vbGJhci1yb3d7XHJcbiAgICAgICAgaGVpZ2h0OiA0MHB4ICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgbWluLWhlaWdodDogNDBweCAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG4gICAgLmhlYWRlcntcclxuICAgICAgICB3aWR0aDogMjUwcHg7XHJcbiAgICAgICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgfVxyXG4gICAgLm1hdC1jYXJke1xyXG4gICAgICAgIHBhZGRpbmc6IDA7XHJcbiAgICAgICAgLm1hdC1idXR0b257XHJcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgLm1hdC1idXR0b24td3JhcHBlcntcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufSIsIi5hcHBsaWNhdGlvbnMgLm1hdC10b29sYmFyLCAuYXBwbGljYXRpb25zIC5tYXQtdG9vbGJhci1yb3cge1xuICBoZWlnaHQ6IDQwcHggIWltcG9ydGFudDtcbiAgbWluLWhlaWdodDogNDBweCAhaW1wb3J0YW50O1xufVxuLmFwcGxpY2F0aW9ucyAuaGVhZGVyIHtcbiAgd2lkdGg6IDI1MHB4O1xuICBmb250LXNpemU6IDE2cHg7XG59XG4uYXBwbGljYXRpb25zIC5tYXQtY2FyZCB7XG4gIHBhZGRpbmc6IDA7XG59XG4uYXBwbGljYXRpb25zIC5tYXQtY2FyZCAubWF0LWJ1dHRvbiB7XG4gIGhlaWdodDogMTAwJTtcbn1cbi5hcHBsaWNhdGlvbnMgLm1hdC1jYXJkIC5tYXQtYnV0dG9uIC5tYXQtYnV0dG9uLXdyYXBwZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufSJdfQ== */\";","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-applications',\r\n  templateUrl: './applications.component.html',\r\n  styleUrls: ['./applications.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ApplicationsComponent implements OnInit {\r\n\r\n  constructor(){ }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}","export default \".breadcrumb {\\n  padding: 8px;\\n}\\n.breadcrumb .mat-icon {\\n  font-size: 20px;\\n  height: 20px;\\n  width: 20px;\\n  padding: 0 6px;\\n}\\n.breadcrumb .breadcrumb-title.active {\\n  text-transform: uppercase;\\n  font-weight: 500;\\n}\\n.breadcrumb .breadcrumb-item + .breadcrumb-item:before {\\n  display: inline-block;\\n  padding-right: 0.5rem;\\n  padding-left: 0.5rem;\\n  content: \\\"/\\\";\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGhlbWUvY29tcG9uZW50cy9icmVhZGNydW1iL0Q6XFwzNzBcXEZpbmFsRnJvbnRlbmQvc3JjXFxhcHBcXHRoZW1lXFxjb21wb25lbnRzXFxicmVhZGNydW1iXFxicmVhZGNydW1iLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC90aGVtZS9jb21wb25lbnRzL2JyZWFkY3J1bWIvYnJlYWRjcnVtYi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFlBQUE7QUNDSjtBREFJO0VBQ0ksZUFBQTtFQUNBLFlBQUE7RUFDQSxXQUFBO0VBQ0EsY0FBQTtBQ0VSO0FEQUk7RUFDSSx5QkFBQTtFQUNBLGdCQUFBO0FDRVI7QURBSTtFQUNJLHFCQUFBO0VBQ0EscUJBQUE7RUFDQSxvQkFBQTtFQUNBLFlBQUE7QUNFUiIsImZpbGUiOiJzcmMvYXBwL3RoZW1lL2NvbXBvbmVudHMvYnJlYWRjcnVtYi9icmVhZGNydW1iLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJyZWFkY3J1bWJ7XHJcbiAgICBwYWRkaW5nOiA4cHg7XHJcbiAgICAubWF0LWljb257XHJcbiAgICAgICAgZm9udC1zaXplOiAyMHB4O1xyXG4gICAgICAgIGhlaWdodDogMjBweDtcclxuICAgICAgICB3aWR0aDogMjBweDtcclxuICAgICAgICBwYWRkaW5nOiAwIDZweDtcclxuICAgIH1cclxuICAgIC5icmVhZGNydW1iLXRpdGxlLmFjdGl2ZXtcclxuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgICB9XHJcbiAgICAuYnJlYWRjcnVtYi1pdGVtKy5icmVhZGNydW1iLWl0ZW06YmVmb3Jle1xyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICBwYWRkaW5nLXJpZ2h0OiAuNXJlbTtcclxuICAgICAgICBwYWRkaW5nLWxlZnQ6IC41cmVtO1xyXG4gICAgICAgIGNvbnRlbnQ6IFwiL1wiO1xyXG4gICAgfVxyXG59IiwiLmJyZWFkY3J1bWIge1xuICBwYWRkaW5nOiA4cHg7XG59XG4uYnJlYWRjcnVtYiAubWF0LWljb24ge1xuICBmb250LXNpemU6IDIwcHg7XG4gIGhlaWdodDogMjBweDtcbiAgd2lkdGg6IDIwcHg7XG4gIHBhZGRpbmc6IDAgNnB4O1xufVxuLmJyZWFkY3J1bWIgLmJyZWFkY3J1bWItdGl0bGUuYWN0aXZlIHtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbn1cbi5icmVhZGNydW1iIC5icmVhZGNydW1iLWl0ZW0gKyAuYnJlYWRjcnVtYi1pdGVtOmJlZm9yZSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgcGFkZGluZy1yaWdodDogMC41cmVtO1xuICBwYWRkaW5nLWxlZnQ6IDAuNXJlbTtcbiAgY29udGVudDogXCIvXCI7XG59Il19 */\";","import { Component } from '@angular/core';\r\nimport { ActivatedRoute, Router, ActivatedRouteSnapshot, UrlSegment, NavigationEnd } from \"@angular/router\"; \r\nimport { Title } from '@angular/platform-browser';\r\nimport { AppSettings } from '../../../app.settings';\r\nimport { Settings } from '../../../app.settings.model';\r\n\r\n@Component({\r\n  selector: 'app-breadcrumb',\r\n  templateUrl: './breadcrumb.component.html',\r\n  styleUrls: ['./breadcrumb.component.scss']\r\n})\r\nexport class BreadcrumbComponent {\r\n\r\n    public pageTitle:string;\r\n    public breadcrumbs: {\r\n        name: string;\r\n        url: string\r\n    }[] = [];\r\n\r\n    public settings: Settings;\r\n    constructor(public appSettings:AppSettings,\r\n                public router: Router, \r\n                public activatedRoute: ActivatedRoute,                \r\n                public title:Title){\r\n            this.settings = this.appSettings.settings; \r\n            this.router.events.subscribe(event => {\r\n            if (event instanceof NavigationEnd) {\r\n                this.breadcrumbs = [];                \r\n                this.parseRoute(this.router.routerState.snapshot.root); \r\n                this.pageTitle = \"\";\r\n                this.breadcrumbs.forEach(breadcrumb => {\r\n                    this.pageTitle += ' > ' + breadcrumb.name;\r\n                })       \r\n                this.title.setTitle(this.settings.name + this.pageTitle);\r\n            }\r\n        })   \r\n    }\r\n\r\n    private parseRoute(node: ActivatedRouteSnapshot) { \r\n        if (node.data['breadcrumb']) {\r\n            if(node.url.length){\r\n                let urlSegments: UrlSegment[] = [];\r\n                node.pathFromRoot.forEach(routerState => {\r\n                    urlSegments = urlSegments.concat(routerState.url);\r\n                });\r\n                let url = urlSegments.map(urlSegment => {\r\n                    return urlSegment.path;\r\n                }).join('/');\r\n                this.breadcrumbs.push({\r\n                    name: node.data['breadcrumb'],\r\n                    url: '/' + url\r\n                }) \r\n            }         \r\n        }\r\n        if (node.firstChild) {\r\n            this.parseRoute(node.firstChild);\r\n        }\r\n    }\r\n\r\n    public closeSubMenus(){\r\n        let menu = document.querySelector(\".sidenav-menu-outer\");\r\n        if(menu){\r\n            for (let i = 0; i < menu.children[0].children.length; i++) {\r\n                let child = menu.children[0].children[i];\r\n                if(child){\r\n                    if(child.children[0].classList.contains('expanded')){\r\n                        child.children[0].classList.remove('expanded');\r\n                        child.children[1].classList.remove('show');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","export default \".flags img {\\n  vertical-align: middle;\\n  margin-right: 8px;\\n}\\n.flags .mat-menu-item {\\n  height: 36px;\\n  line-height: 36px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGhlbWUvY29tcG9uZW50cy9mbGFncy1tZW51L0Q6XFwzNzBcXEZpbmFsRnJvbnRlbmQvc3JjXFxhcHBcXHRoZW1lXFxjb21wb25lbnRzXFxmbGFncy1tZW51XFxmbGFncy1tZW51LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC90aGVtZS9jb21wb25lbnRzL2ZsYWdzLW1lbnUvZmxhZ3MtbWVudS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDSTtFQUNJLHNCQUFBO0VBQ0EsaUJBQUE7QUNBUjtBREVJO0VBQ0ksWUFBQTtFQUNBLGlCQUFBO0FDQVIiLCJmaWxlIjoic3JjL2FwcC90aGVtZS9jb21wb25lbnRzL2ZsYWdzLW1lbnUvZmxhZ3MtbWVudS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mbGFnc3tcclxuICAgIGltZ3tcclxuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogOHB4O1xyXG4gICAgfVxyXG4gICAgLm1hdC1tZW51LWl0ZW17XHJcbiAgICAgICAgaGVpZ2h0OiAzNnB4O1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAzNnB4O1xyXG4gICAgfVxyXG59IiwiLmZsYWdzIGltZyB7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIG1hcmdpbi1yaWdodDogOHB4O1xufVxuLmZsYWdzIC5tYXQtbWVudS1pdGVtIHtcbiAgaGVpZ2h0OiAzNnB4O1xuICBsaW5lLWhlaWdodDogMzZweDtcbn0iXX0= */\";","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { AppSettings } from '../../../app.settings';\r\nimport { Settings } from '../../../app.settings.model';\r\n\r\n@Component({\r\n  selector: 'app-flags-menu',\r\n  templateUrl: './flags-menu.component.html',\r\n  styleUrls: ['./flags-menu.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class FlagsMenuComponent implements OnInit {\r\n\r\n  public settings: Settings;\r\n  constructor(public appSettings:AppSettings){\r\n      this.settings = this.appSettings.settings; \r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import {Component, ViewEncapsulation, ViewChild, HostListener, ElementRef} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-fullscreen',\r\n  encapsulation: ViewEncapsulation.None,\r\n  template: `\r\n    <button mat-icon-button class=\"full-screen\">\r\n        <mat-icon *ngIf=\"!toggle\" #expand>fullscreen</mat-icon>\r\n        <mat-icon *ngIf=\"toggle\" #compress>fullscreen_exit</mat-icon>\r\n    </button> \r\n  `\r\n})\r\nexport class FullScreenComponent { \r\n    toggle:boolean = false;\r\n    @ViewChild('expand') private expand:ElementRef;\r\n    @ViewChild('compress') private compress:ElementRef; \r\n   \r\n    requestFullscreen(elem) {\r\n        if (elem.requestFullscreen) {\r\n            elem.requestFullscreen();\r\n        } else if (elem.webkitRequestFullscreen) {\r\n            elem.webkitRequestFullscreen();\r\n        } else if (elem.mozRequestFullScreen) {\r\n            elem.mozRequestFullScreen();\r\n        } else if (elem.msRequestFullscreen) {\r\n            elem.msRequestFullscreen();\r\n        } else {\r\n            console.log('Fullscreen API is not supported.');\r\n        }\r\n    };\r\n\r\n    exitFullscreen() {\r\n        if (document.exitFullscreen) {\r\n            document.exitFullscreen();\r\n        } else if (document.webkitExitFullscreen) {\r\n            document.webkitExitFullscreen();\r\n        } else if (document.mozCancelFullScreen) {\r\n            document.mozCancelFullScreen();\r\n        } else if (document.msExitFullscreen) {\r\n            document.msExitFullscreen();\r\n        } else {\r\n            console.log('Fullscreen API is not supported.');\r\n        }\r\n    };\r\n\r\n    @HostListener('click') getFullscreen(){\r\n        if(this.expand){\r\n            this.requestFullscreen(document.documentElement);\r\n        }\r\n        if(this.compress){\r\n            this.exitFullscreen();\r\n        }\r\n    }\r\n\r\n    @HostListener('window:resize') onFullScreenChange(){\r\n        let fullscreenElement = document.fullscreenElement || document.mozFullScreenElement ||\r\n                                document.webkitFullscreenElement || document.msFullscreenElement;\r\n        if (fullscreenElement != null) {\r\n            this.toggle = true;\r\n        } else {\r\n            this.toggle = false;          \r\n        }\r\n    }   \r\n\r\n}","export default \".horizontal-menu-item {\\n  position: relative;\\n}\\n.horizontal-menu-item .mat-button {\\n  height: 56px;\\n  font-weight: 400;\\n}\\n.horizontal-menu-item .horizontal-menu-icon {\\n  margin-right: 5px;\\n}\\n.horizontal-menu-item .horizontal-sub-menu {\\n  position: absolute;\\n  width: 190px;\\n  max-height: 0;\\n  overflow: hidden;\\n  transition: max-height 0.25s ease-out;\\n}\\n.horizontal-menu-item .horizontal-sub-menu .mat-button {\\n  width: 100%;\\n  height: 36px;\\n}\\n.horizontal-menu-item:hover > .horizontal-sub-menu {\\n  max-height: 500px;\\n  overflow: visible;\\n}\\n.horizontal-sub-menu .horizontal-sub-menu {\\n  left: 100%;\\n  top: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGhlbWUvY29tcG9uZW50cy9tZW51L2hvcml6b250YWwtbWVudS9EOlxcMzcwXFxGaW5hbEZyb250ZW5kL3NyY1xcYXBwXFx0aGVtZVxcY29tcG9uZW50c1xcbWVudVxcaG9yaXpvbnRhbC1tZW51XFxob3Jpem9udGFsLW1lbnUuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3RoZW1lL2NvbXBvbmVudHMvbWVudS9ob3Jpem9udGFsLW1lbnUvaG9yaXpvbnRhbC1tZW51LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC90aGVtZS9jb21wb25lbnRzL21lbnUvaG9yaXpvbnRhbC1tZW51L0Q6XFwzNzBcXEZpbmFsRnJvbnRlbmQvc3JjXFxhcHBcXHRoZW1lXFxzdHlsZXNcXF92YXJpYWJsZXMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUNJLGtCQUFBO0FDQUo7QURDSTtFQUNJLFlFRlM7RUZHVCxnQkFBQTtBQ0NSO0FEQ0k7RUFDSSxpQkFBQTtBQ0NSO0FEQ0k7RUFDSSxrQkFBQTtFQUNBLFlBQUE7RUFDQSxhQUFBO0VBQ0EsZ0JBQUE7RUFHQSxxQ0FBQTtBQ0NSO0FEQVE7RUFDSSxXQUFBO0VBQ0EsWUFBQTtBQ0VaO0FERUE7RUFDSSxpQkFBQTtFQUNBLGlCQUFBO0FDQ0o7QURDQTtFQUNJLFVBQUE7RUFDQSxNQUFBO0FDRUoiLCJmaWxlIjoic3JjL2FwcC90aGVtZS9jb21wb25lbnRzL21lbnUvaG9yaXpvbnRhbC1tZW51L2hvcml6b250YWwtbWVudS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgXCIuLi8uLi8uLi9zdHlsZXMvdmFyaWFibGVzXCI7XHJcbi5ob3Jpem9udGFsLW1lbnUtaXRlbXtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIC5tYXQtYnV0dG9ue1xyXG4gICAgICAgIGhlaWdodDogJGhvcml6b250YWwtbWVudS1oZWlnaHQ7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgIH1cclxuICAgIC5ob3Jpem9udGFsLW1lbnUtaWNvbntcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDVweDtcclxuICAgIH1cclxuICAgIC5ob3Jpem9udGFsLXN1Yi1tZW51e1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICB3aWR0aDogMTkwcHg7XHJcbiAgICAgICAgbWF4LWhlaWdodDogMDtcclxuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgIC13ZWJraXQtdHJhbnNpdGlvbjogbWF4LWhlaWdodCAwLjI1cyBlYXNlLW91dDsgIFxyXG4gICAgICAgIC1tb3otdHJhbnNpdGlvbjogbWF4LWhlaWdodCAwLjI1cyBlYXNlLW91dDsgIFxyXG4gICAgICAgIHRyYW5zaXRpb246IG1heC1oZWlnaHQgMC4yNXMgZWFzZS1vdXQ7ICAgIFxyXG4gICAgICAgIC5tYXQtYnV0dG9ue1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgaGVpZ2h0OiAzNnB4OyBcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuLmhvcml6b250YWwtbWVudS1pdGVtOmhvdmVyID4gLmhvcml6b250YWwtc3ViLW1lbnV7XHJcbiAgICBtYXgtaGVpZ2h0OiA1MDBweDtcclxuICAgIG92ZXJmbG93OiB2aXNpYmxlO1xyXG59XHJcbi5ob3Jpem9udGFsLXN1Yi1tZW51IC5ob3Jpem9udGFsLXN1Yi1tZW51e1xyXG4gICAgbGVmdDogMTAwJTtcclxuICAgIHRvcDogMDtcclxufSIsIi5ob3Jpem9udGFsLW1lbnUtaXRlbSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cbi5ob3Jpem9udGFsLW1lbnUtaXRlbSAubWF0LWJ1dHRvbiB7XG4gIGhlaWdodDogNTZweDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbn1cbi5ob3Jpem9udGFsLW1lbnUtaXRlbSAuaG9yaXpvbnRhbC1tZW51LWljb24ge1xuICBtYXJnaW4tcmlnaHQ6IDVweDtcbn1cbi5ob3Jpem9udGFsLW1lbnUtaXRlbSAuaG9yaXpvbnRhbC1zdWItbWVudSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDE5MHB4O1xuICBtYXgtaGVpZ2h0OiAwO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICAtd2Via2l0LXRyYW5zaXRpb246IG1heC1oZWlnaHQgMC4yNXMgZWFzZS1vdXQ7XG4gIC1tb3otdHJhbnNpdGlvbjogbWF4LWhlaWdodCAwLjI1cyBlYXNlLW91dDtcbiAgdHJhbnNpdGlvbjogbWF4LWhlaWdodCAwLjI1cyBlYXNlLW91dDtcbn1cbi5ob3Jpem9udGFsLW1lbnUtaXRlbSAuaG9yaXpvbnRhbC1zdWItbWVudSAubWF0LWJ1dHRvbiB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDM2cHg7XG59XG5cbi5ob3Jpem9udGFsLW1lbnUtaXRlbTpob3ZlciA+IC5ob3Jpem9udGFsLXN1Yi1tZW51IHtcbiAgbWF4LWhlaWdodDogNTAwcHg7XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4uaG9yaXpvbnRhbC1zdWItbWVudSAuaG9yaXpvbnRhbC1zdWItbWVudSB7XG4gIGxlZnQ6IDEwMCU7XG4gIHRvcDogMDtcbn0iLCIkZm9udC1mYW1pbHk6ICdSb2JvdG8nLCBzYW5zLXNlcmlmO1xyXG5cclxuJHRvb2xiYXItaGVpZ2h0OiA1NnB4OyBcclxuJGhvcml6b250YWwtbWVudS1oZWlnaHQ6ICR0b29sYmFyLWhlaWdodDtcclxuXHJcbiRzaWRlbmF2LXdpZHRoOiAyNTBweDtcclxuJHNpZGVuYXYtdXNlci1ibG9jay1oZWlnaHQ6IDE1NnB4O1xyXG4kbWluaS1zaWRlbmF2LXVzZXItYmxvY2staGVpZ2h0OiA3MHB4O1xyXG5cclxuJGZsZXgtZGlzdGFuY2U6IDhweDtcclxuJGlubmVyLXNpZGVuYXYtY29udGVudC1wYWRkaW5nOiAkZmxleC1kaXN0YW5jZTtcclxuXHJcbi8vTG9naW4sIFJlZ2lzdGVyLCBFcnJvcnMgYm94XHJcbiRib3gtaGVpZ2h0OiAxODZweDtcclxuJGJveC1wb3NpdGlvbjogMzRweDtcclxuJHJlZ2lzdGVyLWJveC1oZWlnaHQ6IDMwMHB4O1xyXG5cclxuJGZvb3Rlci1oZWlnaHQ6IDU2cHg7ICJdfQ== */\";","import { Component, OnInit, Input, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { AppSettings } from '../../../../app.settings';\r\nimport { Settings } from '../../../../app.settings.model';\r\nimport { MenuService } from '../menu.service';\r\nimport { MatMenuTrigger } from '@angular/material/menu';\r\n\r\n@Component({\r\n  selector: 'app-horizontal-menu',\r\n  templateUrl: './horizontal-menu.component.html',\r\n  styleUrls: ['./horizontal-menu.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  providers: [ MenuService ]\r\n})\r\nexport class HorizontalMenuComponent implements OnInit {\r\n  @Input('menuParentId') menuParentId;\r\n  public menuItems:Array<any>;\r\n  public settings: Settings;\r\n  @ViewChild(MatMenuTrigger) trigger: MatMenuTrigger;\r\n  constructor(public appSettings:AppSettings, public menuService:MenuService, public router:Router) { \r\n    this.settings = this.appSettings.settings;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.menuItems = this.menuService.getHorizontalMenuItems();\r\n    this.menuItems = this.menuItems.filter(item => item.parentId == this.menuParentId);\r\n  }\r\n\r\n  ngAfterViewInit(){\r\n    this.router.events.subscribe(event => {\r\n      if (event instanceof NavigationEnd) {\r\n        if(this.settings.fixedHeader){\r\n          let mainContent = document.getElementById('main-content');\r\n          if(mainContent){\r\n            mainContent.scrollTop = 0;\r\n          }\r\n        }\r\n        else{\r\n          document.getElementsByClassName('mat-drawer-content')[0].scrollTop = 0;\r\n        }\r\n      }                \r\n    });\r\n  } \r\n\r\n}","export class Menu {\r\n    constructor(public id: number,\r\n                public title: string,\r\n                public routerLink: string,\r\n                public href: string,\r\n                public icon: string,\r\n                public target: string,\r\n                public hasSubMenu: boolean,\r\n                public parentId: number) { }\r\n} ","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\n\r\nimport { Menu } from './menu.model';\r\nimport { verticalMenuItems, horizontalMenuItems } from './menu';\r\n\r\n@Injectable()\r\nexport class MenuService {\r\n\r\n  constructor(private location:Location,\r\n              private router:Router){ } \r\n    \r\n  public getVerticalMenuItems():Array<Menu> {\r\n    return verticalMenuItems;\r\n  }\r\n\r\n  public getHorizontalMenuItems():Array<Menu> {\r\n    return horizontalMenuItems;\r\n  }\r\n\r\n  public expandActiveSubMenu(menu:Array<Menu>){\r\n      let url = this.location.path();\r\n      let routerLink = url; // url.substring(1, url.length);\r\n      let activeMenuItem = menu.filter(item => item.routerLink === routerLink);\r\n      if(activeMenuItem[0]){\r\n        let menuItem = activeMenuItem[0];\r\n        while (menuItem.parentId != 0){  \r\n          let parentMenuItem = menu.filter(item => item.id == menuItem.parentId)[0];\r\n          menuItem = parentMenuItem;\r\n          this.toggleMenuItem(menuItem.id);\r\n        }\r\n      }\r\n  }\r\n\r\n  public toggleMenuItem(menuId){\r\n    let menuItem = document.getElementById('menu-item-'+menuId);\r\n    let subMenu = document.getElementById('sub-menu-'+menuId);  \r\n    if(subMenu){\r\n      if(subMenu.classList.contains('show')){\r\n        subMenu.classList.remove('show');\r\n        menuItem.classList.remove('expanded');\r\n      }\r\n      else{\r\n        subMenu.classList.add('show');\r\n        menuItem.classList.add('expanded');\r\n      }      \r\n    }\r\n  }\r\n\r\n  public closeOtherSubMenus(menu:Array<Menu>, menuId){\r\n    let currentMenuItem = menu.filter(item => item.id == menuId)[0]; \r\n    if(currentMenuItem.parentId == 0 && !currentMenuItem.target){\r\n      menu.forEach(item => {\r\n        if(item.id != menuId){\r\n          let subMenu = document.getElementById('sub-menu-'+item.id);\r\n          let menuItem = document.getElementById('menu-item-'+item.id);\r\n          if(subMenu){\r\n            if(subMenu.classList.contains('show')){\r\n              subMenu.classList.remove('show');\r\n              menuItem.classList.remove('expanded');\r\n            }              \r\n          } \r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n\r\n}\r\n","import { Menu } from './menu.model';\r\n\r\nexport const verticalMenuItems = [ \r\n    //new Menu (1, 'Dashboard', '/', null, 'dashboard', null, false, 0),\r\n\r\n    new Menu (30, 'Farm', null, null, 'computer', null, true, 0),\r\n    new Menu (1, 'Farm', '/farm', null, 'business', null, false, 30),\r\n    new Menu (1, 'Insurance Providers', '/insure', null, 'business', null, false, 30),\r\n    new Menu (2, 'Farm Health', '/health', null, 'healing', null, false, 30), \r\n    new Menu (31, 'Section', null, null, 'computer', null, true, 30),\r\n    new Menu (32, 'Staff Management', null, null, 'groups', null, true, 0),\r\n    new Menu (33, 'Vehicles', null, null, 'time_to_leave', null, true, 0),\r\n    new Menu (21, 'Farm Tasks', '/task', null, 'healing', null, false, 0), \r\n    new Menu (15, 'Section', '/section', null, 'healing', null, false, 31), \r\n\r\n\r\n    new Menu (3, 'Infrastructure', '/infrastructure', null, 'home', null, false, 30),\r\n    new Menu (7, 'Equipment', '/equipment', null, 'gavel', null, false, 30), \r\n    new Menu (4, 'Vehicles', '/vehicles', null, 'airline_seat_recline_normal', null, false, 33),\r\n    new Menu (5, 'Vehicle Service', '/service', null, 'build', null, false, 33), \r\n    new Menu (6, 'Repair Log', '/repairlog', null, 'calendar_view_day', null, false, 33), \r\n\r\n   // new Menu (2, 'Staff', '/users', null, 'supervisor_account', null, false, 0), \r\n   new Menu (36, 'Scheduling', null, null, 'build', null, true, 0),\r\n    new Menu (8, 'Task Scheduling', '/schedule', null, 'calendar_today', null, false, 36), \r\n    new Menu (16, 'Section Type', '/sec-type', null, 'healing', null, false, 31), \r\n\r\n    new Menu (9, 'Active List', '/active-list', null, 'list', null, false, 0), \r\n    new Menu (34, 'Faults', null, null, 'highlight_off', null, true, 0),\r\n    new Menu (10, 'Farm Faults', '/fault-log', null, 'highlight_off', null, false, 34), \r\n    new Menu (13, 'Fault Report', '/report', null, 'sort', null, false, 34), \r\n    // new Menu (11, 'Fm main', '/fm-main', null, 'healing', null, false, 0), \r\n\r\n    new Menu (35, 'Maintenance', null, null, 'build', null, true, 0),\r\n    new Menu (12, 'Maintenance', '/maintenance', null, 'healing', null, false, 35), \r\n    new Menu (12, 'Maintenance Report', '/maintenance-report', null, 'sort', null, false, 35), \r\n    new Menu (14, 'Section Report', '/sec-report', null, 'healing', null, false, 31), \r\n\r\n\r\n    new Menu (17, 'Service Providers', '/sr-prov', null, 'healing', null, false, 33), \r\n\r\n \r\n\r\n\r\n\r\n    // new Menu (22, 'Task-Type', '/task-type', null, 'healing', null, false, 0), \r\n\r\n    new Menu (2, 'Staff Members', '/users', null, 'emoji_people', null, false, 32), \r\n    new Menu (20, 'Staff Skills', '/skill', null, 'insert_emoticon', null, false, 32), \r\n    new Menu (19, 'Checked in Staff', '/staff', null, 'check', null, false, 32), \r\n    new Menu (18, 'Audit Report', '/audit-log', null, 'healing', null, false, 0), \r\n    new Menu (18, 'About Us', '/about', null, 'healing', null, false, 0), \r\n    /* new Menu (3, 'UI Features', null, null, 'computer', null, true, 0),   \r\n    new Menu (4, 'Buttons', '/ui/buttons', null, 'keyboard', null, false, 3),  \r\n    new Menu (5, 'Cards', '/ui/cards', null, 'card_membership', null, false, 3), \r\n    new Menu (6, 'Lists', '/ui/lists', null, 'list', null, false, 3), \r\n    new Menu (7, 'Grids', '/ui/grids', null, 'grid_on', null, false, 3), \r\n    new Menu (8, 'Tabs', '/ui/tabs', null, 'tab', null, false, 3), \r\n    new Menu (9, 'Expansion Panel', '/ui/expansion-panel', null, 'dns', null, false, 3),\r\n    new Menu (10, 'Chips', '/ui/chips', null, 'label', null, false, 3),\r\n    new Menu (11, 'Progress', '/ui/progress', null, 'data_usage', null, false, 3), \r\n    new Menu (12, 'Dialog', '/ui/dialog', null, 'open_in_new', null, false, 3), \r\n    new Menu (13, 'Tooltip', '/ui/tooltip', null, 'chat_bubble', null, false, 3), \r\n    new Menu (14, 'Snackbar', '/ui/snack-bar', null, 'sms', null, false, 3), \r\n    new Menu (15, 'Dynamic Menu', '/dynamic-menu', null, 'format_list_bulleted', null, false, 0),    \r\n    \r\n   \r\n    new Menu (20, 'Form Controls', null, null, 'dvr', null, true, 0), \r\n    new Menu (21, 'Autocomplete', '/form-controls/autocomplete', null, 'short_text', null, false, 20), \r\n    new Menu (22, 'Checkbox', '/form-controls/checkbox', null, 'check_box', null, false, 20), \r\n    new Menu (23, 'Datepicker', '/form-controls/datepicker', null, 'today', null, false, 20), \r\n    new Menu (24, 'Form field', '/form-controls/form-field', null, 'view_stream', null, false, 20), \r\n    new Menu (25, 'Input', '/form-controls/input', null, 'input', null, false, 20), \r\n    new Menu (26, 'Radio button', '/form-controls/radio-button', null, 'radio_button_checked', null, false, 20), \r\n    new Menu (27, 'Select', '/form-controls/select', null, 'playlist_add_check', null, false, 20), \r\n    new Menu (28, 'Slider', '/form-controls/slider', null, 'tune', null, false, 20), \r\n    new Menu (29, 'Slide toggle', '/form-controls/slide-toggle', null, 'star_half', null, false, 20), \r\n    new Menu (30, 'Tables', null, null, 'view_module', null, true, 0),\r\n    new Menu (31, 'Basic', '/tables/basic', null, 'view_column', null, false, 30), \r\n    new Menu (32, 'Paging', '/tables/paging', null, 'last_page', null, false, 30), \r\n    new Menu (33, 'Sorting', '/tables/sorting', null, 'sort', null, false, 30),\r\n    new Menu (34, 'Filtering', '/tables/filtering', null, 'format_line_spacing', null, false, 30),\r\n    new Menu (35, 'Selecting', '/tables/selecting', null, 'playlist_add_check', null, false, 30),\r\n    new Menu (36, 'NGX DataTable', '/tables/ngx-table', null, 'view_array', null, false, 30), \r\n    new Menu (40, 'Pages', null, null, 'library_books', null, true, 0),\r\n    new Menu (43, 'Login', '/login', null, 'exit_to_app', null, false, 40),    \r\n    new Menu (44, 'Register', '/register', null, 'person_add', null, false, 40),\r\n    new Menu (45, 'Blank', '/blank', null, 'check_box_outline_blank', null, false, 40),\r\n    new Menu (46, 'Page Not Found', '/pagenotfound', null, 'error_outline', null, false, 40),\r\n    new Menu (47, 'Error', '/error', null, 'warning', null, false, 40),\r\n    new Menu (48, 'Landing', '/landing', null, 'filter', null, false, 40),\r\n    new Menu (49, 'Profile', null, null, 'person', null, true, 40),\r\n    new Menu (50, 'Projects', '/profile/projects', null, 'note', null, false, 49),    \r\n    new Menu (51, 'User Info', '/profile/user-info', null, 'perm_contact_calendar', null, false, 49),\r\n    \r\n    new Menu (70, 'Charts', null, null, 'multiline_chart', null, true, 0),\r\n    new Menu (71, 'Bar Charts', '/charts/bar', null, 'insert_chart', null, false, 70),\r\n    new Menu (72, 'Pie Charts', '/charts/pie', null, 'pie_chart', null, false, 70),\r\n    new Menu (73, 'Line Charts', '/charts/line', null, 'show_chart', null, false, 70),\r\n    new Menu (74, 'Bubble Charts', '/charts/bubble', null, 'bubble_chart', null, false, 70), \r\n    new Menu (81, 'Drag & Drop', '/drag-drop', null, 'mouse', null, false, 0),  \r\n    new Menu (85, 'Material Icons', '/icons', null, 'insert_emoticon', null, false, 0),  \r\n    new Menu (140, 'Level 1', null, null, 'more_horiz', null, true, 0),\r\n    new Menu (141, 'Level 2', null, null, 'folder_open', null, true, 140),\r\n    new Menu (142, 'Level 3', null, null, 'folder_open', null, true, 141),\r\n    new Menu (143, 'Level 4', null, null, 'folder_open', null, true, 142),\r\n    new Menu (144, 'Level 5', null, 'http://themeseason.com', 'link', null, false, 143),\r\n    new Menu (200, 'External Link', null, 'http://themeseason.com', 'open_in_new', '_blank', false, 0)\r\n    */\r\n]\r\n\r\nexport const horizontalMenuItems = [ \r\n    new Menu (1, 'Dashboard', '/', null, 'dashboard', null, false, 0),\r\n    new Menu (2, 'Users', '/users', null, 'supervisor_account', null, false, 0), \r\n    new Menu (3, 'UI Features', null, null, 'computer', null, true, 0),   \r\n    new Menu (4, 'Buttons', '/ui/buttons', null, 'keyboard', null, false, 3),  \r\n    new Menu (5, 'Cards', '/ui/cards', null, 'card_membership', null, false, 3), \r\n    new Menu (6, 'Lists', '/ui/lists', null, 'list', null, false, 3), \r\n    new Menu (7, 'Grids', '/ui/grids', null, 'grid_on', null, false, 3), \r\n    new Menu (8, 'Tabs', '/ui/tabs', null, 'tab', null, false, 3), \r\n    new Menu (9, 'Expansion Panel', '/ui/expansion-panel', null, 'dns', null, false, 3), \r\n    new Menu (10, 'Chips', '/ui/chips', null, 'label', null, false, 3),\r\n    new Menu (11, 'Progress', '/ui/progress', null, 'data_usage', null, false, 3), \r\n    new Menu (12, 'Dialog', '/ui/dialog', null, 'open_in_new', null, false, 3), \r\n    new Menu (13, 'Tooltip', '/ui/tooltip', null, 'chat_bubble', null, false, 3), \r\n    new Menu (14, 'Snackbar', '/ui/snack-bar', null, 'sms', null, false, 3),\r\n   \r\n    new Menu (20, 'Form Controls', null, null, 'dvr', null, true, 0), \r\n    new Menu (21, 'Autocomplete', '/form-controls/autocomplete', null, 'short_text', null, false, 20), \r\n    new Menu (22, 'Checkbox', '/form-controls/checkbox', null, 'check_box', null, false, 20), \r\n    new Menu (23, 'Datepicker', '/form-controls/datepicker', null, 'today', null, false, 20), \r\n    new Menu (24, 'Form field', '/form-controls/form-field', null, 'view_stream', null, false, 20), \r\n    new Menu (25, 'Input', '/form-controls/input', null, 'input', null, false, 20), \r\n    new Menu (26, 'Radio button', '/form-controls/radio-button', null, 'radio_button_checked', null, false, 20), \r\n    new Menu (27, 'Select', '/form-controls/select', null, 'playlist_add_check', null, false, 20), \r\n    new Menu (28, 'Slider', '/form-controls/slider', null, 'tune', null, false, 20), \r\n    new Menu (29, 'Slide toggle', '/form-controls/slide-toggle', null, 'star_half', null, false, 20),    \r\n    new Menu (30, 'Tables', null, null, 'view_module', null, true, 0),\r\n    new Menu (31, 'Basic', '/tables/basic', null, 'view_column', null, false, 30), \r\n    new Menu (32, 'Paging', '/tables/paging', null, 'last_page', null, false, 30), \r\n    new Menu (33, 'Sorting', '/tables/sorting', null, 'sort', null, false, 30),\r\n    new Menu (34, 'Filtering', '/tables/filtering', null, 'format_line_spacing', null, false, 30),\r\n    new Menu (35, 'Selecting', '/tables/selecting', null, 'playlist_add_check', null, false, 30),\r\n    new Menu (36, 'NGX DataTable', '/tables/ngx-table', null, 'view_array', null, false, 30), \r\n    new Menu (70, 'Charts', null, null, 'multiline_chart', null, true, 0),\r\n    new Menu (71, 'Bar Charts', '/charts/bar', null, 'insert_chart', null, false, 70),\r\n    new Menu (72, 'Pie Charts', '/charts/pie', null, 'pie_chart', null, false, 70),\r\n    new Menu (73, 'Line Charts', '/charts/line', null, 'show_chart', null, false, 70),\r\n    new Menu (74, 'Bubble Charts', '/charts/bubble', null, 'bubble_chart', null, false, 70), \r\n  \r\n    new Menu (81, 'Drag & Drop', '/drag-drop', null, 'mouse', null, false, 3), \r\n    new Menu (85, 'Material Icons', '/icons', null, 'insert_emoticon', null, false, 3),\r\n    new Menu (40, 'Pages', null, null, 'library_books', null, true, 0),\r\n    new Menu (43, 'Login', '/login', null, 'exit_to_app', null, false, 40),    \r\n    new Menu (44, 'Register', '/register', null, 'person_add', null, false, 40),\r\n    new Menu (45, 'Blank', '/blank', null, 'check_box_outline_blank', null, false, 40),\r\n    new Menu (46, 'Page Not Found', '/pagenotfound', null, 'error_outline', null, false, 40),\r\n    new Menu (47, 'Error', '/error', null, 'warning', null, false, 40),\r\n    new Menu (48, 'Landing', '/landing', null, 'filter', null, false, 40),\r\n    new Menu (49, 'Profile', null, null, 'person', null, true, 40),\r\n    new Menu (50, 'Projects', '/profile/projects', null, 'note', null, false, 49),    \r\n    new Menu (51, 'User Info', '/profile/user-info', null, 'perm_contact_calendar', null, false, 49),\r\n  \r\n    new Menu (200, 'External Link', null, 'http://themeseason.com', 'open_in_new', '_blank', false, 40)\r\n]","export default \".menu-icon {\\n  margin-right: 12px;\\n}\\n\\n.menu-expand-icon {\\n  position: absolute;\\n  right: 10px;\\n  top: 10px;\\n}\\n\\n.menu-item .mat-button {\\n  padding: 0;\\n  padding-top: 3px;\\n  padding-bottom: 3px;\\n  width: 100%;\\n  font-weight: 400;\\n}\\n\\n.menu-item .mat-button.expanded .menu-expand-icon {\\n  transform: rotate(180deg);\\n}\\n\\n.menu-item .mat-button-wrapper {\\n  padding-left: 16px;\\n}\\n\\n.sub-menu {\\n  max-height: 0;\\n  overflow: hidden;\\n  transition: max-height 0.25s ease-out;\\n}\\n\\n.sub-menu .sub-menu .mat-button {\\n  padding-left: 40px;\\n}\\n\\n.sub-menu .sub-menu .sub-menu .mat-button {\\n  padding-left: 60px;\\n}\\n\\n.sub-menu .sub-menu .sub-menu .sub-menu .mat-button {\\n  padding-left: 80px;\\n}\\n\\n.sub-menu .sub-menu .sub-menu .sub-menu .sub-menu .mat-button {\\n  padding-left: 100px;\\n}\\n\\n.sub-menu .sub-menu .sub-menu .sub-menu .sub-menu .sub-menu .mat-button {\\n  padding-left: 120px;\\n}\\n\\n.sub-menu .sub-menu .sub-menu .sub-menu .sub-menu .sub-menu .sub-menu .mat-button {\\n  padding-left: 140px;\\n}\\n\\n.sub-menu .sub-menu .sub-menu .sub-menu .sub-menu .sub-menu .sub-menu .sub-menu .mat-button {\\n  padding-left: 160px;\\n}\\n\\n.sub-menu .sub-menu .sub-menu .sub-menu .sub-menu .sub-menu .sub-menu .sub-menu .sub-menu .mat-button {\\n  padding-left: 180px;\\n}\\n\\n.sub-menu .sub-menu .sub-menu .sub-menu .sub-menu .sub-menu .sub-menu .sub-menu .sub-menu .sub-menu .mat-button {\\n  padding-left: 200px;\\n}\\n\\n.sub-menu .mat-button {\\n  padding-left: 20px;\\n}\\n\\n.sub-menu.show {\\n  max-height: 500px;\\n  transition: max-height 0.25s ease-in;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGhlbWUvY29tcG9uZW50cy9tZW51L3ZlcnRpY2FsLW1lbnUvRDpcXDM3MFxcRmluYWxGcm9udGVuZC9zcmNcXGFwcFxcdGhlbWVcXGNvbXBvbmVudHNcXG1lbnVcXHZlcnRpY2FsLW1lbnVcXHZlcnRpY2FsLW1lbnUuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3RoZW1lL2NvbXBvbmVudHMvbWVudS92ZXJ0aWNhbC1tZW51L3ZlcnRpY2FsLW1lbnUuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3RoZW1lL2NvbXBvbmVudHMvbWVudS92ZXJ0aWNhbC1tZW51L0Q6XFwzNzBcXEZpbmFsRnJvbnRlbmQvc3JjXFxhcHBcXHRoZW1lXFxzdHlsZXNcXF9taXhpbnMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNJLGtCQUFBO0FDREo7O0FER0E7RUFDSSxrQkFBQTtFQUNBLFdBQUE7RUFDQSxTQUFBO0FDQUo7O0FESUk7RUFDSSxVQUFBO0VBQ0EsZ0JBQUE7RUFDQSxtQkFBQTtFQUNBLFdBQUE7RUFDQSxnQkFBQTtBQ0RSOztBREdZO0VBR0kseUJBQUE7QUNEaEI7O0FETUk7RUFDSSxrQkFBQTtBQ0pSOztBRFFBO0VBRUksYUFBQTtFQUNBLGdCQUFBO0VBR0EscUNBQUE7QUNOSjs7QUM1QlE7RUFLUSxrQkFBQTtBRDBCaEI7O0FDL0JRO0VBS1Esa0JBQUE7QUQ2QmhCOztBQ2xDUTtFQUtRLGtCQUFBO0FEZ0NoQjs7QUNyQ1E7RUFLUSxtQkFBQTtBRG1DaEI7O0FDeENRO0VBS1EsbUJBQUE7QURzQ2hCOztBQzNDUTtFQUtRLG1CQUFBO0FEeUNoQjs7QUM5Q1E7RUFLUSxtQkFBQTtBRDRDaEI7O0FDakRRO0VBS1EsbUJBQUE7QUQrQ2hCOztBQ3BEUTtFQUtRLG1CQUFBO0FEa0RoQjs7QURwQkk7RUFDSSxrQkFBQTtBQ3NCUjs7QURwQkk7RUFDSSxpQkFBQTtFQUdBLG9DQUFBO0FDc0JSIiwiZmlsZSI6InNyYy9hcHAvdGhlbWUvY29tcG9uZW50cy9tZW51L3ZlcnRpY2FsLW1lbnUvdmVydGljYWwtbWVudS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgXCIuLi8uLi8uLi9zdHlsZXMvbWl4aW5zXCI7XHJcblxyXG4ubWVudS1pY29ue1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAxMnB4O1xyXG59XHJcbi5tZW51LWV4cGFuZC1pY29ue1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgcmlnaHQ6IDEwcHg7XHJcbiAgICB0b3A6IDEwcHg7XHJcbn1cclxuXHJcbi5tZW51LWl0ZW17XHJcbiAgICAubWF0LWJ1dHRvbntcclxuICAgICAgICBwYWRkaW5nOiAwOyAgICBcclxuICAgICAgICBwYWRkaW5nLXRvcDogM3B4O1xyXG4gICAgICAgIHBhZGRpbmctYm90dG9tOiAzcHg7IFxyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICAgICAgJi5leHBhbmRlZHtcclxuICAgICAgICAgICAgLm1lbnUtZXhwYW5kLWljb257XHJcbiAgICAgICAgICAgICAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7XHJcbiAgICAgICAgICAgICAgICAtbW96LXRyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7XHJcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgIH1cclxuICAgIC5tYXQtYnV0dG9uLXdyYXBwZXJ7XHJcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAxNnB4O1xyXG4gICAgfSAgICBcclxufVxyXG5cclxuLnN1Yi1tZW51e1xyXG4gICAgQGluY2x1ZGUgbWVudS1sZXZlbC1wYWRkaW5nKCdsdHInKTtcclxuICAgIG1heC1oZWlnaHQ6IDA7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiBtYXgtaGVpZ2h0IDAuMjVzIGVhc2Utb3V0OyAgXHJcbiAgICAtbW96LXRyYW5zaXRpb246IG1heC1oZWlnaHQgMC4yNXMgZWFzZS1vdXQ7ICBcclxuICAgIHRyYW5zaXRpb246IG1heC1oZWlnaHQgMC4yNXMgZWFzZS1vdXQ7ICAgIFxyXG4gICAgLm1hdC1idXR0b257XHJcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAyMHB4OyAgICAgIFxyXG4gICAgfSBcclxuICAgICYuc2hvd3tcclxuICAgICAgICBtYXgtaGVpZ2h0OiA1MDBweDtcclxuICAgICAgICAtd2Via2l0LXRyYW5zaXRpb246IG1heC1oZWlnaHQgMC4yNXMgZWFzZS1pbjtcclxuICAgICAgICAtbW96LXRyYW5zaXRpb246IG1heC1oZWlnaHQgMC4yNXMgZWFzZS1pbjtcclxuICAgICAgICB0cmFuc2l0aW9uOiBtYXgtaGVpZ2h0IDAuMjVzIGVhc2UtaW47XHJcbiAgICB9ICAgIFxyXG59IiwiLm1lbnUtaWNvbiB7XG4gIG1hcmdpbi1yaWdodDogMTJweDtcbn1cblxuLm1lbnUtZXhwYW5kLWljb24ge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHJpZ2h0OiAxMHB4O1xuICB0b3A6IDEwcHg7XG59XG5cbi5tZW51LWl0ZW0gLm1hdC1idXR0b24ge1xuICBwYWRkaW5nOiAwO1xuICBwYWRkaW5nLXRvcDogM3B4O1xuICBwYWRkaW5nLWJvdHRvbTogM3B4O1xuICB3aWR0aDogMTAwJTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbn1cbi5tZW51LWl0ZW0gLm1hdC1idXR0b24uZXhwYW5kZWQgLm1lbnUtZXhwYW5kLWljb24ge1xuICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7XG4gIC1tb3otdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTtcbiAgdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTtcbn1cbi5tZW51LWl0ZW0gLm1hdC1idXR0b24td3JhcHBlciB7XG4gIHBhZGRpbmctbGVmdDogMTZweDtcbn1cblxuLnN1Yi1tZW51IHtcbiAgbWF4LWhlaWdodDogMDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBtYXgtaGVpZ2h0IDAuMjVzIGVhc2Utb3V0O1xuICAtbW96LXRyYW5zaXRpb246IG1heC1oZWlnaHQgMC4yNXMgZWFzZS1vdXQ7XG4gIHRyYW5zaXRpb246IG1heC1oZWlnaHQgMC4yNXMgZWFzZS1vdXQ7XG59XG4uc3ViLW1lbnUgLnN1Yi1tZW51IC5tYXQtYnV0dG9uIHtcbiAgcGFkZGluZy1sZWZ0OiA0MHB4O1xufVxuLnN1Yi1tZW51IC5zdWItbWVudSAuc3ViLW1lbnUgLm1hdC1idXR0b24ge1xuICBwYWRkaW5nLWxlZnQ6IDYwcHg7XG59XG4uc3ViLW1lbnUgLnN1Yi1tZW51IC5zdWItbWVudSAuc3ViLW1lbnUgLm1hdC1idXR0b24ge1xuICBwYWRkaW5nLWxlZnQ6IDgwcHg7XG59XG4uc3ViLW1lbnUgLnN1Yi1tZW51IC5zdWItbWVudSAuc3ViLW1lbnUgLnN1Yi1tZW51IC5tYXQtYnV0dG9uIHtcbiAgcGFkZGluZy1sZWZ0OiAxMDBweDtcbn1cbi5zdWItbWVudSAuc3ViLW1lbnUgLnN1Yi1tZW51IC5zdWItbWVudSAuc3ViLW1lbnUgLnN1Yi1tZW51IC5tYXQtYnV0dG9uIHtcbiAgcGFkZGluZy1sZWZ0OiAxMjBweDtcbn1cbi5zdWItbWVudSAuc3ViLW1lbnUgLnN1Yi1tZW51IC5zdWItbWVudSAuc3ViLW1lbnUgLnN1Yi1tZW51IC5zdWItbWVudSAubWF0LWJ1dHRvbiB7XG4gIHBhZGRpbmctbGVmdDogMTQwcHg7XG59XG4uc3ViLW1lbnUgLnN1Yi1tZW51IC5zdWItbWVudSAuc3ViLW1lbnUgLnN1Yi1tZW51IC5zdWItbWVudSAuc3ViLW1lbnUgLnN1Yi1tZW51IC5tYXQtYnV0dG9uIHtcbiAgcGFkZGluZy1sZWZ0OiAxNjBweDtcbn1cbi5zdWItbWVudSAuc3ViLW1lbnUgLnN1Yi1tZW51IC5zdWItbWVudSAuc3ViLW1lbnUgLnN1Yi1tZW51IC5zdWItbWVudSAuc3ViLW1lbnUgLnN1Yi1tZW51IC5tYXQtYnV0dG9uIHtcbiAgcGFkZGluZy1sZWZ0OiAxODBweDtcbn1cbi5zdWItbWVudSAuc3ViLW1lbnUgLnN1Yi1tZW51IC5zdWItbWVudSAuc3ViLW1lbnUgLnN1Yi1tZW51IC5zdWItbWVudSAuc3ViLW1lbnUgLnN1Yi1tZW51IC5zdWItbWVudSAubWF0LWJ1dHRvbiB7XG4gIHBhZGRpbmctbGVmdDogMjAwcHg7XG59XG4uc3ViLW1lbnUgLm1hdC1idXR0b24ge1xuICBwYWRkaW5nLWxlZnQ6IDIwcHg7XG59XG4uc3ViLW1lbnUuc2hvdyB7XG4gIG1heC1oZWlnaHQ6IDUwMHB4O1xuICAtd2Via2l0LXRyYW5zaXRpb246IG1heC1oZWlnaHQgMC4yNXMgZWFzZS1pbjtcbiAgLW1vei10cmFuc2l0aW9uOiBtYXgtaGVpZ2h0IDAuMjVzIGVhc2UtaW47XG4gIHRyYW5zaXRpb246IG1heC1oZWlnaHQgMC4yNXMgZWFzZS1pbjtcbn0iLCJAbWl4aW4gbWVudS1sZXZlbC1wYWRkaW5nKCRkaXJlY3Rpb24pe1xyXG4gICAgJGVsZW06ICcnO1xyXG4gICAgQGZvciAkaSBmcm9tIDIgdGhyb3VnaCAxMCB7XHJcbiAgICAgICAgJGVsZW06IGlmKCRpID09IDIsIFwiLnN1Yi1tZW51XCIsIHNlbGVjdG9yLW5lc3QoJGVsZW0sIFwiLnN1Yi1tZW51XCIpKTsgICAgICBcclxuICAgICAgICAjeyRlbGVtICsgJyAubWF0LWJ1dHRvbid9IHsgXHJcbiAgICAgICAgICAgIEBpZiAkZGlyZWN0aW9uID09IFwicnRsXCIge1xyXG4gICAgICAgICAgICAgICAgcGFkZGluZy1yaWdodDogMjBweCAqICRpOyBcclxuICAgICAgICAgICAgfSBcclxuICAgICAgICAgICAgQGVsc2V7XHJcbiAgICAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDIwcHggKiAkaTsgXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iXX0= */\";","import { Component, OnInit, Input, Output, ViewEncapsulation, EventEmitter } from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { AppSettings } from '../../../../app.settings';\r\nimport { Settings } from '../../../../app.settings.model';\r\nimport { MenuService } from '../menu.service';\r\n\r\n@Component({\r\n  selector: 'app-vertical-menu',\r\n  templateUrl: './vertical-menu.component.html',\r\n  styleUrls: ['./vertical-menu.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  providers: [ MenuService ]\r\n})\r\nexport class VerticalMenuComponent implements OnInit {\r\n  @Input('menuItems') menuItems;\r\n  @Input('menuParentId') menuParentId;\r\n  @Output() onClickMenuItem:EventEmitter<any> = new EventEmitter<any>();\r\n  parentMenu:Array<any>;\r\n  public settings: Settings;\r\n  constructor(public appSettings:AppSettings, public menuService:MenuService, public router:Router) { \r\n    this.settings = this.appSettings.settings;\r\n  }\r\n\r\n  ngOnInit() {     \r\n    this.parentMenu = this.menuItems.filter(item => item.parentId == this.menuParentId);  \r\n  }\r\n\r\n  ngAfterViewInit(){\r\n    this.router.events.subscribe(event => {\r\n      if (event instanceof NavigationEnd) {\r\n        if(this.settings.fixedHeader){\r\n          let mainContent = document.getElementById('main-content');\r\n          if(mainContent){\r\n            mainContent.scrollTop = 0;\r\n          }\r\n        }\r\n        else{\r\n          document.getElementsByClassName('mat-drawer-content')[0].scrollTop = 0;\r\n        }\r\n      }                \r\n    });\r\n  }\r\n\r\n  onClick(menuId){\r\n    this.menuService.toggleMenuItem(menuId);\r\n    this.menuService.closeOtherSubMenus(this.menuItems, menuId);\r\n    this.onClickMenuItem.emit(menuId);     \r\n  }\r\n\r\n}\r\n","export default \".messages .mat-tab-label {\\n  min-width: 93.3px;\\n  height: 40px;\\n}\\n.messages .content {\\n  padding: 0;\\n  height: 250px;\\n}\\n.messages img {\\n  margin-right: 8px;\\n  border-radius: 4px;\\n}\\n.messages span.name {\\n  text-transform: capitalize;\\n  font-size: 13px;\\n  line-height: 22px;\\n}\\n.messages span.info {\\n  font-size: 12px;\\n  opacity: 0.8;\\n  line-height: 22px;\\n}\\n.messages span.text {\\n  font-size: 11px;\\n  line-height: 14px;\\n  white-space: initial;\\n  text-align: left;\\n}\\n.messages .mat-button {\\n  padding: 8px;\\n}\\n.messages .mat-button .mat-button-wrapper {\\n  display: flex;\\n  flex-direction: row;\\n  align-items: flex-start;\\n}\\n.messages .mat-button .mat-icon {\\n  height: 16px;\\n  font-size: 12px;\\n  width: 12px;\\n  vertical-align: middle;\\n}\\n.messages .row-1 {\\n  box-shadow: 0 0 5px #ccc;\\n  border-radius: 4px;\\n  padding: 2px 13px;\\n  margin-right: 8px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGhlbWUvY29tcG9uZW50cy9tZXNzYWdlcy9EOlxcMzcwXFxGaW5hbEZyb250ZW5kL3NyY1xcYXBwXFx0aGVtZVxcY29tcG9uZW50c1xcbWVzc2FnZXNcXG1lc3NhZ2VzLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC90aGVtZS9jb21wb25lbnRzL21lc3NhZ2VzL21lc3NhZ2VzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNJO0VBQ0ksaUJBQUE7RUFDQSxZQUFBO0FDQVI7QURFSTtFQUNJLFVBQUE7RUFDQSxhQUFBO0FDQVI7QURFSTtFQUNJLGlCQUFBO0VBQ0Esa0JBQUE7QUNBUjtBREVJO0VBQ0ksMEJBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7QUNBUjtBREVJO0VBQ0ksZUFBQTtFQUNBLFlBQUE7RUFDQSxpQkFBQTtBQ0FSO0FERUk7RUFDSSxlQUFBO0VBQ0EsaUJBQUE7RUFDQSxvQkFBQTtFQUNBLGdCQUFBO0FDQVI7QURFSTtFQUNJLFlBQUE7QUNBUjtBRENRO0VBQ0ksYUFBQTtFQUNBLG1CQUFBO0VBQ0EsdUJBQUE7QUNDWjtBRENRO0VBQ0ksWUFBQTtFQUNBLGVBQUE7RUFDQSxXQUFBO0VBQ0Esc0JBQUE7QUNDWjtBREVJO0VBQ0ksd0JBQUE7RUFDQSxrQkFBQTtFQUNBLGlCQUFBO0VBQ0EsaUJBQUE7QUNBUiIsImZpbGUiOiJzcmMvYXBwL3RoZW1lL2NvbXBvbmVudHMvbWVzc2FnZXMvbWVzc2FnZXMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWVzc2FnZXN7XHJcbiAgICAubWF0LXRhYi1sYWJlbHtcclxuICAgICAgICBtaW4td2lkdGg6IDkzLjNweDtcclxuICAgICAgICBoZWlnaHQ6IDQwcHg7XHJcbiAgICB9XHJcbiAgICAuY29udGVudHtcclxuICAgICAgICBwYWRkaW5nOiAwO1xyXG4gICAgICAgIGhlaWdodDogMjUwcHg7XHJcbiAgICB9XHJcbiAgICBpbWd7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiA4cHg7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gICAgfVxyXG4gICAgc3Bhbi5uYW1le1xyXG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTNweDtcclxuICAgICAgICBsaW5lLWhlaWdodDogMjJweDtcclxuICAgIH1cclxuICAgIHNwYW4uaW5mb3tcclxuICAgICAgICBmb250LXNpemU6IDEycHg7XHJcbiAgICAgICAgb3BhY2l0eTogMC44O1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAyMnB4O1xyXG4gICAgfVxyXG4gICAgc3Bhbi50ZXh0e1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTFweDtcclxuICAgICAgICBsaW5lLWhlaWdodDogMTRweDtcclxuICAgICAgICB3aGl0ZS1zcGFjZTogaW5pdGlhbDtcclxuICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgfSAgXHJcbiAgICAubWF0LWJ1dHRvbntcclxuICAgICAgICBwYWRkaW5nOiA4cHg7XHJcbiAgICAgICAgLm1hdC1idXR0b24td3JhcHBlcntcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC5tYXQtaWNvbntcclxuICAgICAgICAgICAgaGVpZ2h0OiAxNnB4O1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEycHg7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMnB4O1xyXG4gICAgICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC5yb3ctMXtcclxuICAgICAgICBib3gtc2hhZG93OiAwIDAgNXB4ICNjY2M7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gICAgICAgIHBhZGRpbmc6IDJweCAxM3B4O1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogOHB4O1xyXG4gICAgfVxyXG59IiwiLm1lc3NhZ2VzIC5tYXQtdGFiLWxhYmVsIHtcbiAgbWluLXdpZHRoOiA5My4zcHg7XG4gIGhlaWdodDogNDBweDtcbn1cbi5tZXNzYWdlcyAuY29udGVudCB7XG4gIHBhZGRpbmc6IDA7XG4gIGhlaWdodDogMjUwcHg7XG59XG4ubWVzc2FnZXMgaW1nIHtcbiAgbWFyZ2luLXJpZ2h0OiA4cHg7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbn1cbi5tZXNzYWdlcyBzcGFuLm5hbWUge1xuICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcbiAgZm9udC1zaXplOiAxM3B4O1xuICBsaW5lLWhlaWdodDogMjJweDtcbn1cbi5tZXNzYWdlcyBzcGFuLmluZm8ge1xuICBmb250LXNpemU6IDEycHg7XG4gIG9wYWNpdHk6IDAuODtcbiAgbGluZS1oZWlnaHQ6IDIycHg7XG59XG4ubWVzc2FnZXMgc3Bhbi50ZXh0IHtcbiAgZm9udC1zaXplOiAxMXB4O1xuICBsaW5lLWhlaWdodDogMTRweDtcbiAgd2hpdGUtc3BhY2U6IGluaXRpYWw7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59XG4ubWVzc2FnZXMgLm1hdC1idXR0b24ge1xuICBwYWRkaW5nOiA4cHg7XG59XG4ubWVzc2FnZXMgLm1hdC1idXR0b24gLm1hdC1idXR0b24td3JhcHBlciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xufVxuLm1lc3NhZ2VzIC5tYXQtYnV0dG9uIC5tYXQtaWNvbiB7XG4gIGhlaWdodDogMTZweDtcbiAgZm9udC1zaXplOiAxMnB4O1xuICB3aWR0aDogMTJweDtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbn1cbi5tZXNzYWdlcyAucm93LTEge1xuICBib3gtc2hhZG93OiAwIDAgNXB4ICNjY2M7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgcGFkZGluZzogMnB4IDEzcHg7XG4gIG1hcmdpbi1yaWdodDogOHB4O1xufSJdfQ== */\";","import { Component, OnInit, ViewEncapsulation, ViewChild } from '@angular/core';\r\nimport { MatMenuTrigger } from '@angular/material/menu';\r\nimport { MessagesService } from './messages.service';\r\n\r\n@Component({\r\n  selector: 'app-messages',\r\n  templateUrl: './messages.component.html',\r\n  styleUrls: ['./messages.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  providers: [ MessagesService ]\r\n})\r\nexport class MessagesComponent implements OnInit {  \r\n  @ViewChild(MatMenuTrigger) trigger: MatMenuTrigger;\r\n  public selectedTab:number=1;\r\n  public messages:Array<Object>;\r\n  public files:Array<Object>;\r\n  public meetings:Array<Object>;  \r\n  constructor(private messagesService:MessagesService) { \r\n    this.messages = messagesService.getMessages();\r\n    this.files = messagesService.getFiles();\r\n    this.meetings = messagesService.getMeetings();    \r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  openMessagesMenu() {\r\n    this.trigger.openMenu();\r\n    this.selectedTab = 0;\r\n  }\r\n\r\n  onMouseLeave(){\r\n    this.trigger.closeMenu();\r\n  }\r\n\r\n  stopClickPropagate(event: any){\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core'\r\n\r\n@Injectable()\r\nexport class MessagesService {\r\n\r\n    private messages = [\r\n        {\r\n            name: 'ashley',\r\n            text: 'After you get up and running, you can place Font Awesome icons just about...',\r\n            time: '1 min ago'\r\n        },\r\n        {\r\n            name: 'michael',\r\n            text: 'You asked, Font Awesome delivers with 40 shiny new icons in version 4.2.',\r\n            time: '2 hrs ago'\r\n        },\r\n        {\r\n            name: 'julia',\r\n            text: 'Want to request new icons? Here\\'s how. Need vectors or want to use on the...',\r\n            time: '10 hrs ago'\r\n        },\r\n        {\r\n            name: 'bruno',\r\n            text: 'Explore your passions and discover new ones by getting involved. Stretch your...',\r\n            time: '1 day ago'\r\n        },\r\n        {\r\n            name: 'tereza',\r\n            text: 'Get to know who we are - from the inside out. From our history and culture, to the...',\r\n            time: '1 day ago'\r\n        },\r\n        {\r\n            name: 'adam',\r\n            text: 'Need some support to reach your goals? Apply for scholarships across...',\r\n            time: '2 days ago'\r\n        },\r\n        {\r\n            name: 'michael',\r\n            text: 'Wrap the dropdown\\'s trigger and the dropdown menu within .dropdown, or...',\r\n            time: '1 week ago'\r\n        }\r\n    ];   \r\n\r\n    private files = [        \r\n        {\r\n            text:'gradus.zip',\r\n            size: '~6.2 MB',\r\n            value: '47',\r\n            color: 'primary'\r\n        },\r\n        {\r\n            text: 'documentation.pdf',\r\n            size: '~14.6 MB',\r\n            value: '33',\r\n            color: 'accent'\r\n        },\r\n        {\r\n            text: 'wallpaper.jpg',\r\n            size: '~558 KB',\r\n            value: '60',\r\n            color: 'warn'\r\n        },\r\n        {\r\n            text: 'letter.doc',\r\n            size: '~57 KB',\r\n            value: '80',\r\n            color: 'primary'\r\n        },\r\n        {\r\n            text: 'azimuth.zip',\r\n            size: '~10.2 MB',\r\n            value: '55',\r\n            color: 'warn'\r\n        },\r\n        {\r\n            text: 'contacts.xlsx',\r\n            size: '~96 KB',\r\n            value: '75',\r\n            color: 'accent'\r\n        }\r\n    ];\r\n\r\n    private meetings = [\r\n        {\r\n            day: '09',\r\n            month: 'May',\r\n            title: 'Meeting with Bruno',\r\n            text: 'Fusce ut condimentum velit, quis egestas eros. Quisque sed condimentum neque.',\r\n            color: 'danger'\r\n        },       \r\n        {\r\n            day: '15',\r\n            month: 'May',\r\n            title: 'Training course',\r\n            text: 'Fusce arcu tortor, tempor aliquam augue vel, consectetur vehicula lectus.',\r\n            color: 'primary'\r\n        },\r\n        {\r\n            day: '12',\r\n            month: 'June',\r\n            title: 'Dinner with Ashley',\r\n            text: 'Curabitur rhoncus facilisis augue sed fringilla.',\r\n            color: 'info'\r\n        },\r\n        {\r\n            day: '14',\r\n            month: 'June',\r\n            title: 'Sport time',\r\n            text: 'Vivamus tristique enim eros, ac ultricies sem ultrices vitae.',\r\n            color: 'warning'\r\n        },\r\n        {\r\n            day: '29',\r\n            month: 'July',\r\n            title: 'Birthday of Julia',\r\n            text: 'Nam porttitor justo nec elit efficitur vestibulum.',\r\n            color:'success'\r\n        }\r\n    ];\r\n\r\n    public getMessages():Array<Object> {\r\n        return this.messages;\r\n    }\r\n\r\n    public getFiles():Array<Object> {\r\n        return this.files;\r\n    }\r\n\r\n    public getMeetings():Array<Object> {\r\n        return this.meetings;\r\n    }   \r\n\r\n}","export default \".pin {\\n  width: 24px;\\n  height: 24px;\\n  cursor: pointer;\\n  fill: currentColor;\\n}\\n\\n.sidenav-header {\\n  padding: 0 10px !important;\\n}\\n\\n.user-block {\\n  height: 0;\\n  position: relative;\\n  z-index: 1;\\n  overflow: hidden;\\n}\\n\\n.user-block img {\\n  width: 80px;\\n  border: 1px solid rgba(0, 0, 0, 0.2);\\n  border-radius: 50%;\\n}\\n\\n.user-block .user-info-wrapper {\\n  padding: 0 6px;\\n  margin: 6px 0;\\n  width: 100%;\\n}\\n\\n.user-block .user-info-wrapper .user-info {\\n  text-align: center;\\n}\\n\\n.user-block .user-info-wrapper .user-info .name {\\n  font-size: 15px;\\n}\\n\\n.user-block .user-info-wrapper .user-info .position {\\n  font-size: 13px;\\n}\\n\\n.user-block.show {\\n  height: 156px;\\n}\\n\\n.sidenav-menu-outer .ps {\\n  height: calc(100% - 56px);\\n}\\n\\n.sidenav-menu-outer.user-block-show .ps {\\n  height: calc(100% - 212px);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGhlbWUvY29tcG9uZW50cy9zaWRlbmF2L0Q6XFwzNzBcXEZpbmFsRnJvbnRlbmQvc3JjXFxhcHBcXHRoZW1lXFxjb21wb25lbnRzXFxzaWRlbmF2XFxzaWRlbmF2LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC90aGVtZS9jb21wb25lbnRzL3NpZGVuYXYvc2lkZW5hdi5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvdGhlbWUvY29tcG9uZW50cy9zaWRlbmF2L0Q6XFwzNzBcXEZpbmFsRnJvbnRlbmQvc3JjXFxhcHBcXHRoZW1lXFxzdHlsZXNcXF92YXJpYWJsZXMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNJLFdBQUE7RUFDQSxZQUFBO0VBQ0EsZUFBQTtFQUNBLGtCQUFBO0FDREo7O0FESUE7RUFDSSwwQkFBQTtBQ0RKOztBRElBO0VBQ0ksU0FBQTtFQUNBLGtCQUFBO0VBQ0EsVUFBQTtFQUNBLGdCQUFBO0FDREo7O0FERUk7RUFDSSxXQUFBO0VBQ0Esb0NBQUE7RUFDQSxrQkFBQTtBQ0FSOztBREVJO0VBQ0ksY0FBQTtFQUNBLGFBQUE7RUFDQSxXQUFBO0FDQVI7O0FEQ1E7RUFDSSxrQkFBQTtBQ0NaOztBREFZO0VBQ0ksZUFBQTtBQ0VoQjs7QURBWTtFQUNJLGVBQUE7QUNFaEI7O0FERUk7RUFDSSxhRWhDb0I7QURnQzVCOztBREtJO0VBQ0kseUJBQUE7QUNGUjs7QURLUTtFQUNJLDBCQUFBO0FDSFoiLCJmaWxlIjoic3JjL2FwcC90aGVtZS9jb21wb25lbnRzL3NpZGVuYXYvc2lkZW5hdi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgXCIuLi8uLi9zdHlsZXMvdmFyaWFibGVzXCI7XHJcblxyXG4ucGlue1xyXG4gICAgd2lkdGg6IDI0cHg7XHJcbiAgICBoZWlnaHQ6IDI0cHg7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBmaWxsOiBjdXJyZW50Q29sb3I7XHJcbn1cclxuXHJcbi5zaWRlbmF2LWhlYWRlcntcclxuICAgIHBhZGRpbmc6IDAgMTBweCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4udXNlci1ibG9ja3tcclxuICAgIGhlaWdodDogMDtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgIFxyXG4gICAgei1pbmRleDogMTsgXHJcbiAgICBvdmVyZmxvdzogaGlkZGVuOyAgXHJcbiAgICBpbWd7XHJcbiAgICAgICAgd2lkdGg6IDgwcHg7IFxyXG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4yKTtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7ICAgICAgIFxyXG4gICAgfVxyXG4gICAgLnVzZXItaW5mby13cmFwcGVye1xyXG4gICAgICAgIHBhZGRpbmc6IDAgNnB4O1xyXG4gICAgICAgIG1hcmdpbjogNnB4IDA7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgLnVzZXItaW5mb3tcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgICAubmFtZXtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTVweFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC5wb3NpdGlvbntcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTNweDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH0gXHJcbiAgICAmLnNob3d7XHJcbiAgICAgICAgaGVpZ2h0OiAkc2lkZW5hdi11c2VyLWJsb2NrLWhlaWdodDtcclxuICAgIH0gICAgICBcclxufSBcclxuXHJcbi5zaWRlbmF2LW1lbnUtb3V0ZXJ7XHJcbiAgICAucHN7XHJcbiAgICAgICAgaGVpZ2h0OiBjYWxjKDEwMCUgLSAjeyR0b29sYmFyLWhlaWdodH0pOyBcclxuICAgIH0gICAgICAgXHJcbiAgICAmLnVzZXItYmxvY2stc2hvd3tcclxuICAgICAgICAucHN7ICAgICAgICBcclxuICAgICAgICAgICAgaGVpZ2h0OiBjYWxjKDEwMCUgLSAjeyR0b29sYmFyLWhlaWdodCArICRzaWRlbmF2LXVzZXItYmxvY2staGVpZ2h0fSk7IFxyXG4gICAgICAgIH1cclxuICAgIH0gXHJcbn0iLCIucGluIHtcbiAgd2lkdGg6IDI0cHg7XG4gIGhlaWdodDogMjRweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBmaWxsOiBjdXJyZW50Q29sb3I7XG59XG5cbi5zaWRlbmF2LWhlYWRlciB7XG4gIHBhZGRpbmc6IDAgMTBweCAhaW1wb3J0YW50O1xufVxuXG4udXNlci1ibG9jayB7XG4gIGhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAxO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuLnVzZXItYmxvY2sgaW1nIHtcbiAgd2lkdGg6IDgwcHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4yKTtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xufVxuLnVzZXItYmxvY2sgLnVzZXItaW5mby13cmFwcGVyIHtcbiAgcGFkZGluZzogMCA2cHg7XG4gIG1hcmdpbjogNnB4IDA7XG4gIHdpZHRoOiAxMDAlO1xufVxuLnVzZXItYmxvY2sgLnVzZXItaW5mby13cmFwcGVyIC51c2VyLWluZm8ge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG4udXNlci1ibG9jayAudXNlci1pbmZvLXdyYXBwZXIgLnVzZXItaW5mbyAubmFtZSB7XG4gIGZvbnQtc2l6ZTogMTVweDtcbn1cbi51c2VyLWJsb2NrIC51c2VyLWluZm8td3JhcHBlciAudXNlci1pbmZvIC5wb3NpdGlvbiB7XG4gIGZvbnQtc2l6ZTogMTNweDtcbn1cbi51c2VyLWJsb2NrLnNob3cge1xuICBoZWlnaHQ6IDE1NnB4O1xufVxuXG4uc2lkZW5hdi1tZW51LW91dGVyIC5wcyB7XG4gIGhlaWdodDogY2FsYygxMDAlIC0gNTZweCk7XG59XG4uc2lkZW5hdi1tZW51LW91dGVyLnVzZXItYmxvY2stc2hvdyAucHMge1xuICBoZWlnaHQ6IGNhbGMoMTAwJSAtIDIxMnB4KTtcbn0iLCIkZm9udC1mYW1pbHk6ICdSb2JvdG8nLCBzYW5zLXNlcmlmO1xyXG5cclxuJHRvb2xiYXItaGVpZ2h0OiA1NnB4OyBcclxuJGhvcml6b250YWwtbWVudS1oZWlnaHQ6ICR0b29sYmFyLWhlaWdodDtcclxuXHJcbiRzaWRlbmF2LXdpZHRoOiAyNTBweDtcclxuJHNpZGVuYXYtdXNlci1ibG9jay1oZWlnaHQ6IDE1NnB4O1xyXG4kbWluaS1zaWRlbmF2LXVzZXItYmxvY2staGVpZ2h0OiA3MHB4O1xyXG5cclxuJGZsZXgtZGlzdGFuY2U6IDhweDtcclxuJGlubmVyLXNpZGVuYXYtY29udGVudC1wYWRkaW5nOiAkZmxleC1kaXN0YW5jZTtcclxuXHJcbi8vTG9naW4sIFJlZ2lzdGVyLCBFcnJvcnMgYm94XHJcbiRib3gtaGVpZ2h0OiAxODZweDtcclxuJGJveC1wb3NpdGlvbjogMzRweDtcclxuJHJlZ2lzdGVyLWJveC1oZWlnaHQ6IDMwMHB4O1xyXG5cclxuJGZvb3Rlci1oZWlnaHQ6IDU2cHg7ICJdfQ== */\";","import { Component, OnInit, ViewEncapsulation, ViewChild } from '@angular/core';\r\nimport { AppSettings } from '../../../app.settings';\r\nimport { Settings } from '../../../app.settings.model';\r\nimport { MenuService } from '../menu/menu.service';\r\n\r\n@Component({\r\n  selector: 'app-sidenav',\r\n  templateUrl: './sidenav.component.html',\r\n  styleUrls: ['./sidenav.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  providers: [ MenuService ]\r\n})\r\nexport class SidenavComponent implements OnInit {\r\n  public userImage= '../assets/img/users/user.jpg';\r\n  public menuItems:Array<any>;\r\n  public settings: Settings;\r\n  constructor(public appSettings:AppSettings, public menuService:MenuService){\r\n      this.settings = this.appSettings.settings; \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.menuItems = this.menuService.getVerticalMenuItems();\r\n  }\r\n\r\n  public closeSubMenus(){\r\n    let menu = document.getElementById(\"vertical-menu\");\r\n    if(menu){\r\n      for (let i = 0; i < menu.children[0].children.length; i++) {\r\n        let child = menu.children[0].children[i];\r\n        if(child){\r\n          if(child.children[0].classList.contains('expanded')){\r\n              child.children[0].classList.remove('expanded');\r\n              child.children[1].classList.remove('show');\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","export default \".user-menu .mat-toolbar, .user-menu .mat-toolbar-row {\\n  height: 100px !important;\\n}\\n.user-menu .user-info {\\n  width: 230px;\\n}\\n.user-menu .user-info p {\\n  font-size: 16px;\\n  line-height: 22px;\\n  text-align: center;\\n}\\n.user-menu .mat-menu-item {\\n  height: 36px;\\n  line-height: 36px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGhlbWUvY29tcG9uZW50cy91c2VyLW1lbnUvRDpcXDM3MFxcRmluYWxGcm9udGVuZC9zcmNcXGFwcFxcdGhlbWVcXGNvbXBvbmVudHNcXHVzZXItbWVudVxcdXNlci1tZW51LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC90aGVtZS9jb21wb25lbnRzL3VzZXItbWVudS91c2VyLW1lbnUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0k7RUFDSSx3QkFBQTtBQ0FSO0FERUk7RUFDSSxZQUFBO0FDQVI7QURDUTtFQUNJLGVBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0FDQ1o7QURFSTtFQUNJLFlBQUE7RUFDQSxpQkFBQTtBQ0FSIiwiZmlsZSI6InNyYy9hcHAvdGhlbWUvY29tcG9uZW50cy91c2VyLW1lbnUvdXNlci1tZW51LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnVzZXItbWVudXtcclxuICAgIC5tYXQtdG9vbGJhciwgLm1hdC10b29sYmFyLXJvd3tcclxuICAgICAgICBoZWlnaHQ6IDEwMHB4ICFpbXBvcnRhbnQ7XHJcbiAgICB9XHJcbiAgICAudXNlci1pbmZve1xyXG4gICAgICAgIHdpZHRoOiAyMzBweDtcclxuICAgICAgICBwe1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAyMnB4O1xyXG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLm1hdC1tZW51LWl0ZW17XHJcbiAgICAgICAgaGVpZ2h0OiAzNnB4O1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAzNnB4O1xyXG4gICAgfVxyXG59IiwiLnVzZXItbWVudSAubWF0LXRvb2xiYXIsIC51c2VyLW1lbnUgLm1hdC10b29sYmFyLXJvdyB7XG4gIGhlaWdodDogMTAwcHggIWltcG9ydGFudDtcbn1cbi51c2VyLW1lbnUgLnVzZXItaW5mbyB7XG4gIHdpZHRoOiAyMzBweDtcbn1cbi51c2VyLW1lbnUgLnVzZXItaW5mbyBwIHtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMjJweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuLnVzZXItbWVudSAubWF0LW1lbnUtaXRlbSB7XG4gIGhlaWdodDogMzZweDtcbiAgbGluZS1oZWlnaHQ6IDM2cHg7XG59Il19 */\";","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user-menu',\r\n  templateUrl: './user-menu.component.html',\r\n  styleUrls: ['./user-menu.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class UserMenuComponent implements OnInit {\r\n  public userImage = '../assets/img/users/user.jpg';\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'pagination'\r\n})\r\nexport class PaginationPipe implements PipeTransform {\r\n    transform(data, args?) : Array<any> {\r\n        if(!args){\r\n            args = {\r\n                pageIndex: 0,\r\n                pageSize: 6,\r\n                length: data.length\r\n            }\r\n        }    \r\n        return this.paginate(data, args.pageSize, args.pageIndex);\r\n   }\r\n\r\n    paginate (array, page_size, page_number) {\r\n        return array.slice(page_number * page_size, (page_number + 1) * page_size);\r\n    }\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PaginationPipe} from './pagination/pagination.pipe';\r\nimport { ProfilePicturePipe } from './profilePicture/profilePicture.pipe';\r\nimport { ChatPersonSearchPipe } from './search/chat-person-search.pipe';\r\nimport { UserSearchPipe } from './search/user-search.pipe';\r\nimport { TruncatePipe } from './truncate/truncate.pipe';\r\nimport { MailSearchPipe } from './search/mail-search.pipe';\r\n\r\n@NgModule({\r\n    imports: [ \r\n        CommonModule \r\n    ],\r\n    declarations: [\r\n        PaginationPipe,\r\n        ProfilePicturePipe,\r\n        ChatPersonSearchPipe,\r\n        UserSearchPipe,\r\n        TruncatePipe,\r\n        MailSearchPipe\r\n    ],\r\n    exports: [\r\n        PaginationPipe,\r\n        ProfilePicturePipe,\r\n        ChatPersonSearchPipe,\r\n        UserSearchPipe,\r\n        TruncatePipe,\r\n        MailSearchPipe\r\n    ]\r\n})\r\nexport class PipesModule { }\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\n\r\n@Pipe({name: 'profilePicture'})\r\nexport class ProfilePicturePipe implements PipeTransform {\r\n  transform(input:string, ext = 'jpg'):string {\r\n    return '../assets/img/profile/' + input + '.' + ext;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'ChatPersonSearchPipe' })\r\nexport class ChatPersonSearchPipe implements PipeTransform {\r\n  transform(value, args?): Array<any> {\r\n    let searchText = new RegExp(args, 'ig');\r\n    if (value) {\r\n      return value.filter(message => {\r\n        if (message.author) {\r\n          return message.author.search(searchText) !== -1;\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'MailSearch'\r\n})\r\n\r\nexport class MailSearchPipe implements PipeTransform {\r\n  transform(value, args?): Array<any> {\r\n    let searchText = new RegExp(args, 'ig');\r\n    if (value) {\r\n      return value.filter(mail => {\r\n        if(mail.sender || mail.subject){\r\n          if(mail.sender.search(searchText) !== -1 || mail.subject.search(searchText) !== -1){\r\n            return true;\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'UserSearchPipe', pure: false })\r\nexport class UserSearchPipe implements PipeTransform {\r\n  transform(value, args?): Array<any> {\r\n    let searchText = new RegExp(args, 'ig');\r\n    if (value) {\r\n      return value.filter(user => {\r\n        if (user.profile.name) {\r\n          return user.profile.name.search(searchText) !== -1;\r\n        }\r\n        else{\r\n          return user.username.search(searchText) !== -1;\r\n        }\r\n      });\r\n    }\r\n  }\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'truncate'\r\n})\r\nexport class TruncatePipe implements PipeTransform {\r\n  transform(value: string, args?) : string {\r\n    let limit = args > 0 ? parseInt(args) : 10;\r\n    return value.length > limit ? value.substring(0, limit) + '...' : value;\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { OverlayContainer } from '@angular/cdk/overlay';\r\n\r\n@Injectable() \r\nexport class CustomOverlayContainer extends OverlayContainer {\r\n  _createContainer(): void {\r\n    let container = document.createElement('div');\r\n    container.classList.add('cdk-overlay-container');\r\n    document.getElementById('app').appendChild(container);\r\n    this._containerElement = container;\r\n  }\r\n}","export default \"mat-header-cell {\\n  background-color: #308b30;\\n  font-size: 16px;\\n}\\n\\nmat-card {\\n  width: 70%;\\n  align-items: center;\\n  margin-left: 15%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmVoaWNsZS1zZXJ2aWNlL0Q6XFwzNzBcXEZpbmFsRnJvbnRlbmQvc3JjXFxhcHBcXHZlaGljbGUtc2VydmljZVxcdmVoaWNsZS1zZXJ2aWNlLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC92ZWhpY2xlLXNlcnZpY2UvdmVoaWNsZS1zZXJ2aWNlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0kseUJBQUE7RUFDQSxlQUFBO0FDQ0o7O0FEQ0E7RUFDSSxVQUFBO0VBQ0EsbUJBQUE7RUFDQSxnQkFBQTtBQ0VKIiwiZmlsZSI6InNyYy9hcHAvdmVoaWNsZS1zZXJ2aWNlL3ZlaGljbGUtc2VydmljZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1oZWFkZXItY2VsbHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYig0OCwgMTM5LCA0OCk7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbn1cclxubWF0LWNhcmR7XHJcbiAgICB3aWR0aDogNzAlO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIG1hcmdpbi1sZWZ0OiAxNSU7XHJcbn0iLCJtYXQtaGVhZGVyLWNlbGwge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzA4YjMwO1xuICBmb250LXNpemU6IDE2cHg7XG59XG5cbm1hdC1jYXJkIHtcbiAgd2lkdGg6IDcwJTtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgbWFyZ2luLWxlZnQ6IDE1JTtcbn0iXX0= */\";","import { Component, OnInit, ViewChild} from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { Settings } from '../app.settings.model';\r\nimport { AppSettings } from '../app.settings';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport {VehicleService} from '../Models/VehicleService';\r\n\r\nexport interface Element{\r\n  VehicleService_ID:string;\r\n  Provider_ID:string;\r\n  Vehicle__ID:string;\r\n  VSD_ID:string;\r\n  Status_ID:string;\r\n  Vehicle_Service_Mileage:number;\r\n  Vehicle_Service_Start_Date:string;\r\n  Vehicle_Service_End_Date:string;\r\n  Vehicle_Service_Description:string; \r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-vehicle-service',\r\n  templateUrl: './vehicle-service.component.html',\r\n  styleUrls: ['./vehicle-service.component.scss']\r\n})\r\nexport class VehicleServiceComponent implements OnInit {\r\n  showtable: boolean = true;\r\n  public displayedColumns = ['Vehicle_Service_ID','Vehicle_ID', 'Vehicle_Service_Milage', 'Vehicle_Service_Start_Date', 'Vehicle_Service_End_Date','Invoice','Actions'];\r\n  public dataSource: any;\r\n  public settings: Settings;\r\n  show: boolean = false;\r\n  showAdd: boolean = false;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  data: Element[]=[\r\n\r\n  ];\r\n\r\n  providers:string[]=[\r\n    'Toyota Service Shop','Nissan Service Shop','Mitsubishi Service Shop'\r\n  ];\r\n\r\n  types: string[] = [\r\n    \"Bakkie\",\"Tractor\",\"Car\"\r\n  ]\r\n\r\n\r\n  VehicleServEdit: VehicleService;\r\n  VehicleServAdd: VehicleService;\r\n  AdminPriv: string;\r\n  selectedValue: string;\r\n  providersSelect:string;\r\n\r\n  constructor(public appSettings:AppSettings) { \r\n    this.settings = this.appSettings.settings; \r\n    this.dataSource = new MatTableDataSource<Element>(this.data);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.AdminPriv = localStorage.getItem(\"PrivelageLevel\")\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  changeform(){\r\n    if(this.show == false){\r\n      this.show =true;\r\n      this.showAdd = false;\r\n      this.showtable = false;\r\n    }\r\n  }\r\n\r\n  getVehicleServiceDetail(Id:number){\r\n\r\n    this.VehicleServEdit = new VehicleService;\r\n    this.VehicleServEdit.Vehicle_Service_Mileage = 25000;\r\n    this.VehicleServEdit.Vehicle_Service_Description = \"Description\";\r\n    this.VehicleServEdit.Vehicle_Service_Start_Date= \"15 June\";\r\n    this.VehicleServEdit.Vehicle_Service_End_Date= \"22 June\";\r\n    this.VehicleServEdit.VSD= \"VSD.pdf\";\r\n  \r\n    this.providersSelect = this.VehicleServEdit.Providers;\r\n    this.selectedValue=this.VehicleServEdit.Vehicle_Type;\r\n\r\n    this.changeform();\r\n  }\r\n\r\n  addVehicleService(){\r\n    if(this.show == true){\r\n      this.show = false;\r\n    }\r\n    this.VehicleServAdd = new VehicleService;\r\n    this.showAdd = true;\r\n    this.showtable = false;\r\n  }\r\n\r\n  putVehicleService(){\r\n    alert(\"Done\");\r\n  }\r\n\r\n  deleteVehicleService(){\r\n    if(confirm(\"Are you sure to delete \"+name)) {\r\n      console.log(\"Implement delete functionality here\");\r\n    }\r\n  }\r\n  showTable(){\r\n    this.showtable = true;\r\n    this.showAdd = false;\r\n    this.show = false;\r\n  }\r\n\r\n  Download(){\r\n    \r\n  }\r\n}\r\n","export default \"mat-header-cell {\\n  background-color: #308b30;\\n  font-size: 16px;\\n}\\n\\nmat-card {\\n  width: 70%;\\n  align-items: center;\\n  margin-left: 15%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmVoaWNsZS10eXBlcy9EOlxcMzcwXFxGaW5hbEZyb250ZW5kL3NyY1xcYXBwXFx2ZWhpY2xlLXR5cGVzXFx2ZWhpY2xlLXR5cGVzLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC92ZWhpY2xlLXR5cGVzL3ZlaGljbGUtdHlwZXMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSx5QkFBQTtFQUNBLGVBQUE7QUNDSjs7QURFQTtFQUNJLFVBQUE7RUFDQSxtQkFBQTtFQUNBLGdCQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC92ZWhpY2xlLXR5cGVzL3ZlaGljbGUtdHlwZXMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtaGVhZGVyLWNlbGx7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoNDgsIDEzOSwgNDgpO1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG59XHJcblxyXG5tYXQtY2FyZHtcclxuICAgIHdpZHRoOiA3MCU7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgbWFyZ2luLWxlZnQ6IDE1JTtcclxufSIsIm1hdC1oZWFkZXItY2VsbCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMDhiMzA7XG4gIGZvbnQtc2l6ZTogMTZweDtcbn1cblxubWF0LWNhcmQge1xuICB3aWR0aDogNzAlO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBtYXJnaW4tbGVmdDogMTUlO1xufSJdfQ== */\";","import {  OnInit } from '@angular/core';\r\nimport { Settings } from '../app.settings.model';\r\nimport { AppSettings } from '../app.settings';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Component, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { Vehicles } from '../Models/Vehicles'\r\nimport { Router } from '@angular/router';\r\nexport interface Element {\r\n  Type_ID: string;\r\n  Type: string;\r\n\r\n  }\r\n\r\n  @Component({\r\n    selector: 'app-vehicle-types',\r\n    templateUrl: './vehicle-types.component.html',\r\n    styleUrls: ['./vehicle-types.component.scss']\r\n  })\r\n\r\nexport class VehicleTypesComponent implements OnInit {\r\n  public displayedColumns = ['Type_ID', 'Type','Actions'];\r\n  public dataSource: any;\r\n  public settings: Settings;\r\n  TypeEdit = \"Truck\";\r\n  show: boolean = false;\r\n  showtable: boolean = true;\r\n  showAdd: boolean = false;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  data: Element[] = [\r\n    {Type_ID: \"1\",Type:\"Car\"},\r\n    {Type_ID: \"1\",Type:\"Truck\"},\r\n    {Type_ID: \"1\",Type:\"Truck\"},\r\n    {Type_ID: \"1\",Type:\"Truck\"},\r\n    {Type_ID: \"1\",Type:\"Truck\"},\r\n    {Type_ID: \"1\",Type:\"Truck\"},\r\n\r\n\r\n  ];\r\n  constructor(public appSettings:AppSettings, public router: Router) {\r\n    this.settings = this.appSettings.settings; \r\n    this.dataSource = new MatTableDataSource<Element>(this.data);\r\n  }\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  changeform(){\r\n    if(this.show == false){\r\n      this.show =true;\r\n      this.showAdd = false;\r\n      this.showtable = false;\r\n    }\r\n  }\r\n  AddVehicleType(){\r\n    if(this.show == true){\r\n         this.show = false;\r\n    }\r\n\r\n    this.showAdd = true;\r\n    this.showtable = false;\r\n  }\r\n\r\n  AddNewVehicleType(){\r\n \r\n  }\r\n\r\n  getTypeDetail(selected: number){\r\n    this.changeform();\r\n  }\r\n  showTable(){\r\n    this.showtable = true;\r\n    this.showAdd = false;\r\n    this.show = false;\r\n  }\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","export default \".mat-column-is_Active {\\n  word-wrap: break-word !important;\\n  white-space: unset !important;\\n  flex: 0 0 5% !important;\\n  width: 28% !important;\\n  overflow-wrap: break-word;\\n  word-wrap: break-word;\\n  word-break: break-word;\\n  -ms-hyphens: auto;\\n  -webkit-hyphens: auto;\\n  hyphens: auto;\\n}\\n\\nmat-header-cell {\\n  background-color: #308b30;\\n  font-size: 16px;\\n}\\n\\nmat-card {\\n  width: 70%;\\n  align-items: center;\\n  margin-left: 15%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmVoaWNsZS9EOlxcMzcwXFxGaW5hbEZyb250ZW5kL3NyY1xcYXBwXFx2ZWhpY2xlXFx2ZWhpY2xlLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC92ZWhpY2xlL3ZlaGljbGUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxnQ0FBQTtFQUNBLDZCQUFBO0VBQ0EsdUJBQUE7RUFDQSxxQkFBQTtFQUNBLHlCQUFBO0VBQ0EscUJBQUE7RUFFQSxzQkFBQTtFQUVBLGlCQUFBO0VBRUEscUJBQUE7RUFDQSxhQUFBO0FDREo7O0FESUU7RUFDRSx5QkFBQTtFQUNBLGVBQUE7QUNESjs7QURJQTtFQUNJLFVBQUE7RUFDQSxtQkFBQTtFQUNBLGdCQUFBO0FDREoiLCJmaWxlIjoic3JjL2FwcC92ZWhpY2xlL3ZlaGljbGUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWNvbHVtbi1pc19BY3RpdmUge1xyXG4gICAgd29yZC13cmFwOiBicmVhay13b3JkICFpbXBvcnRhbnQ7XHJcbiAgICB3aGl0ZS1zcGFjZTogdW5zZXQgIWltcG9ydGFudDtcclxuICAgIGZsZXg6IDAgMCA1JSAhaW1wb3J0YW50O1xyXG4gICAgd2lkdGg6IDI4JSAhaW1wb3J0YW50O1xyXG4gICAgb3ZlcmZsb3ctd3JhcDogYnJlYWstd29yZDtcclxuICAgIHdvcmQtd3JhcDogYnJlYWstd29yZDtcclxuICBcclxuICAgIHdvcmQtYnJlYWs6IGJyZWFrLXdvcmQ7XHJcbiAgXHJcbiAgICAtbXMtaHlwaGVuczogYXV0bztcclxuICAgIC1tb3otaHlwaGVuczogYXV0bztcclxuICAgIC13ZWJraXQtaHlwaGVuczogYXV0bztcclxuICAgIGh5cGhlbnM6IGF1dG87XHJcbiAgfVxyXG5cclxuICBtYXQtaGVhZGVyLWNlbGx7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoNDgsIDEzOSwgNDgpO1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG59XHJcblxyXG5tYXQtY2FyZHtcclxuICAgIHdpZHRoOiA3MCU7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgbWFyZ2luLWxlZnQ6IDE1JTtcclxufSIsIi5tYXQtY29sdW1uLWlzX0FjdGl2ZSB7XG4gIHdvcmQtd3JhcDogYnJlYWstd29yZCAhaW1wb3J0YW50O1xuICB3aGl0ZS1zcGFjZTogdW5zZXQgIWltcG9ydGFudDtcbiAgZmxleDogMCAwIDUlICFpbXBvcnRhbnQ7XG4gIHdpZHRoOiAyOCUgIWltcG9ydGFudDtcbiAgb3ZlcmZsb3ctd3JhcDogYnJlYWstd29yZDtcbiAgd29yZC13cmFwOiBicmVhay13b3JkO1xuICB3b3JkLWJyZWFrOiBicmVhay13b3JkO1xuICAtbXMtaHlwaGVuczogYXV0bztcbiAgLW1vei1oeXBoZW5zOiBhdXRvO1xuICAtd2Via2l0LWh5cGhlbnM6IGF1dG87XG4gIGh5cGhlbnM6IGF1dG87XG59XG5cbm1hdC1oZWFkZXItY2VsbCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMDhiMzA7XG4gIGZvbnQtc2l6ZTogMTZweDtcbn1cblxubWF0LWNhcmQge1xuICB3aWR0aDogNzAlO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBtYXJnaW4tbGVmdDogMTUlO1xufSJdfQ== */\";","import {  OnInit } from '@angular/core';\r\nimport { Settings } from '../app.settings.model';\r\nimport { AppSettings } from '../app.settings';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Component, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { Vehicles } from '../Models/Vehicles'\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\n\r\nexport interface Element {\r\nVehicle_ID: string;\r\nVehicle_Type_Description: string;\r\nMake_Description: string;\r\nModel_Description: string;\r\nSection_Name: string;\r\nVehicle_Mileage_Current: string;\r\nVehicle_Registration_Number: string;\r\nis_Active: string;\r\n}\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-vehicle',\r\n  templateUrl: './vehicle.component.html',\r\n  styleUrls: ['./vehicle.component.scss']\r\n})\r\nexport class VehicleComponent implements OnInit {\r\n  public displayedColumns = ['Vehicle_ID', 'Vehicle_Type_Description', 'Model_Description', 'Section_Name','Vehicle_Mileage_Current','Vehicle_Registration_Number','is_Active','Actions'];\r\n  public dataSource: any;\r\n  public settings: Settings;\r\n  show: boolean = false;\r\n  showAdd: boolean = false;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n data: Element[] = [\r\n    {Vehicle_ID: \"1\",Vehicle_Type_Description: \"Car\", Make_Description: 'Toyota',Model_Description: \"Hilux\" ,Section_Name: \"Dam 2\", Vehicle_Mileage_Current: '1234556', Vehicle_Registration_Number: 'YTD819GP', is_Active: 'Yes'},\r\n    {Vehicle_ID: \"2\",Vehicle_Type_Description: \"Bakkie\", Make_Description: 'Toyota',Model_Description: \"Hilux\" ,Section_Name: \"Dam 2\", Vehicle_Mileage_Current: '1234556', Vehicle_Registration_Number: 'YTD819GP', is_Active: 'Yes'},\r\n    {Vehicle_ID: \"3\",Vehicle_Type_Description: \"Bakkie\", Make_Description: 'Toyota',Model_Description: \"Hilux\" ,Section_Name: \"Dam 2\", Vehicle_Mileage_Current: '1234556', Vehicle_Registration_Number: 'YTD819GP', is_Active: 'Yes'},\r\n    {Vehicle_ID: \"4\",Vehicle_Type_Description: \"Bakkie\", Make_Description: 'Toyota',Model_Description: \"Hilux\" ,Section_Name: \"Dam 2\", Vehicle_Mileage_Current: '1234556', Vehicle_Registration_Number: 'YTD819GP', is_Active: 'Yes'},   \r\n    {Vehicle_ID: \"5\",Vehicle_Type_Description: \"Bakkie\", Make_Description: 'Toyota',Model_Description: \"Hilux\" ,Section_Name: \"Dam 2\", Vehicle_Mileage_Current: '1234556', Vehicle_Registration_Number: 'YTD819GP', is_Active: 'Yes'},\r\n    {Vehicle_ID: \"6\",Vehicle_Type_Description: \"Bakkie\", Make_Description: 'Toyota',Model_Description: \"Hilux\" ,Section_Name: \"Dam 2\", Vehicle_Mileage_Current: '1234556', Vehicle_Registration_Number: 'YTD819GP', is_Active: 'Yes'},   \r\n    {Vehicle_ID: \"7\",Vehicle_Type_Description: \"Bakkie\", Make_Description: 'Toyota',Model_Description: \"Hilux\" ,Section_Name: \"Dam 2\", Vehicle_Mileage_Current: '1234556', Vehicle_Registration_Number: 'YTD819GP', is_Active: 'Yes'}\r\n\r\n  ];\r\n  \r\n types: string[] = [\r\n   \"Bakkie\",\"Tractor\",\"Car\"\r\n ]\r\n\r\n infrastructures: string[] = [\r\n   \"Building1\",\"Building2\"\r\n ]\r\n\r\n makes: string[] = [\r\n   \"Ford\",\"Toyota\"\r\n ]\r\n\r\n sections: string[] = [\r\n   \"Veld 1\", \"Veld 2\"\r\n ]\r\n\r\n models: string[] =[\r\n   \"Hilux\", \"Patrol\"\r\n ]\r\n\r\nVehicleEdit: Vehicles;\r\nVehicleAdd: Vehicles;\r\nAdminPriv: string;\r\nselectedValue: string;\r\nModelSelect: string;\r\nMakeSelect: String;\r\nSectionSelect: string;\r\nInfrastructureSelect: string;\r\nshowtable: boolean = true;\r\nform: FormGroup;\r\n\r\n  constructor(public appSettings:AppSettings, public router: Router, private formbuilder: FormBuilder) {\r\n    this.settings = this.appSettings.settings; \r\n    this.dataSource = new MatTableDataSource<Element>(this.data);\r\n\r\n    this.form = this.formbuilder.group({\r\n      'Price':['', Validators.compose([Validators.required,Validators.maxLength(6)])],\r\n      'PurchaseDate':['', Validators.compose([Validators.required,Validators.maxLength(8)])],\r\n      'Registration':['', Validators.compose([Validators.required,Validators.maxLength(15)])],\r\n      'LastService':['', Validators.compose([Validators.required,Validators.maxLength(6)])],\r\n      'Interval':['', Validators.compose([Validators.required,Validators.maxLength(30)])],\r\n      'CurrMileage':['', Validators.compose([Validators.required,Validators.maxLength(6)])],\r\n      'PurchMileage':['', Validators.compose([Validators.required,Validators.maxLength(8)])],\r\n      'Color':['', Validators.compose([Validators.required,Validators.maxLength(30)])],\r\n      'Year':['', Validators.compose([Validators.required,Validators.maxLength(4)])],\r\n\r\n      Type : new FormControl,\r\n      Section : new FormControl,\r\n      Infras : new FormControl,\r\n      Make : new FormControl,\r\n      Model : new FormControl,\r\n\r\n\r\n    })\r\n  }\r\n  ngOnInit(): void {\r\n     this.AdminPriv = localStorage.getItem(\"PrivelageLevel\");\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  changeform(){\r\n    if(this.show == false){\r\n      this.show =true;\r\n      this.showAdd = false;\r\n      this.showtable = false;\r\n    }\r\n  }\r\n\r\n  getVehicleDetail(Id: number){\r\n    //Implement function to pupulate edit field and populate vehicle edit\\\r\n    this.VehicleEdit = new Vehicles;\r\n    this.VehicleEdit.Active = \"True\";\r\n    this.VehicleEdit.Vehicle_Type = \"Bakkie\";\r\n    this.VehicleEdit.Infrastructure= \"Building1\";\r\n    this.VehicleEdit.Make= \"Toyota\";\r\n    this.VehicleEdit.Model= \"Hilux\";\r\n    this.VehicleEdit.Section= \"Veld 2\";\r\n    this.VehicleEdit.Year= \"1998\";\r\n    this.VehicleEdit.Colour= \"Silver\";\r\n    this.VehicleEdit.StartMileage= \"102000\";\r\n    this.VehicleEdit.CurrentMileage= \"11525222\";\r\n    this.VehicleEdit.ServiceIntervals= \"11000\";\r\n    this.VehicleEdit.LastServiceKM= \"15522522\";\r\n    this.VehicleEdit.Registration= \"Ytd819GP\";\r\n    this.VehicleEdit.DateofPurchase= \"01/02/1998\";\r\n    this.VehicleEdit.Active= \"True\";\r\n  \r\n    this.selectedValue = this.VehicleEdit.Vehicle_Type;\r\n    this.ModelSelect = this.VehicleEdit.Model;\r\n    this.MakeSelect = this.VehicleEdit.Make;\r\n    this.SectionSelect = this.VehicleEdit.Section;\r\n    this.InfrastructureSelect = this.VehicleEdit.Infrastructure;\r\n\r\n\r\n    this.changeform();\r\n  }\r\n\r\n  AddVehicle(){\r\n    if(this.show == true){\r\n         this.show = false;\r\n    }\r\n    this.VehicleAdd = new Vehicles;\r\n    this.showAdd = true;\r\n    this.showtable = false;\r\n  }\r\n\r\n  PutVehicle(){\r\n    alert(\"Done\");\r\n  }\r\n\r\n  addNewVehicle(){\r\n\r\n  }\r\n  deleteVehicle(){\r\n    if(confirm(\"Are you sure to delete \"+name)) {\r\n      console.log(\"Implement delete functionality here\");\r\n    }\r\n  }\r\n  showTable(){\r\n    this.showtable = true;\r\n    this.showAdd = false;\r\n    this.show = false;\r\n  }\r\n\r\n  Download(){\r\n    alert(\"Download started\")\r\n  }\r\n\r\n  LoadTypes(){\r\n    this.router.navigateByUrl(\"veTypes\");\r\n  }\r\n\r\n  Prompt(){\r\n    var result = prompt(\"Incorrect format: Please add new mileage\");\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}