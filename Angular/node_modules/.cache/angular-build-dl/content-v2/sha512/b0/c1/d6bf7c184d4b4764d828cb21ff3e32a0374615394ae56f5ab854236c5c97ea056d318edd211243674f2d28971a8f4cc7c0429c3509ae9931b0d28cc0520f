{"version":3,"sources":["./node_modules/angularfire2/node_modules/@angular/fire/__ivy_ngcc__/es2015/angularfire2.js","./node_modules/angularfire2/node_modules/@angular/fire/__ivy_ngcc__/es2015/firebase.app.module.js","./node_modules/angularfire2/node_modules/@angular/fire/__ivy_ngcc__/es2015/index.js","./node_modules/angularfire2/node_modules/@angular/fire/__ivy_ngcc__/es2015/public_api.js","./node_modules/angularfire2/node_modules/@angular/fire/__ivy_ngcc__/storage/es2015/index.js","./node_modules/angularfire2/node_modules/@angular/fire/__ivy_ngcc__/storage/es2015/observable/fromTask.js","./node_modules/angularfire2/node_modules/@angular/fire/__ivy_ngcc__/storage/es2015/public_api.js","./node_modules/angularfire2/node_modules/@angular/fire/__ivy_ngcc__/storage/es2015/ref.js","./node_modules/angularfire2/node_modules/@angular/fire/__ivy_ngcc__/storage/es2015/storage.js","./node_modules/angularfire2/node_modules/@angular/fire/__ivy_ngcc__/storage/es2015/storage.module.js","./node_modules/angularfire2/node_modules/@angular/fire/__ivy_ngcc__/storage/es2015/task.js","./node_modules/angularfire2/storage/index.js","./src/app/pages/register/register.component.html","./src/app/Models/register.ts","./src/app/pages/register/register.component.ts","./src/app/pages/register/register.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACI;AACe;AACL;AACtD,gCAAgC,4DAAc;AAC9C;AACP,iBAAiB;AACV;AACP,iCAAiC,mDAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oGAAoG;AACpG,2BAA2B,0DAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,+EAA+E,mDAAc;AAC7F;AACA;AACO;AACP;AACA,YAAY,wEAAgB;AAC5B;AACA;AACA,yBAAyB,kEAAW,6BAA6B,gEAAS;AAC1E;AACA;AACO;AACP,eAAe,+CAAU;AACzB;AACA;AACA,SAAS;AACT,KAAK;AACL;AACO;AACP,eAAe,+CAAU;AACzB;AACA,KAAK;AACL;AACO;AACP;AACA;AACA;AACA;AACA;AACA,iDAAiD,QAAQ,mDAAc,gBAAgB,mDAAc,QAAQ,EAAE;AAC/G;AACA;AACA,YAAY,wEAAgB;AAC5B,uBAAuB,+CAAU;AACjC,oCAAoC;AACpC,yFAAyF;AACzF;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+CAAU;AAC7B;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA,wC;;;;;;;;;;;;AC9IA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA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","file":"pages-register-register-module-es2015.js","sourcesContent":["import { InjectionToken } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport { Observable, queueScheduler, asyncScheduler } from 'rxjs';\nimport { subscribeOn, observeOn, tap } from 'rxjs/operators';\nexport const RealtimeDatabaseURL = new InjectionToken('angularfire2.realtimeDatabaseURL');\nexport const DATABASE_URL = RealtimeDatabaseURL;\nfunction noop() { }\nexport class ÉµZoneScheduler {\n    constructor(zone, delegate = queueScheduler) {\n        this.zone = zone;\n        this.delegate = delegate;\n    }\n    now() {\n        return this.delegate.now();\n    }\n    schedule(work, delay, state) {\n        const targetZone = this.zone;\n        const workInZone = function (state) {\n            targetZone.runGuarded(() => {\n                work.apply(this, [state]);\n            });\n        };\n        return this.delegate.schedule(workInZone, delay, state);\n    }\n}\nexport class ÉµBlockUntilFirstOperator {\n    constructor(zone) {\n        this.zone = zone;\n        this.task = null;\n    }\n    call(subscriber, source) {\n        const unscheduleTask = this.unscheduleTask.bind(this);\n        this.task = this.zone.run(() => Zone.current.scheduleMacroTask('firebaseZoneBlock', noop, {}, noop, noop));\n        return source.pipe(tap(unscheduleTask, unscheduleTask, unscheduleTask)).subscribe(subscriber).add(unscheduleTask);\n    }\n    unscheduleTask() {\n        if (this.task != null && this.task.state === 'scheduled') {\n            this.task.invoke();\n            this.task = null;\n        }\n    }\n}\nexport class ÉµAngularFireSchedulers {\n    constructor(ngZone) {\n        this.ngZone = ngZone;\n        this.outsideAngular = ngZone.runOutsideAngular(() => new ÉµZoneScheduler(Zone.current));\n        this.insideAngular = ngZone.run(() => new ÉµZoneScheduler(Zone.current, asyncScheduler));\n    }\n}\nexport function ÉµkeepUnstableUntilFirstFactory(schedulers, platformId) {\n    return function keepUnstableUntilFirst(obs$) {\n        if (isPlatformServer(platformId)) {\n            obs$ = obs$.lift(new ÉµBlockUntilFirstOperator(schedulers.ngZone));\n        }\n        return obs$.pipe(subscribeOn(schedulers.outsideAngular), observeOn(schedulers.insideAngular));\n    };\n}\nexport const runOutsideAngular = (zone) => (obs$) => {\n    return new Observable(subscriber => {\n        return zone.runOutsideAngular(() => {\n            runInZone(zone)(obs$).subscribe(subscriber);\n        });\n    });\n};\nexport const runInZone = (zone) => (obs$) => {\n    return new Observable(subscriber => {\n        return obs$.subscribe(value => zone.run(() => subscriber.next(value)), error => zone.run(() => subscriber.error(error)), () => zone.run(() => subscriber.complete()));\n    });\n};\nexport class FirebaseZoneScheduler {\n    constructor(zone, platformId) {\n        this.zone = zone;\n        this.platformId = platformId;\n    }\n    schedule(...args) {\n        return this.zone.runGuarded(function () { return queueScheduler.schedule.apply(queueScheduler, args); });\n    }\n    keepUnstableUntilFirst(obs$) {\n        if (isPlatformServer(this.platformId)) {\n            return new Observable(subscriber => {\n                const noop = () => { };\n                const task = Zone.current.scheduleMacroTask('firebaseZoneBlock', noop, {}, noop, noop);\n                obs$.subscribe(next => {\n                    if (task.state === 'scheduled') {\n                        task.invoke();\n                    }\n                    ;\n                    subscriber.next(next);\n                }, error => {\n                    if (task.state === 'scheduled') {\n                        task.invoke();\n                    }\n                    subscriber.error(error);\n                }, () => {\n                    if (task.state === 'scheduled') {\n                        task.invoke();\n                    }\n                    subscriber.complete();\n                });\n            });\n        }\n        else {\n            return obs$;\n        }\n    }\n    runOutsideAngular(obs$) {\n        return new Observable(subscriber => {\n            return this.zone.runOutsideAngular(() => {\n                return obs$.subscribe(value => this.zone.run(() => subscriber.next(value)), error => this.zone.run(() => subscriber.error(error)), () => this.zone.run(() => subscriber.complete()));\n            });\n        });\n    }\n}\nconst noopFunctions = ['ngOnDestroy'];\nexport const ÉµlazySDKProxy = (klass, observable, zone) => {\n    return new Proxy(klass, {\n        get: (_, name) => zone.runOutsideAngular(() => {\n            if (klass[name]) {\n                return klass[name];\n            }\n            if (noopFunctions.includes(name)) {\n                return () => { };\n            }\n            let promise = observable.toPromise().then(mod => {\n                const ret = mod && mod[name];\n                if (typeof ret == 'function') {\n                    return ret.bind(mod);\n                }\n                else if (ret && ret.then) {\n                    return ret.then((res) => zone.run(() => res));\n                }\n                else {\n                    return zone.run(() => ret);\n                }\n            });\n            return new Proxy(() => undefined, {\n                get: (_, name) => promise[name],\n                apply: (self, _, args) => promise.then(it => it && it(...args))\n            });\n        })\n    });\n};\n//# sourceMappingURL=angularfire2.js.map","import * as Éµngcc0 from '@angular/core';\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar AngularFireModule_1;\nimport { InjectionToken, NgModule, Optional, NgZone, VERSION as NG_VERSION, Version, Inject, PLATFORM_ID } from '@angular/core';\nimport firebase from 'firebase/app';\nexport const FirebaseOptionsToken = new InjectionToken('angularfire2.app.options');\nexport const FirebaseNameOrConfigToken = new InjectionToken('angularfire2.app.nameOrConfig');\nexport const FIREBASE_OPTIONS = FirebaseOptionsToken;\nexport const FIREBASE_APP_NAME = FirebaseNameOrConfigToken;\nexport class FirebaseApp {\n}\nexport const VERSION = new Version('5.4.2');\nexport function _firebaseAppFactory(options, zone, nameOrConfig) {\n    const name = typeof nameOrConfig === 'string' && nameOrConfig || '[DEFAULT]';\n    const config = typeof nameOrConfig === 'object' && nameOrConfig || {};\n    config.name = config.name || name;\n    const existingApp = firebase.apps.filter(app => app && app.name === config.name)[0];\n    return (existingApp || zone.runOutsideAngular(() => firebase.initializeApp(options, config)));\n}\nconst FirebaseAppProvider = {\n    provide: FirebaseApp,\n    useFactory: _firebaseAppFactory,\n    deps: [\n        FIREBASE_OPTIONS,\n        NgZone,\n        [new Optional(), FIREBASE_APP_NAME]\n    ]\n};\nlet AngularFireModule = AngularFireModule_1 = class AngularFireModule {\n    constructor(platformId) {\n        if (firebase.registerVersion) {\n            firebase.registerVersion('angularfire', VERSION.full, platformId.toString());\n            firebase.registerVersion('angular', NG_VERSION.full);\n        }\n    }\n    static initializeApp(options, nameOrConfig) {\n        return {\n            ngModule: AngularFireModule_1,\n            providers: [\n                { provide: FIREBASE_OPTIONS, useValue: options },\n                { provide: FIREBASE_APP_NAME, useValue: nameOrConfig }\n            ]\n        };\n    }\n};\nAngularFireModule.Éµmod = Éµngcc0.ÉµÉµdefineNgModule({ type: AngularFireModule });\nAngularFireModule.Éµinj = Éµngcc0.ÉµÉµdefineInjector({ factory: function AngularFireModule_Factory(t) { return new (t || AngularFireModule)(Éµngcc0.ÉµÉµinject(PLATFORM_ID)); }, providers: [FirebaseAppProvider] });\nAngularFireModule = AngularFireModule_1 = __decorate([ __param(0, Inject(PLATFORM_ID)),\n    __metadata(\"design:paramtypes\", [Object])\n], AngularFireModule);\n/*@__PURE__*/ (function () { Éµngcc0.ÉµsetClassMetadata(AngularFireModule, [{\n        type: NgModule,\n        args: [{\n                providers: [FirebaseAppProvider]\n            }]\n    }], function () { return [{ type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }]; }, null); })();\nexport { AngularFireModule };\n\n//# sourceMappingURL=firebase.app.module.js.map","export * from './public_api';\n\n//# sourceMappingURL=index.js.map","export * from './angularfire2';\nexport * from './firebase.app.module';\n//# sourceMappingURL=public_api.js.map","export * from './public_api';\n\n//# sourceMappingURL=index.js.map","import { Observable } from 'rxjs';\nexport function fromTask(task) {\n    return new Observable(subscriber => {\n        const progress = (snap) => subscriber.next(snap);\n        const error = e => subscriber.error(e);\n        const complete = () => subscriber.complete();\n        task.on('state_changed', progress, error, complete);\n        return () => task.cancel();\n    });\n}\n//# sourceMappingURL=fromTask.js.map","export * from './ref';\nexport * from './storage';\nexport * from './task';\nexport * from './observable/fromTask';\nexport * from './storage.module';\n//# sourceMappingURL=public_api.js.map","import { createUploadTask } from './task';\nimport { from } from 'rxjs';\nexport function createStorageRef(ref, schedulers, keepUnstableUntilFirst) {\n    return {\n        getDownloadURL: () => from(ref.getDownloadURL(), schedulers.outsideAngular).pipe(keepUnstableUntilFirst),\n        getMetadata: () => from(ref.getMetadata()).pipe(keepUnstableUntilFirst),\n        delete: () => from(ref.delete()),\n        child: (path) => createStorageRef(ref.child(path), schedulers, keepUnstableUntilFirst),\n        updateMetatdata: (meta) => from(ref.updateMetadata(meta)),\n        updateMetadata: (meta) => from(ref.updateMetadata(meta)),\n        put: (data, metadata) => {\n            const task = ref.put(data, metadata);\n            return createUploadTask(task);\n        },\n        putString: (data, format, metadata) => {\n            const task = ref.putString(data, format, metadata);\n            return createUploadTask(task);\n        }\n    };\n}\n//# sourceMappingURL=ref.js.map","import * as Éµngcc0 from '@angular/core';\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { Injectable, Inject, Optional, InjectionToken, NgZone, PLATFORM_ID } from '@angular/core';\nimport { createStorageRef } from './ref';\nimport { _firebaseAppFactory, FIREBASE_OPTIONS, FIREBASE_APP_NAME, ÉµkeepUnstableUntilFirstFactory, ÉµAngularFireSchedulers } from '@angular/fire';\nexport const StorageBucket = new InjectionToken('angularfire2.storageBucket');\nexport const BUCKET = StorageBucket;\nlet AngularFireStorage = class AngularFireStorage {\n    constructor(options, nameOrConfig, storageBucket, platformId, zone) {\n        this.schedulers = new ÉµAngularFireSchedulers(zone);\n        this.keepUnstableUntilFirst = ÉµkeepUnstableUntilFirstFactory(this.schedulers, platformId);\n        this.storage = zone.runOutsideAngular(() => {\n            const app = _firebaseAppFactory(options, zone, nameOrConfig);\n            return app.storage(storageBucket || undefined);\n        });\n    }\n    ref(path) {\n        return createStorageRef(this.storage.ref(path), this.schedulers, this.keepUnstableUntilFirst);\n    }\n    upload(path, data, metadata) {\n        const storageRef = this.storage.ref(path);\n        const ref = createStorageRef(storageRef, this.schedulers, this.keepUnstableUntilFirst);\n        return ref.put(data, metadata);\n    }\n};\nAngularFireStorage.Éµfac = function AngularFireStorage_Factory(t) { return new (t || AngularFireStorage)(Éµngcc0.ÉµÉµinject(FIREBASE_OPTIONS), Éµngcc0.ÉµÉµinject(FIREBASE_APP_NAME, 8), Éµngcc0.ÉµÉµinject(BUCKET, 8), Éµngcc0.ÉµÉµinject(PLATFORM_ID), Éµngcc0.ÉµÉµinject(Éµngcc0.NgZone)); };\nAngularFireStorage.Éµprov = Éµngcc0.ÉµÉµdefineInjectable({ token: AngularFireStorage, factory: AngularFireStorage.Éµfac });\nAngularFireStorage = __decorate([ __param(0, Inject(FIREBASE_OPTIONS)),\n    __param(1, Optional()), __param(1, Inject(FIREBASE_APP_NAME)),\n    __param(2, Optional()), __param(2, Inject(BUCKET)),\n    __param(3, Inject(PLATFORM_ID)),\n    __metadata(\"design:paramtypes\", [Object, Object, Object, Object,\n        NgZone])\n], AngularFireStorage);\n/*@__PURE__*/ (function () { Éµngcc0.ÉµsetClassMetadata(AngularFireStorage, [{\n        type: Injectable\n    }], function () { return [{ type: Object, decorators: [{\n                type: Inject,\n                args: [FIREBASE_OPTIONS]\n            }] }, { type: Object, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [FIREBASE_APP_NAME]\n            }] }, { type: Object, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [BUCKET]\n            }] }, { type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: Éµngcc0.NgZone }]; }, null); })();\nexport { AngularFireStorage };\n\n//# sourceMappingURL=storage.js.map","import * as Éµngcc0 from '@angular/core';\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { NgModule } from '@angular/core';\nimport { AngularFireStorage } from './storage';\nimport 'firebase/storage';\nlet AngularFireStorageModule = class AngularFireStorageModule {\n};\nAngularFireStorageModule.Éµmod = Éµngcc0.ÉµÉµdefineNgModule({ type: AngularFireStorageModule });\nAngularFireStorageModule.Éµinj = Éµngcc0.ÉµÉµdefineInjector({ factory: function AngularFireStorageModule_Factory(t) { return new (t || AngularFireStorageModule)(); }, providers: [AngularFireStorage] });\n/*@__PURE__*/ (function () { Éµngcc0.ÉµsetClassMetadata(AngularFireStorageModule, [{\n        type: NgModule,\n        args: [{\n                providers: [AngularFireStorage]\n            }]\n    }], null, null); })();\nexport { AngularFireStorageModule };\n\n//# sourceMappingURL=storage.module.js.map","import { fromTask } from './observable/fromTask';\nimport { map } from 'rxjs/operators';\nexport function createUploadTask(task) {\n    const inner$ = fromTask(task);\n    return {\n        task: task,\n        then: task.then.bind(task),\n        catch: task.catch.bind(task),\n        pause: task.pause.bind(task),\n        cancel: task.cancel.bind(task),\n        resume: task.resume.bind(task),\n        snapshotChanges: () => inner$,\n        percentageChanges: () => inner$.pipe(map(s => s.bytesTransferred / s.totalBytes * 100))\n    };\n}\n//# sourceMappingURL=task.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"@angular/fire/storage\"));\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi93cmFwcGVyL3NyYy9zdG9yYWdlL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsMkNBQXNDIn0=","export default \"<mat-sidenav-container>\\r\\n  \\r\\n    <div fxLayout=\\\"row\\\"  fxLayoutAlign=\\\"center center\\\" class=\\\"h-100\\\">\\r\\n  \\r\\n         <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit(form.value)\\\" fxFlex=\\\"100\\\"  fxFlex.gt-sm=\\\"40\\\"  >\\r\\n  \\r\\n              <mat-card class=\\\"p-0 mat-elevation-z24 box register\\\">\\r\\n                  <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"bg-primary box-header\\\">\\r\\n                      <button mat-fab color=\\\"accent\\\" class=\\\"mat-elevation-z12\\\" (click)=\\\"onSubmit(form.value);\\\">\\r\\n                          <mat-icon>person_add</mat-icon>\\r\\n                      </button>\\r\\n                      <a mat-button routerLink=\\\"/login\\\">Already have an account? Sign in!</a>\\r\\n                      \\r\\n                  </div>\\r\\n                  <mat-card-content fxLayout=\\\"column\\\"  fxLayoutAlign=\\\"end center\\\"  class=\\\"box-content\\\">\\r\\n                      <mat-card fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"mat-elevation-z12 box-content-inner\\\">\\r\\n                          <span class=\\\"box-content-header\\\">Register Farmer</span>  \\r\\n                          <mat-form-field class=\\\"w-100\\\">\\r\\n                            <input matInput placeholder=\\\"Full Name\\\" formControlName=\\\"name\\\" [(ngModel)] = \\\"SubmitData.Name\\\">\\r\\n                            <mat-error *ngIf=\\\"form.controls.name.errors?.required\\\">Full Name is required</mat-error>\\r\\n                            <mat-error *ngIf=\\\"form.controls.name.hasError('minlength')\\\">Full Name isn't long enough, minimum of 3 characters</mat-error>\\r\\n                          </mat-form-field>\\r\\n                          <mat-form-field class=\\\"w-100\\\">\\r\\n                          <input matInput placeholder=\\\"Surname\\\" formControlName=\\\"surname\\\"  [(ngModel)] = \\\"SubmitData.Surname\\\">\\r\\n                            <mat-error *ngIf=\\\"form.controls.surname.errors?.required\\\">Surname is required</mat-error>\\r\\n                            <mat-error *ngIf=\\\"form.controls.surname.hasError('minlength')\\\">Surname isn't long enough, minimum of 3 characters</mat-error>\\r\\n                          </mat-form-field>\\r\\n                          <mat-form-field class=\\\"w-100\\\">\\r\\n                            <input matInput placeholder=\\\"ID Number\\\" formControlName=\\\"id\\\"  [(ngModel)] = \\\"SubmitData.IDnum\\\">\\r\\n                              <mat-error *ngIf=\\\"form.controls.id.errors?.required\\\">ID Number is required</mat-error>\\r\\n                              <mat-error *ngIf=\\\"form.controls.id.hasError('minlength')\\\">ID Number invalid</mat-error>\\r\\n                            </mat-form-field>\\r\\n                            <mat-form-field class=\\\"w-100\\\">\\r\\n                                <input matInput placeholder=\\\"Street Address\\\" formControlName=\\\"address\\\"  [(ngModel)] = \\\"SubmitData.Adress\\\">\\r\\n                                  <mat-error *ngIf=\\\"form.controls.address.errors?.required\\\">Address is required</mat-error>\\r\\n                                  <mat-error *ngIf=\\\"form.controls.address.hasError('minlength')\\\">Address invalid</mat-error>\\r\\n                            </mat-form-field>\\r\\n                            <mat-form-field class=\\\"w-100\\\">\\r\\n                                <input matInput placeholder=\\\"Phone Number\\\" formControlName=\\\"number\\\"  [(ngModel)] = \\\"SubmitData.Phone\\\">\\r\\n                                  <mat-error *ngIf=\\\"form.controls.number.errors?.required\\\">Phone Number is required</mat-error>\\r\\n                                  <mat-error *ngIf=\\\"form.controls.number.hasError('minlength')\\\">Phone Number invalid</mat-error>\\r\\n                                </mat-form-field>\\r\\n                          <mat-form-field class=\\\"w-100\\\">\\r\\n                              <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\"  [(ngModel)] = \\\"SubmitData.Email\\\">\\r\\n                              <mat-error *ngIf=\\\"form.controls.email.errors?.required\\\">Email is required</mat-error>\\r\\n                              <mat-error *ngIf=\\\"form.controls.email.hasError('invalidEmail')\\\">Invalid email address</mat-error>\\r\\n                          </mat-form-field>\\r\\n                          <mat-form-field class=\\\"w-100\\\">\\r\\n                              <input matInput placeholder=\\\"Password\\\" formControlName=\\\"password\\\" type=\\\"password\\\" minlength=\\\"6\\\"  [(ngModel)] = \\\"SubmitData.Password\\\">\\r\\n                              <mat-error *ngIf=\\\"form.controls.password.errors?.required\\\">Password is required</mat-error>\\r\\n                              <mat-error *ngIf=\\\"form.controls.password.hasError('minlength')\\\">Password isn't long enough, minimum of 6 characters</mat-error>\\r\\n                          </mat-form-field> \\r\\n                          <mat-form-field class=\\\"w-100\\\">\\r\\n                            <input matInput placeholder=\\\"Confirm Password\\\" formControlName=\\\"confirmPassword\\\" type=\\\"password\\\">\\r\\n                            <mat-error *ngIf=\\\"form.controls.confirmPassword.errors?.required\\\">Confirm Password is required</mat-error>\\r\\n                            <mat-error *ngIf=\\\"form.controls.confirmPassword.hasError('mismatchedPasswords')\\\">Passwords do not match</mat-error>\\r\\n                          </mat-form-field>\\r\\n\\r\\n\\r\\n                          \\r\\n                          <label for=\\\"file\\\">Profile photo</label>\\r\\n                            <input   type=\\\"file\\\" accept=\\\"image/*\\\" (change) = \\\"onSelectedFile($event)\\\" name=\\\"file\\\">\\r\\n\\r\\n                         \\r\\n                      </mat-card>\\r\\n                      <button mat-raised-button color=\\\"primary\\\" class=\\\"mat-elevation-z12 box-button\\\" type=\\\"submit\\\">SIGN UP</button>\\r\\n                  </mat-card-content>\\r\\n              </mat-card>\\r\\n              \\r\\n         </form>      \\r\\n    \\r\\n    </div>\\r\\n  \\r\\n  </mat-sidenav-container>\";","export class Register{\r\n    public Email: string;\r\n    public Password: string;\r\n    public Name: string;\r\n    public Surname: string;\r\n    public IDNum: number;\r\n    public Adress : string;\r\n    public DOB: Date;\r\n    public Phone : string;\r\n}","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup, FormBuilder, Validators} from '@angular/forms';\r\nimport { emailValidator, matchingPasswords } from '../../theme/utils/app-validators';\r\nimport { AppSettings } from '../../app.settings';\r\nimport { Settings } from '../../app.settings.model';\r\nimport { Register } from 'src/app/Models/register';\r\nimport { AngularFireStorage } from 'angularfire2/storage';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html'\r\n})\r\nexport class RegisterComponent {\r\n  public form:FormGroup;\r\n  public settings: Settings;\r\n  ref: any;\r\n  task: any;\r\n  uploadProgress: any;\r\n  downloadURL: any;\r\n  constructor(public appSettings:AppSettings, public fb: FormBuilder, public router:Router, private afStorage: AngularFireStorage){\r\n    this.settings = this.appSettings.settings; \r\n    this.form = this.fb.group({\r\n      'name': [null, Validators.compose([Validators.required, Validators.minLength(3)])],\r\n      'surname': [null, Validators.compose([Validators.required, Validators.minLength(3)])],\r\n      'id': [null, Validators.compose([Validators.required, Validators.minLength(13)])],\r\n      'number': [null, Validators.compose([Validators.required, Validators.minLength(10)])],\r\n      'city': [null, Validators.compose([Validators.required, Validators.minLength(3)])],\r\n      'address': [null, Validators.compose([Validators.required, Validators.minLength(3)])],\r\n      'postalCode': [null, Validators.compose([Validators.required, Validators.minLength(3)])],\r\n      'email': [null, Validators.compose([Validators.required, emailValidator])],\r\n      'password': ['', Validators.required],\r\n      'confirmPassword': ['', Validators.required]\r\n    },{validator: matchingPasswords('password', 'confirmPassword')});\r\n  }\r\n\r\n\r\nprivate SubmitData = new Register;\r\nprivate files = File;\r\n\r\n  public onSubmit(event) {\r\n    const randomId = Math.random().toString(36).substring(2);\r\n  this.ref = this.afStorage.ref(randomId);\r\n  this.task = this.ref.put(event.target.files[0]);\r\n  this.uploadProgress = this.task.percentageChanges();\r\n  this.downloadURL = this.task.downloadURL();\r\nalert(this.downloadURL);\r\n\r\n  }\r\n\r\n  onSelectedFile(event){\r\n    if (event.target.files.length > 0){\r\n      event.target.files[0].name = this.SubmitData.IDNum;\r\n       this.files = event.target.files[0];\r\n      \r\n    }\r\n  }\r\n\r\n\r\n\r\n  ngAfterViewInit(){\r\n    this.settings.loadingSpinner = false; \r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { RegisterComponent } from './register.component';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\n\r\n\r\nexport const routes = [\r\n  { path: '', component: RegisterComponent, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    FormsModule, \r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    ScrollingModule\r\n  ],\r\n  declarations: [\r\n    RegisterComponent\r\n  ]\r\n})\r\nexport class RegisterModule { }"],"sourceRoot":"webpack:///"}