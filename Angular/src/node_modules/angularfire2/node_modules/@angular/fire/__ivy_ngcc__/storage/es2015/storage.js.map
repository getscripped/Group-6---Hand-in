{"version":3,"sources":["D:/370/FinalFrontend/node_modules/angularfire2/node_modules/@angular/fire/storage/es2015/storage.js"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sHAkCE;iCAC+B,AAE9B;;;;;;;;;;;;;;;;;;;;;;;;;2DAMoB","file":"storage.js","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { Injectable, Inject, Optional, InjectionToken, NgZone, PLATFORM_ID } from '@angular/core';\nimport { createStorageRef } from './ref';\nimport { _firebaseAppFactory, FIREBASE_OPTIONS, FIREBASE_APP_NAME, ɵkeepUnstableUntilFirstFactory, ɵAngularFireSchedulers } from '@angular/fire';\nexport const StorageBucket = new InjectionToken('angularfire2.storageBucket');\nexport const BUCKET = StorageBucket;\nlet AngularFireStorage = class AngularFireStorage {\n    constructor(options, nameOrConfig, storageBucket, platformId, zone) {\n        this.schedulers = new ɵAngularFireSchedulers(zone);\n        this.keepUnstableUntilFirst = ɵkeepUnstableUntilFirstFactory(this.schedulers, platformId);\n        this.storage = zone.runOutsideAngular(() => {\n            const app = _firebaseAppFactory(options, zone, nameOrConfig);\n            return app.storage(storageBucket || undefined);\n        });\n    }\n    ref(path) {\n        return createStorageRef(this.storage.ref(path), this.schedulers, this.keepUnstableUntilFirst);\n    }\n    upload(path, data, metadata) {\n        const storageRef = this.storage.ref(path);\n        const ref = createStorageRef(storageRef, this.schedulers, this.keepUnstableUntilFirst);\n        return ref.put(data, metadata);\n    }\n};\nAngularFireStorage = __decorate([\n    Injectable(),\n    __param(0, Inject(FIREBASE_OPTIONS)),\n    __param(1, Optional()), __param(1, Inject(FIREBASE_APP_NAME)),\n    __param(2, Optional()), __param(2, Inject(BUCKET)),\n    __param(3, Inject(PLATFORM_ID)),\n    __metadata(\"design:paramtypes\", [Object, Object, Object, Object,\n        NgZone])\n], AngularFireStorage);\nexport { AngularFireStorage };\n"]}