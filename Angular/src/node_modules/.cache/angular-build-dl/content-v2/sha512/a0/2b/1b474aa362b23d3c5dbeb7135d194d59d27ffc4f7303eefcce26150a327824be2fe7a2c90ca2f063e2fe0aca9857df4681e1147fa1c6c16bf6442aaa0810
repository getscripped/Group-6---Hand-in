{"version":3,"sources":["./src/app/pages/register/register.component.html","./src/app/Models/register.ts","./src/app/pages/register/register.component.ts","./src/app/pages/register/register.module.ts"],"names":[],"mappings":"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","file":"pages-register-register-module-es2015.js","sourcesContent":["export default \"<mat-sidenav-container>\\r\\n  \\r\\n    <div fxLayout=\\\"row\\\"  fxLayoutAlign=\\\"center center\\\" class=\\\"h-100\\\"  style=\\\"overflow: auto\\\">      \\r\\n  \\r\\n         <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\" fxFlex=\\\"100\\\"  fxFlex.gt-sm=\\\"40\\\"  >\\r\\n  \\r\\n              <mat-card class=\\\"p-0 mat-elevation-z24 box register\\\">\\r\\n                  <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"bg-primary box-header\\\">\\r\\n                      <button mat-fab color=\\\"accent\\\" class=\\\"mat-elevation-z12\\\" (click)=\\\"onSubmit();\\\">\\r\\n                          <mat-icon>person_add</mat-icon>\\r\\n                      </button>\\r\\n                      <a mat-button routerLink=\\\"/login\\\">Already have an account? Sign in!</a>\\r\\n                      \\r\\n                  </div>\\r\\n                  <mat-card-content fxLayout=\\\"column\\\"  fxLayoutAlign=\\\"end center\\\"  class=\\\"box-content\\\">\\r\\n                  \\r\\n                      <mat-card fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"mat-elevation-z12 box-content-inner\\\">\\r\\n                        <h1>Register Farmer</h1>  \\r\\n                        \\r\\n                        <img [src]=\\\"imageSrc\\\" *ngIf=\\\"imageSrc\\\" style=\\\"height: 100px; width:100px; position: relative;float: right;overflow: hidden;\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label for=\\\"file\\\" style=\\\"text-align:center;display: block;\\\">Profile Photo</label>\\r\\n                          <input \\r\\n                              formControlName=\\\"file\\\"\\r\\n                              id=\\\"file\\\" \\r\\n                              type=\\\"file\\\" \\r\\n                              class=\\\"form-control\\\"\\r\\n                              (change)=\\\"onSelectedFile($event)\\\">\\r\\n                          \\r\\n                      </div>\\r\\n                      \\r\\n                     \\r\\n                      \\r\\n\\r\\n                         \\r\\n                          <mat-form-field class=\\\"w-100\\\">\\r\\n                            <input matInput placeholder=\\\"Full Name\\\" (keypress)=\\\"omit_special_char($event)\\\" formControlName=\\\"name\\\" [(ngModel)] = \\\"SubmitData.Name\\\" required>\\r\\n                            <mat-error *ngIf=\\\"form.controls.name.errors?.required\\\">Full Name is required</mat-error>\\r\\n                            <mat-error *ngIf=\\\"form.controls.name.hasError('minlength')\\\">Full Name isn't long enough, minimum of 3 characters</mat-error>\\r\\n                          </mat-form-field>\\r\\n                          <mat-form-field class=\\\"w-100\\\">\\r\\n                          <input matInput placeholder=\\\"Surname\\\" formControlName=\\\"surname\\\" (keypress)=\\\"omit_special_char($event)\\\"  [(ngModel)] = \\\"SubmitData.Surname\\\" required>\\r\\n                            <mat-error *ngIf=\\\"form.controls.surname.errors?.required\\\">Surname is required</mat-error>\\r\\n                            <mat-error *ngIf=\\\"form.controls.surname.hasError('minlength')\\\">Surname isn't long enough, minimum of 3 characters</mat-error>\\r\\n                          </mat-form-field>\\r\\n                          <mat-form-field class=\\\"w-100\\\">\\r\\n                            <input matInput placeholder=\\\"ID Number\\\" formControlName=\\\"id\\\" (keypress)=\\\"omit_special_char_Let($event)\\\" maxlength=\\\"13\\\"  [(ngModel)] = \\\"SubmitData.IDNum\\\" (change) = \\\"checkID()\\\" required>\\r\\n                              <mat-error *ngIf=\\\"form.controls.id.errors?.required\\\">ID Number is required</mat-error>\\r\\n                              <mat-error *ngIf=\\\"form.controls.id.hasError('minlength')\\\">ID Number invalid</mat-error>\\r\\n                            </mat-form-field>\\r\\n                            <mat-form-field class=\\\"w-100\\\">\\r\\n                                <input matInput placeholder=\\\"Street Address\\\" formControlName=\\\"address\\\" (keypress)=\\\"omit_special_char($event)\\\"  [(ngModel)] = \\\"SubmitData.Adress\\\" required>\\r\\n                                  <mat-error *ngIf=\\\"form.controls.address.errors?.required\\\">Address is required</mat-error>\\r\\n                                  <mat-error *ngIf=\\\"form.controls.address.hasError('minlength')\\\">Address invalid</mat-error>\\r\\n                            </mat-form-field>\\r\\n                            <mat-form-field class=\\\"w-100\\\">\\r\\n                                <input matInput placeholder=\\\"Phone Number\\\" maxlength=\\\"10\\\" formControlName=\\\"number\\\" (keypress)=\\\"omit_special_char($event)\\\"  [(ngModel)] = \\\"SubmitData.Phone\\\" required>\\r\\n                                  <mat-error *ngIf=\\\"form.controls.number.errors?.required\\\">Phone Number is required</mat-error>\\r\\n                                  <mat-error *ngIf=\\\"form.controls.number.hasError('minlength')\\\">Phone Number invalid</mat-error>\\r\\n                                </mat-form-field>\\r\\n                          <mat-form-field class=\\\"w-100\\\">\\r\\n                              <input matInput placeholder=\\\"Email\\\" type=\\\"email\\\" formControlName=\\\"email\\\"  [(ngModel)] = \\\"SubmitData.Email\\\" (blur) = \\\"CheckEmail()\\\" required>\\r\\n                              <mat-error *ngIf=\\\"form.controls.email.errors?.required\\\">Email is required</mat-error>\\r\\n                              <mat-error *ngIf=\\\"form.controls.email.hasError('invalidEmail')\\\">Invalid email address</mat-error>\\r\\n                          </mat-form-field>\\r\\n                          <mat-form-field class=\\\"w-100\\\">\\r\\n                              <input matInput placeholder=\\\"Password\\\" formControlName=\\\"password\\\" type=\\\"password\\\" minlength=\\\"6\\\"  [(ngModel)] = \\\"SubmitData.Password\\\" required>\\r\\n                              <mat-error *ngIf=\\\"form.controls.password.errors?.required\\\">Password is required</mat-error>\\r\\n                              <mat-error *ngIf=\\\"form.controls.password.hasError('minlength')\\\">Password isn't long enough, minimum of 6 characters</mat-error>\\r\\n                          </mat-form-field> \\r\\n                          <mat-form-field class=\\\"w-100\\\">\\r\\n                            <input matInput placeholder=\\\"Confirm Password\\\" formControlName=\\\"confirmPassword\\\" type=\\\"password\\\" required>\\r\\n                            <mat-error *ngIf=\\\"form.controls.confirmPassword.errors?.required\\\">Confirm Password is required</mat-error>\\r\\n                            <mat-error *ngIf=\\\"form.controls.confirmPassword.hasError('mismatchedPasswords')\\\">Passwords do not match</mat-error>\\r\\n                          </mat-form-field>\\r\\n\\r\\n\\r\\n                          \\r\\n                          \\r\\n                         \\r\\n                      </mat-card>\\r\\n                      <button mat-raised-button color=\\\"primary\\\" class=\\\"mat-elevation-z12 box-button\\\" type=\\\"submit\\\" *ngIf = \\\"submit1 && submit2\\\">SIGN UP</button>\\r\\n                  </mat-card-content>\\r\\n              </mat-card>\\r\\n              \\r\\n         </form>   \\r\\n    \\r\\n    \\r\\n    </div>\\r\\n  \\r\\n  </mat-sidenav-container>\\r\\n\\r\\n\";","export class Register{\r\n    constructor(){}\r\n    public Email: string;\r\n    public Password: string;\r\n    public Name: string;\r\n    public Surname: string;\r\n    public IDNum: string;\r\n    public Adress : string;\r\n    public DOB: Date;\r\n    public Phone : string;\r\n    public Image: string;\r\n}","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup, FormBuilder, Validators} from '@angular/forms';\r\nimport { emailValidator, matchingPasswords } from '../../theme/utils/app-validators';\r\nimport { AppSettings } from '../../app.settings';\r\nimport { Settings } from '../../app.settings.model';\r\nimport { Register } from 'src/app/Models/register';\r\nimport { AngularFireStorage, AngularFireUploadTask  } from '@angular/fire/storage';   //   import <<<<\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html'\r\n})\r\nexport class RegisterComponent {\r\n  public form:FormGroup;\r\n  public settings: Settings;\r\n\r\n  imageSrc: string;\r\n  basePath = '/images';                       //  <<<<<<< Image base path\r\n  downloadableURL = '';                      //  <<<<<<<   URL for firebase image view\r\n  task: AngularFireUploadTask;               //  <<<<<<< Task for firebase upload\r\n\r\n  submit1: boolean = false;\r\n  submit2: boolean = false;\r\n\r\n\r\n\r\n\r\n\r\n\r\n  constructor(public appSettings:AppSettings, public fb: FormBuilder, public router:Router,private fireStorage: AngularFireStorage,private http: HttpClient){\r\n    this.settings = this.appSettings.settings; \r\n    this.form = this.fb.group({\r\n      'name': [null, Validators.compose([Validators.required, Validators.minLength(3)])],\r\n      'surname': [null, Validators.compose([Validators.required, Validators.minLength(3)])],\r\n      'id': [null, Validators.compose([Validators.required, Validators.minLength(13)])],\r\n      'number': [null, Validators.compose([Validators.required, Validators.minLength(10)])],\r\n      'city': [null, Validators.compose([Validators.required, Validators.minLength(3)])],\r\n      'address': [null, Validators.compose([Validators.required, Validators.minLength(3)])],\r\n      'postalCode': [null, Validators.compose([Validators.required, Validators.minLength(3)])],\r\n      'email': [null, Validators.compose([Validators.required, emailValidator])],\r\n      'password': ['', Validators.required],\r\n      'confirmPassword': ['', Validators.required]\r\n    },{validator: matchingPasswords('password', 'confirmPassword')});\r\n  }\r\n\r\n\r\n SubmitData = new Register(); //  <<< Submitted from the form\r\n PostData = new Register();   //  <<< To be Submitted to the API\r\n\r\nfile: any; // <<< Photo placeholder to be sent to firebase\r\nprogressValue: Observable<number>; //   <<<  Progress bar for image upload\r\n\r\n//=================================Initial submit for image upload to firebase========================\r\n  public async onSubmit() {\r\n\r\n     \r\n    if (this.file) {\r\n      \r\n      \r\n       const filePath = `${this.basePath}/${this.SubmitData.IDNum}`;  // path at which image will be stored in the firebase storage\r\n       this.task =  this.fireStorage.upload(filePath, this.file);    // upload task\r\n \r\n       // this.progress = this.snapTask.percentageChanges();\r\n \r\n       this.progressValue = this.task.percentageChanges();\r\n       (await this.task).ref.getDownloadURL().then(url => \r\n        {\r\n          this.downloadableURL = url;// <<< url is found here\r\n          this.postData()\r\n        });  \r\n     } else {  \r\n       this.downloadableURL = ''; \r\n       this.postData();\r\n      }\r\n \r\n \r\n       \r\n   }\r\n\r\n   //=================================Secondary functio to submit to API===========================\r\n  postData(){\r\n    \r\n    this.PostData = this.SubmitData;\r\n    this.PostData.Image = this.downloadableURL;   //   <<< Set firebase URl for database\r\n    this.http.post<Register>(\"http://35.178.156.37/api/User/Register\", this.PostData).subscribe(\r\n      success=> {\r\n        alert(\"Registration succesfull!\");\r\n\r\n      }\r\n    );\r\n  }\r\n//=================================================================================================\r\n  onSelectedFile(event){\r\n    \r\n    const reader = new FileReader();\r\n    \r\n    if(event.target.files && event.target.files.length) {\r\n      const [file] = event.target.files;\r\n      reader.readAsDataURL(file);\r\n    \r\n      reader.onload = () => {\r\n   \r\n        this.imageSrc = reader.result as string;\r\n     \r\n        this.form.patchValue({\r\n          fileSource: reader.result\r\n        });\r\n   \r\n      };\r\n   \r\n    }\r\n    \r\n       this.file = event.target.files[0];\r\n       this.file.name = this.SubmitData.IDNum;\r\n     \r\n    \r\n  }\r\n\r\n\r\n  //==================================Post to Api to check if ID exists=============================\r\n  checkID(){\r\n\r\n    if(this.SubmitData.IDNum.length == 13){\r\n    this.http.post(\"http://35.178.156.37/api/UserExists\", this.SubmitData.IDNum).subscribe(  //  <<< Post for ID exists check\r\n      success => {\r\n        this.submit1 = true; // <<< Button shows if ID not found\r\n      },\r\n\r\n      error =>{\r\n        alert(\"Id number is already in use\");\r\n        this.SubmitData.IDNum = null;\r\n        this.submit1 = false;   // <<< Button hides when ID found\r\n      }\r\n      \r\n    );\r\n    }else{\r\n      this.submit1 = false;   // <<< Button hide\r\n    }\r\n  }\r\n\r\n//==================================Post to api to see if email exists=============================\r\n  CheckEmail(){\r\n\r\n    \r\n    this.http.post(\"http://35.178.156.37/api/UserExists\", this.SubmitData.Email).subscribe( //  <<< Post for Email exists check\r\n      success => {\r\n        this.submit2 = true; // <<< Button shows if ID not found\r\n        if (this.SubmitData.Email.length == 0){\r\n          this.submit2 = false; // <<< Button hides \r\n        }\r\n      },\r\n\r\n      error =>{\r\n        alert(\"Email is already in use\");\r\n        this.SubmitData.Email = null;\r\n        console.log(error);\r\n        this.submit2 = false; // <<< Button hides when ID found\r\n      }\r\n      \r\n    );\r\n\r\n  }\r\n\r\n\r\n  //====================================Loading bar for file upload===============================\r\n  ngAfterViewInit(){\r\n    this.settings.loadingSpinner = false; \r\n  }\r\n  //===========================================REGEX to avoid SQL injection=======================\r\n  omit_special_char(event)\r\n  {   \r\n   var k;  \r\n   k = event.charCode;  //         k = event.keyCode;  (Both can be used)\r\n   return((k > 64 && k < 91) || (k > 96 && k < 123) || k == 8 || k == 32 || (k >= 48 && k <= 57)); \r\n  }\r\n\r\n  //============================================REGEX only to allow numbers=======================\r\n  omit_special_char_Let(event)\r\n  {   \r\n   var k;  \r\n   k = event.charCode;  //         k = event.keyCode;  (Both can be used)\r\n   return( (k >= 48 && k <= 57)); \r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { RegisterComponent } from './register.component';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\n\r\n\r\nexport const routes = [\r\n  { path: '', component: RegisterComponent, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    FormsModule, \r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    ScrollingModule\r\n  ],\r\n  declarations: [\r\n    RegisterComponent\r\n  ]\r\n})\r\nexport class RegisterModule { }"],"sourceRoot":"webpack:///"}