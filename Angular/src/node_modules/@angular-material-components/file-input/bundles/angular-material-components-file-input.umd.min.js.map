{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://@angular-material-components/file-input/lib/file-input.component.ts","ng://@angular-material-components/file-input/lib/file-input.module.ts","ng://@angular-material-components/file-input/lib/file-input-helper.ts","ng://@angular-material-components/file-input/lib/validators/max-size.validator.ts","ng://@angular-material-components/file-input/lib/validators/accept.validator.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","nextUniqueId","NgxMatFileInputIcon","Directive","args","selector","__extends","__","this","constructor","prototype","create","tslib_1.__extends","_MatInputMixinBase","defineProperty","NgxMatFileInputComponent","ngControl","disabled","_disabled","value","coerceBooleanProperty","focused","stateChanges","next","_id","_uid","_multiple","_required","_value","_readonly","_accept","ngOnChanges","ngOnDestroy","complete","ngDoCheck","updateErrorState","writeValue","_updateInputValue","registerOnChange","fn","_onChange","registerOnTouched","_onTouched","setDisabledState","isDisabled","focus","options","_inputValueRef","nativeElement","_focusChanged","isFocused","readonly","_markAsTouched","_cd","markForCheck","_isBadInput","validity","badInput","autofilled","empty","setDescribedByIds","ids","_ariaDescribedby","join","openFilePicker","event","_inputFileRef","click","preventDefault","stopPropagation","handleFiles","filelist","length","files","i","push","item","_resetInputFile","multiple","onContainerClick","text","isArray","map","x","name","separator","Component","template","encapsulation","ViewEncapsulation","None","host","class","providers","provide","MatFormFieldControl","useExisting","forwardRef","exportAs","ElementRef","Platform","ChangeDetectorRef","NgControl","decorators","type","Optional","Self","NgForm","FormGroupDirective","ErrorStateMatcher","ViewChild","ContentChild","Input","_elementRef","_platform","_parentForm","_parentFormGroup","_defaultErrorStateMatcher","_this","_super","call","color","fileNames","Subject","controlType","placeholder","id","valueAccessor","NgxMatFileInputModule","NgModule","declarations","imports","CommonModule","MatButtonModule","MatIconModule","MatFormFieldModule","MatInputModule","exports","calculFileSize","number","toFixed","MaxSizeValidator","max","ctrl","Number","isNaN","sumSize","size","reduce","a","maxSize","AcceptValidator","accept","includes"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport { ChangeDetectorRef, Component, DoCheck, ElementRef, forwardRef, Input, OnDestroy, Optional, Self, ViewChild, ViewEncapsulation, Directive, ContentChild } from '@angular/core';\r\nimport { AbstractControl, ControlValueAccessor, FormGroupDirective, NgControl, NgForm, ValidatorFn, Validators } from '@angular/forms';\r\nimport { CanUpdateErrorState, ErrorStateMatcher, ThemePalette } from '@angular/material/core';\r\nimport { MatFormFieldControl } from '@angular/material/form-field';\r\nimport { _MatInputMixinBase } from '@angular/material/input';\r\nimport { Subject } from 'rxjs';\r\nimport { FileOrArrayFile } from './file-input-type';\r\n\r\nlet nextUniqueId = 0;\r\n\r\n@Directive({\r\n  selector: '[ngxMatFileInputIcon]'\r\n})\r\nexport class NgxMatFileInputIcon { }\r\n\r\n@Component({\r\n  selector: 'ngx-mat-file-input',\r\n  templateUrl: 'file-input.component.html',\r\n  styleUrls: ['file-input.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  host: {\r\n    'class': 'ngx-mat-file-input'\r\n  },\r\n  providers: [\r\n    { provide: MatFormFieldControl, useExisting: forwardRef(() => NgxMatFileInputComponent) }\r\n  ],\r\n  exportAs: 'ngx-mat-file-input'\r\n})\r\nexport class NgxMatFileInputComponent extends _MatInputMixinBase implements MatFormFieldControl<FileOrArrayFile>,\r\n  OnDestroy, DoCheck, CanUpdateErrorState, ControlValueAccessor {\r\n\r\n  @ViewChild('inputFile') private _inputFileRef: ElementRef;\r\n  @ViewChild('inputValue') private _inputValueRef: ElementRef;\r\n\r\n  /** Custom icon set by the consumer. */\r\n  @ContentChild(NgxMatFileInputIcon) _customIcon: NgxMatFileInputIcon;\r\n\r\n  @Input() color: ThemePalette = 'primary';\r\n\r\n  public fileNames: string = null;\r\n\r\n  protected _uid = `ngx-mat-fileinput-${nextUniqueId++}`;\r\n  protected _previousNativeValue: any;\r\n  _ariaDescribedby: string;\r\n\r\n  readonly stateChanges: Subject<void> = new Subject<void>();\r\n  focused: boolean = false;\r\n  errorState: boolean;\r\n  controlType: string = 'ngx-mat-file-input';\r\n  autofilled: boolean = false;\r\n\r\n  /** Function when touched */\r\n  _onTouched = () => { };\r\n\r\n  /** Function when changed */\r\n  _onChange: (value: FileOrArrayFile) => void = () => { };\r\n\r\n  @Input()\r\n  get disabled(): boolean {\r\n    if (this.ngControl && this.ngControl.disabled !== null) {\r\n      return this.ngControl.disabled;\r\n    }\r\n    return this._disabled;\r\n  }\r\n  set disabled(value: boolean) {\r\n    this._disabled = coerceBooleanProperty(value);\r\n    if (this.focused) {\r\n      this.focused = false;\r\n      this.stateChanges.next();\r\n    }\r\n  }\r\n  protected _disabled = false;\r\n\r\n  @Input()\r\n  get id(): string { return this._id; }\r\n  set id(value: string) { this._id = value || this._uid; }\r\n  protected _id: string;\r\n\r\n  @Input()\r\n  get multiple(): boolean { return this._multiple; }\r\n  set multiple(value: boolean) {\r\n    this._multiple = coerceBooleanProperty(value);\r\n  }\r\n  protected _multiple = false;\r\n\r\n  @Input() placeholder: string = 'Choose a file';\r\n  @Input() separator: string = ',';\r\n\r\n  @Input()\r\n  get required(): boolean { return this._required; }\r\n  set required(value: boolean) { this._required = coerceBooleanProperty(value); }\r\n  protected _required = false;\r\n\r\n  @Input() errorStateMatcher: ErrorStateMatcher;\r\n\r\n  @Input()\r\n  get value(): FileOrArrayFile { return this._value; }\r\n  set value(value: FileOrArrayFile) {\r\n    this._value = value;\r\n  }\r\n  protected _value: FileOrArrayFile;\r\n\r\n  @Input()\r\n  get readonly(): boolean { return this._readonly; }\r\n  set readonly(value: boolean) { this._readonly = coerceBooleanProperty(value); }\r\n  private _readonly = true;\r\n\r\n  /**\r\n   * Limiting accepted file types\r\n   * Example: accept=\"image/png, image/jpeg\" or accept=\".png, .jpg, .jpeg\" â Accept PNG or JPEG files.\r\n   */\r\n  @Input()\r\n  get accept(): string { return this._accept; }\r\n  set accept(value: string) {\r\n    this._accept = value;\r\n  }\r\n  private _accept: string;\r\n\r\n  constructor(protected _elementRef: ElementRef<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>,\r\n    protected _platform: Platform,\r\n    private _cd: ChangeDetectorRef,\r\n    @Optional() @Self() public ngControl: NgControl,\r\n    @Optional() _parentForm: NgForm,\r\n    @Optional() _parentFormGroup: FormGroupDirective,\r\n    _defaultErrorStateMatcher: ErrorStateMatcher) {\r\n    super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\r\n\r\n    this.id = this.id;\r\n\r\n    if (this.ngControl) {\r\n      this.ngControl.valueAccessor = this;\r\n    }\r\n\r\n  }\r\n\r\n\r\n  ngOnChanges() {\r\n    this.stateChanges.next();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.stateChanges.complete();\r\n  }\r\n\r\n  ngDoCheck() {\r\n    if (this.ngControl) {\r\n      this.updateErrorState();\r\n    }\r\n  }\r\n\r\n  // Implemented as part of ControlValueAccessor.\r\n  writeValue(value: FileOrArrayFile): void {\r\n    this._updateInputValue(value);\r\n  }\r\n\r\n  // Implemented as part of ControlValueAccessor.\r\n  registerOnChange(fn: (value: any) => void): void {\r\n    this._onChange = fn;\r\n  }\r\n\r\n  // Implemented as part of ControlValueAccessor.\r\n  registerOnTouched(fn: () => void): void {\r\n    this._onTouched = fn;\r\n  }\r\n\r\n  // Implemented as part of ControlValueAccessor.\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n    this.stateChanges.next();\r\n  }\r\n\r\n  /** Focuses the input. */\r\n  focus(options?: FocusOptions): void {\r\n    this._inputValueRef.nativeElement.focus(options);\r\n  }\r\n\r\n  _focusChanged(isFocused: boolean) {\r\n    if (isFocused !== this.focused && (!this.readonly || !isFocused)) {\r\n      this.focused = isFocused;\r\n      this.stateChanges.next();\r\n    }\r\n\r\n  }\r\n\r\n  /** Mark the field as touched */\r\n  _markAsTouched() {\r\n    this._onTouched();\r\n    this._cd.markForCheck();\r\n    this.stateChanges.next();\r\n  }\r\n\r\n  protected _isBadInput() {\r\n    let validity = (this._inputValueRef.nativeElement as HTMLInputElement).validity;\r\n    return validity && validity.badInput;\r\n  }\r\n\r\n  get empty(): boolean {\r\n    return !this._inputValueRef.nativeElement.value && !this._isBadInput() &&\r\n      !this.autofilled;\r\n  }\r\n\r\n  get shouldLabelFloat(): boolean {\r\n    return this.focused || !this.empty;\r\n  }\r\n\r\n  setDescribedByIds(ids: string[]) {\r\n    this._ariaDescribedby = ids.join(' ');\r\n  }\r\n\r\n  openFilePicker(event?: MouseEvent) {\r\n    this._inputFileRef.nativeElement.click();\r\n    if (event) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n    this._markAsTouched();\r\n  }\r\n\r\n  handleFiles(filelist: FileList) {\r\n    if (filelist.length > 0) {\r\n      const files: Array<File> = new Array();\r\n      for (let i = 0; i < filelist.length; i++) {\r\n        files.push(filelist.item(i));\r\n      }\r\n      this._updateInputValue(files);\r\n      this._resetInputFile();\r\n      this._onChange(this.multiple ? files : files[0]);\r\n    }\r\n  }\r\n\r\n  /** Handles a click on the control's container. */\r\n  onContainerClick(event: MouseEvent) { };\r\n\r\n  private _resetInputFile() {\r\n    this._inputFileRef.nativeElement.value = \"\";\r\n  }\r\n\r\n  private _updateInputValue(files: FileOrArrayFile) {\r\n    let text = null;\r\n    if (files) {\r\n      if (Array.isArray(files)) {\r\n        text = this._multiple\r\n          ? files.map(x => x.name).join(this.separator)\r\n          : files[0].name;\r\n      } else {\r\n        text = files.name != null ? files.name : null;\r\n      }\r\n    }\r\n\r\n    this._inputValueRef.nativeElement.value = text;\r\n  }\r\n\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { NgxMatFileInputComponent, NgxMatFileInputIcon } from './file-input.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    NgxMatFileInputComponent,\r\n    NgxMatFileInputIcon\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    MatInputModule\r\n  ],\r\n  exports: [\r\n    NgxMatFileInputComponent,\r\n    NgxMatFileInputIcon\r\n  ]\r\n})\r\nexport class NgxMatFileInputModule { }\r\n","export function calculFileSize(number: number): string {\r\n    if (number < 1024) {\r\n        return number + 'bytes';\r\n    } else if (number >= 1024 && number < 1048576) {\r\n        return (number / 1024).toFixed(1) + 'KB';\r\n    } else if (number >= 1048576) {\r\n        return (number / 1048576).toFixed(1) + 'MB';\r\n    }\r\n}","import { AbstractControl, ValidatorFn, ValidationErrors } from '@angular/forms';\r\n\r\n/**\r\n * Validator for size of file\r\n * @param max Max of size of file (in bytes)\r\n */\r\nexport function MaxSizeValidator(max: number): ValidatorFn {\r\n    return (ctrl: AbstractControl): ValidationErrors | null => {\r\n        max = Number(max);\r\n        if (isNaN(max)) {\r\n            throw 'MaxSizeValidator: max of size of file is invalid';\r\n        }\r\n        if (!ctrl.value) return null;\r\n        let files: File[] = ctrl.value;\r\n        if (!Array.isArray(ctrl.value)) {\r\n            files = [ctrl.value];\r\n        }\r\n        if(!files.length) return null;\r\n        const add = (a: any, b: any): number => a + b;\r\n        const sumSize = files.map(x => x.size).reduce(add);\r\n        if (sumSize > max) {\r\n            return {\r\n                maxSize: true\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n}","import { AbstractControl, ValidatorFn, ValidationErrors } from '@angular/forms';\r\n\r\n/**\r\n * \r\n * @param accept Allowable type of file\r\n */\r\nexport function AcceptValidator(accept: string): ValidatorFn {\r\n    return (ctrl: AbstractControl): ValidationErrors | null => {\r\n        if (!accept) {\r\n            throw ('AcceptValidator: allowable type of file can not be empty');\r\n        }\r\n\r\n        if (ctrl.value == null) return null;\r\n\r\n        if (!accept.includes(ctrl.value.type)) {\r\n            return {\r\n                accept: true\r\n            };\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n}"]}